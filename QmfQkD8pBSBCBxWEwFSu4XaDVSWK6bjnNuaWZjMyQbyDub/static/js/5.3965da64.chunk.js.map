{"version":3,"sources":["../node_modules/zcash-bitcore-lib/node_modules/lodash/index.js","../node_modules/zcash-bitcore-lib/lib/util/preconditions.js","../node_modules/bitcoinjs-lib/src/script.js","../node_modules/zcash-bitcore-lib/lib/util/buffer.js","../node_modules/zcash-bitcore-lib/lib/util/js.js","../node_modules/typeforce/index.js","../node_modules/zcash-bitcore-lib/lib/crypto/bn.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/zcash-bitcore-lib/lib/crypto/hash.js","../node_modules/zcash-bitcore-lib/lib/encoding/bufferwriter.js","../node_modules/bitcoinjs-lib/src/networks.js","../node_modules/zcash-bitcore-lib/lib/errors/index.js","../node_modules/zcash-bitcore-lib/lib/crypto/signature.js","../node_modules/zcash-bitcore-lib/lib/script/index.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/bitcoinjs-lib/src/types.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic.js","../node_modules/zcash-bitcore-lib/lib/publickey.js","../node_modules/zcash-bitcore-lib/node_modules/bn.js/lib/bn.js","../node_modules/zcash-bitcore-lib/node_modules/inherits/inherits_browser.js","../node_modules/bitcoinjs-lib/src/crypto.js","../node_modules/zcash-bitcore-lib/lib/encoding/bufferreader.js","../node_modules/zcash-bitcore-lib/lib/transaction/sighash.js","../node_modules/zcash-bitcore-lib/lib/transaction/output.js","../node_modules/tiny-secp256k1/ecurve.js","../node_modules/randombytes/browser.js","../node_modules/bitcoinjs-lib/src/payments/lazy.js","../node_modules/zcash-bitcore-lib/lib/networks.js","../node_modules/zcash-bitcore-lib/lib/address.js","../node_modules/zcash-bitcore-lib/lib/crypto/point.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/bs58check/index.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/index.js","../node_modules/zcash-bitcore-lib/lib/encoding/base58check.js","../node_modules/zcash-bitcore-lib/lib/transaction/input/input.js","../node_modules/zcash-bitcore-lib/lib/transaction/signature.js","../node_modules/rlp/dist/index.js","../node_modules/ipld-ethereum/util/cidFromHash.js","../node_modules/ipld-ethereum/util/createResolver.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/ipld-git/src/util/util.js","../node_modules/smart-buffer/build/smartbuffer.js","../node_modules/parse-asn1/index.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/zcash-bitcore-lib/lib/privatekey.js","../node_modules/zcash-bitcore-lib/lib/encoding/base58.js","../node_modules/zcash-bitcore-lib/lib/transaction/index.js","../node_modules/zcash-bitcore-lib/lib/crypto/random.js","../node_modules/zcash-bitcore-lib/lib/block/blockheader.js","../node_modules/ethereumjs-util/dist/index.js","../node_modules/ipld-bitcoin/src/resolver.js","../node_modules/hash.js/lib/hash.js","../node_modules/typeforce/native.js","../node_modules/bitcoinjs-lib/src/transaction.js","../node_modules/bech32/index.js","../node_modules/bitcoinjs-lib/src/payments/index.js","../node_modules/bitcoinjs-lib/src/templates/multisig/index.js","../node_modules/bitcoinjs-lib/src/templates/pubkey/index.js","../node_modules/bitcoinjs-lib/src/templates/pubkeyhash/index.js","../node_modules/ipld-zcash/src/resolver.js","../node_modules/crypto-browserify/index.js","../node_modules/des.js/lib/des.js","../node_modules/browserify-rsa/index.js","../node_modules/zcash-bitcore-lib/lib/opcode.js","../node_modules/zcash-bitcore-lib/lib/transaction/transaction.js","../node_modules/zcash-bitcore-lib/lib/transaction/input/index.js","../node_modules/zcash-bitcore-lib/lib/unit.js","../node_modules/zcash-bitcore-lib/lib/hdkeycache.js","../node_modules/ipld-ethereum/util/createTrieResolver.js","../node_modules/async/eachOf.js","../node_modules/ipld-bitcoin/src/util.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/brorand/index.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/typeforce/errors.js","../node_modules/bitcoinjs-lib/src/script_number.js","../node_modules/varuint-bitcoin/index.js","../node_modules/bitcoinjs-lib/src/ecpair.js","../node_modules/wif/index.js","../node_modules/bitcoinjs-lib/src/address.js","../node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/output.js","../node_modules/bitcoinjs-lib/src/templates/witnessscripthash/output.js","../node_modules/ipld-git/src/util.js","../node_modules/ipld-git/src/resolver.js","../node_modules/ipld-zcash/src/util.js","../node_modules/zcash-bitcore-lib/lib/crypto/ecdsa.js","../node_modules/pbkdf2/browser.js","../node_modules/pbkdf2/lib/precondition.js","../node_modules/pbkdf2/lib/default-encoding.js","../node_modules/pbkdf2/lib/sync-browser.js","../node_modules/diffie-hellman/lib/generatePrime.js","../node_modules/miller-rabin/lib/mr.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/buffer.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/constants/index.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/decoders/der.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/encoders/der.js","../node_modules/public-encrypt/mgf.js","../node_modules/public-encrypt/xor.js","../node_modules/public-encrypt/withPublic.js","../node_modules/zcash-bitcore-lib/node_modules/bs58/lib/bs58.js","../node_modules/zcash-bitcore-lib/lib/script/script.js","../node_modules/zcash-bitcore-lib/lib/transaction/unspentoutput.js","../node_modules/zcash-bitcore-lib/lib/block/merkleblock.js","../node_modules/zcash-bitcore-lib/lib/hdprivatekey.js","../node_modules/zcash-bitcore-lib/lib/hdpublickey.js","../node_modules/ipld-ethereum/eth-account-snapshot/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/ipld-ethereum/util/createIsLink.js","../node_modules/ipld-ethereum/util/createUtil.js","../node_modules/ipld-ethereum/util/cidFromEthObj.js","../node_modules/ipld-ethereum/eth-block/index.js","../node_modules/ethereumjs-block/header.js","../node_modules/async/each.js","../node_modules/ipld-ethereum/eth-tx/index.js","../node_modules/async/doUntil.js","../node_modules/async/doWhilst.js","../node_modules/pull-traverse/index.js","../node_modules/async/map.js","../node_modules/async/internal/doParallel.js","../node_modules/async/eachOfLimit.js","../node_modules/async/internal/map.js","../node_modules/merge-options/index.js","../node_modules/is-plain-obj/index.js","../node_modules/ipld-raw/src/index.js","../node_modules/bitcoinjs-lib/src/index.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/tiny-secp256k1/rfc6979.js","../node_modules/pushdata-bitcoin/index.js","../node_modules/typeforce/extra.js","../node_modules/bitcoin-ops/map.js","../node_modules/bitcoinjs-lib/src/script_signature.js","../node_modules/bitcoinjs-lib/src/block.js","../node_modules/merkle-lib/fastRoot.js","../node_modules/bitcoinjs-lib/src/bufferutils.js","../node_modules/bs58check/base.js","../node_modules/bitcoinjs-lib/src/transaction_builder.js","../node_modules/bitcoinjs-lib/src/payments/embed.js","../node_modules/bitcoinjs-lib/src/payments/p2ms.js","../node_modules/bitcoinjs-lib/src/payments/p2pk.js","../node_modules/bitcoinjs-lib/src/payments/p2pkh.js","../node_modules/bitcoinjs-lib/src/payments/p2sh.js","../node_modules/bitcoinjs-lib/src/payments/p2wpkh.js","../node_modules/bitcoinjs-lib/src/payments/p2wsh.js","../node_modules/bitcoinjs-lib/src/classify.js","../node_modules/bitcoinjs-lib/src/templates/multisig/input.js","../node_modules/bitcoinjs-lib/src/templates/multisig/output.js","../node_modules/bitcoinjs-lib/src/templates/nulldata.js","../node_modules/bitcoinjs-lib/src/templates/pubkey/input.js","../node_modules/bitcoinjs-lib/src/templates/pubkey/output.js","../node_modules/bitcoinjs-lib/src/templates/pubkeyhash/input.js","../node_modules/bitcoinjs-lib/src/templates/pubkeyhash/output.js","../node_modules/bitcoinjs-lib/src/templates/scripthash/index.js","../node_modules/bitcoinjs-lib/src/templates/scripthash/input.js","../node_modules/bitcoinjs-lib/src/templates/scripthash/output.js","../node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/index.js","../node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/input.js","../node_modules/bitcoinjs-lib/src/templates/witnessscripthash/index.js","../node_modules/bitcoinjs-lib/src/templates/witnessscripthash/input.js","../node_modules/bitcoinjs-lib/src/templates/witnesscommitment/index.js","../node_modules/bitcoinjs-lib/src/templates/witnesscommitment/output.js","../node_modules/bip32/index.js","../node_modules/bip32/crypto.js","../node_modules/smart-buffer/build/utils.js","../node_modules/ipld-git/node_modules/multicodec/src/base-table.js","../node_modules/ipld-git/src/util/commit.js","../node_modules/ipld-git/src/util/tag.js","../node_modules/ipld-git/src/util/tree.js","../node_modules/zcash-bitcore-lib/index.js","../node_modules/zcash-bitcore-lib/lib/errors/spec.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/brorand/index.js","../node_modules/browserify-sign/algos.js","../node_modules/pbkdf2/lib/async.js","../node_modules/browserify-cipher/browser.js","../node_modules/browserify-des/index.js","../node_modules/des.js/lib/des/utils.js","../node_modules/des.js/lib/des/cipher.js","../node_modules/des.js/lib/des/des.js","../node_modules/des.js/lib/des/cbc.js","../node_modules/des.js/lib/des/ede.js","../node_modules/browserify-des/modes.js","../node_modules/diffie-hellman/browser.js","../node_modules/diffie-hellman/lib/dh.js","../node_modules/browserify-sign/browser/index.js","../node_modules/browserify-sign/browser/sign.js","../node_modules/parse-asn1/asn1.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/api.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/reporter.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/base/node.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/constants/der.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/decoders/index.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/decoders/pem.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/encoders/index.js","../node_modules/parse-asn1/node_modules/asn1.js/lib/asn1/encoders/pem.js","../node_modules/parse-asn1/certificate.js","../node_modules/parse-asn1/fixProc.js","../node_modules/browserify-sign/browser/verify.js","../node_modules/create-ecdh/browser.js","../node_modules/public-encrypt/browser.js","../node_modules/public-encrypt/publicEncrypt.js","../node_modules/public-encrypt/privateDecrypt.js","../node_modules/randomfill/browser.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/hmac-drbg.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/utils.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/common.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/sha.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/ripemd.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/node_modules/hash.js/lib/hash/hmac.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/zcash-bitcore-lib/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/zcash-bitcore-lib/lib/script/interpreter.js","../node_modules/zcash-bitcore-lib/node_modules/buffer-compare/index.js","../node_modules/zcash-bitcore-lib/lib/transaction/input/publickey.js","../node_modules/zcash-bitcore-lib/lib/transaction/input/publickeyhash.js","../node_modules/zcash-bitcore-lib/lib/transaction/input/multisig.js","../node_modules/zcash-bitcore-lib/lib/transaction/input/multisigscripthash.js","../node_modules/zcash-bitcore-lib/lib/transaction/jsdescription.js","../node_modules/zcash-bitcore-lib/lib/zcash/proof.js","../node_modules/zcash-bitcore-lib/lib/encoding/varint.js","../node_modules/zcash-bitcore-lib/lib/block/index.js","../node_modules/zcash-bitcore-lib/lib/block/block.js","../node_modules/zcash-bitcore-lib/lib/uri.js","../node_modules/ethereumjs-account/index.js","../node_modules/keccak/js.js","../node_modules/keccak/lib/api/index.js","../node_modules/keccak/lib/api/keccak.js","../node_modules/keccak/lib/api/shake.js","../node_modules/keccak/lib/keccak.js","../node_modules/keccak/lib/keccak-state-unroll.js","../node_modules/secp256k1/elliptic.js","../node_modules/secp256k1/lib/elliptic/index.js","../node_modules/ethjs-util/lib/index.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/ipld-ethereum/util/emptyCodeHash.js","../node_modules/ethereumjs-common/dist/index.js","../node_modules/ethereumjs-common/dist/chains/index.js","../node_modules/ethereumjs-common/dist/hardforks/index.js","../node_modules/ipld-ethereum/eth-block-list/index.js","../node_modules/ipld-ethereum/eth-state-trie/index.js","../node_modules/merkle-patricia-tree/trieNode.js","../node_modules/ipld-ethereum/util/isExternalLink.js","../node_modules/ipld-ethereum/eth-storage-trie/index.js","../node_modules/ethereumjs-tx/es5/index.js","../node_modules/ipld-ethereum/eth-tx-trie/index.js","../node_modules/ipld/src/index.js","../node_modules/ipld-bitcoin/src/index.js","../node_modules/ipld-git/src/index.js","../node_modules/ipld-zcash/src/index.js","../node_modules/ipld-ethereum/src/index.js"],"names":["module","global","__WEBPACK_AMD_DEFINE_RESULT__","undefined","VERSION","BIND_FLAG","BIND_KEY_FLAG","CURRY_BOUND_FLAG","CURRY_FLAG","CURRY_RIGHT_FLAG","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","ARY_FLAG","REARG_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LARGE_ARRAY_SIZE","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","FUNC_ERROR_TEXT","PLACEHOLDER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","numberTag","objectTag","regexpTag","stringTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChars","reHasRegExpChars","reComboMark","reEscapeChar","reEsTemplate","reFlags","reHasHexPrefix","reIsHostCtor","reIsUint","reLatin1","reNoMatch","reUnescapedString","reWords","upper","lower","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","object","regexpEscapes","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","b","c","d","e","f","n","r","t","u","v","x","stringEscapes","\\","\n","\r"," "," ","freeExports","exports","nodeType","freeModule","freeGlobal","Object","freeSelf","self","freeWindow","window","root","this","baseCompareAscending","value","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","length","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","criteria","deburrLetter","letter","escapeHtmlChar","chr","escapeRegExpChar","leadingChar","whitespaceChar","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","result","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","_","runInContext","context","Array","defaults","pick","Date","Error","Function","Math","Number","String","TypeError","arrayProto","prototype","objectProto","stringProto","fnToString","toString","hasOwnProperty","idCounter","objToString","oldDash","reIsNative","call","replace","ArrayBuffer","clearTimeout","parseFloat","pow","propertyIsEnumerable","Set","getNative","setTimeout","splice","Uint8Array","WeakMap","nativeCeil","ceil","nativeCreate","nativeFloor","floor","nativeIsArray","nativeIsFinite","isFinite","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","parseInt","nativeRandom","random","NEGATIVE_INFINITY","POSITIVE_INFINITY","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","MAX_SAFE_INTEGER","metaMap","realNames","lodash","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","support","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","MapCache","__data__","SetCache","values","data","hash","set","push","cacheIndexOf","cache","isObject","has","arrayCopy","arrayEach","iteratee","arrayEvery","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arraySome","assignOwnDefaults","objectValue","sourceValue","key","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","type","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","constructor","input","initCloneArray","tag","isFunc","Ctor","bufferClone","buffer","byteOffset","exec","lastIndex","initCloneByTag","initCloneObject","baseForOwn","subValue","templateSettings","escape","evaluate","interpolate","variable","imports","baseCreate","baseDelay","wait","args","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","outer","valuesIndex","baseEach","createBaseEach","baseEachRight","baseForOwnRight","baseEvery","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseFor","createBaseFor","baseForRight","baseForIn","keysIn","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","equalFunc","objIsArr","othIsArr","objTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","name","message","equalByTag","objIsWrapped","othIsWrapped","arrLength","othLength","arrValue","othValue","objProps","objLength","skipCtor","objValue","objCtor","othCtor","pop","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseProperty","basePullAt","indexes","previous","baseRandom","baseSetData","start","end","baseSome","baseSortBy","comparer","sort","baseSortByOrder","iteratees","orders","callback","getCallback","objCriteria","othCriteria","ordersLength","order","compareMultiple","baseUniq","isLarge","seen","computed","seenIndex","baseValues","baseWhile","isDrop","baseWrapperValue","action","binaryIndex","retHighest","low","high","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","arguments","byteLength","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","getLength","isLength","iterable","keysFunc","createCompounder","words","deburr","createCtorWrapper","thisBinding","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","comparator","exValue","current","arrayExtremum","toIterable","baseExtremum","createFind","createFindIndex","createFindKey","objectFunc","createFlow","wrapper","funcs","thru","getFuncName","funcName","getData","isLaziable","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","initFromCollection","baseReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isAry","isBind","isBindKey","isCurry","isCurryBound","isCurryRight","argsHolders","newArgPos","newArity","newData","setData","fn","oldArray","reorder","strLength","padLength","repeat","slice","createRound","methodName","number","precision","createSortedIndex","srcBitmask","newBitmask","isCombo","mergeData","createBindWrapper","get","noop","otherFunc","target","pairs","isNative","invokePath","test","pickByArray","pickByCallback","count","lastCalled","stamp","now","remaining","shimKeys","allowIndexes","match","quote","clone","difference","drop","dropRight","findIndex","findLastIndex","first","intersection","arrays","othIndex","caches","pullAt","rest","sortedIndex","sortedLastIndex","union","uniq","isSorted","sortedUniq","unzip","group","unzipWith","without","zip","zipObject","zipWith","chain","interceptor","wrapperConcat","arrayConcat","at","countBy","every","filter","find","findLast","forEach","forEachRight","groupBy","includes","isString","indexBy","invoke","isProp","map","partition","reduce","reduceRight","sample","toArray","rand","some","sortByAll","getTime","before","temp","bind","bindAll","methodNames","functions","bindKey","curry","curryRight","debounce","options","maxTimeoutId","timeoutId","trailingCall","maxWait","trailing","leading","complete","isCalled","id","delayed","maxDelayed","debounced","leadingCall","cancel","defer","delay","flow","flowRight","memoize","resolver","memoized","Cache","modArgs","transforms","partial","partialRight","rearg","otherArgs","gt","isEqual","isError","isNumber","isPlainObject","isRegExp","lt","toPlainObject","merge","baseMerge","isSrcArr","mergeFunc","baseMergeDeep","assign","defaultsDeep","mergeDefaults","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","isProto","skipIndexes","mapKeys","mapValues","omit","camelCase","word","toLowerCase","toUpperCase","kebabCase","padLeft","padRight","snakeCase","startCase","trim","pattern","attempt","matches","method","methodOf","mixin","isObj","basePropertyDeep","round","add","after","chunk","size","compact","constant","create","properties","dropRightWhile","dropWhile","fill","baseFill","flatten","flattenDeep","initial","invert","multiValue","matchesProperty","negate","once","pluck","propertyOf","pull","range","step","reject","remove","nested","shuffle","sortBy","sortByOrder","spread","take","takeRight","takeRightWhile","takeWhile","tap","throttle","times","transform","valuesIn","where","wrap","xor","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","augend","addend","capitalize","cloneDeep","endsWith","position","escapeRegExp","findWhere","defaultValue","gte","inRange","isBoolean","isDate","isElement","isEmpty","isMatch","isNaN","isNull","isUndefined","lastIndexOf","lte","noConflict","pad","radix","floating","noMin","noMax","startsWith","sum","arraySum","baseSum","template","otherOptions","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","trimLeft","trimRight","trunc","omission","separator","search","newEnd","substring","unescape","uniqueId","prefix","all","any","contains","eq","detect","foldl","foldr","head","include","inject","filtered","reverse","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","concat","parent","wrapped","run","toJSON","valueOf","__webpack_require__","errors","checkState","condition","InvalidState","checkArgument","argumentName","docsPath","InvalidArgument","checkArgumentType","argument","isBuffer","InvalidArgumentType","Buffer","bip66","ecc","pushdata","typeforce","types","scriptNumber","OPS","REVERSE_OPS","OP_INT_BASE","OP_RESERVED","isPushOnlyChunk","OP_0","OP_1","OP_16","OP_1NEGATE","isOPInt","isPushOnly","asMinimalOP","compile","chunks","bufferSize","accum","encodingLength","allocUnsafe","opcode","writeUInt8","encode","copy","decompile","i","OP_PUSHDATA4","decode","op","isDefinedHashType","hashType","hashTypeMod","fromASM","asm","split","chunkStr","Hex","from","toASM","join","toStack","signature","isCanonicalPubKey","isPoint","isCanonicalScriptSignature","check","assert","js","$","equals","original","arg","emptyBuffer","bytes","write","equal","integerAsSingleByteBuffer","integer","integerAsBuffer","integerFromBuffer","integerFromSingleByteBuffer","bufferToHex","param","ret","hexToBuffer","isHexa","NULL_HASH","EMPTY_BUFFER","isValidJSON","parsed","JSON","parse","isHexaString","cloneArray","defineImmutable","defineProperty","configurable","enumerable","isNaturalNumber","ERRORS","NATIVE","tfJSON","TfTypeError","TfPropertyTypeError","tfSubError","getValueTypeName","TYPES","arrayOf","_arrayOf","strict","Nil","minLength","maxLength","str","Infinity","maybe","_maybe","propertyType","propertyKeyType","_map","propertyName","propertyValue","uncompiled","typePropertyName","_object","anyOf","_anyOf","allOf","_allOf","quacksLike","_quacksLike","tuple","_tuple","expected","_value","actual","surrogate","typeName","oneOf","EXTRA","BN","reversebuf","buf","buf2","Zero","One","Minus1","fromNumber","fromString","base","fromBuffer","opts","endian","hex","fromSM","neg","toNumber","toBuffer","natlen","toSMBigEndian","cmp","toSM","fromScriptNumBuffer","fRequireMinimal","nMaxNumSize","toScriptNumBuffer","rbuf","elliptic","version","utils","curve","curves","ec","eddsa","crypto","BufferUtil","Hash","sha1","createHash","update","digest","blocksize","sha256","sha256sha256","ripemd160","sha256ripemd160","sha512","hmac","hashf","o_key","i_key","o_key_pad","i_key_pad","sha256hmac","sha512hmac","bufferUtil","BufferWriter","obj","bufs","writeReverse","writeUInt16BE","writeUInt16LE","writeUInt32BE","writeInt32LE","writeUInt32LE","writeUInt64BEBN","bn","writeUInt64LEBN","writeVarintNum","varintBufNum","writeVarintBN","varintBufBN","bw","bitcoin","messagePrefix","bech32","bip32","public","private","pubKeyHash","scriptHash","wif","regtest","testnet","traverseNode","errorDefinition","NodeError","stack","childDefinitions","_childDefinitions","childDefinition","bitcore","spec","JSUtil","Signature","s","compressed","nhashtype","fromCompact","sig","b2","b3","fromDER","parseDER","fromTxFormat","readUInt8","derbuf","header","buflength","rheader","rlength","rneg","sheader","slength","sbuf","sneg","sumlength","toCompact","val","b1","toDER","rnbuf","snbuf","isTxDER","nLenR","nLenS","R","S","hasLowS","hasDefinedHashtype","SIGHASH_ANYONECANPAY","SIGHASH_ALL","SIGHASH_SINGLE","toTxFormat","SIGHASH_NONE","Interpreter","inherits","isSurrogatePair","msg","htonl","w","zero2","zero8","enc","res","p","toHex","toHex32","join32","len","k","split32","m","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","pos","ah","al","bh","lo","hi","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","UINT31_MAX","BIP32Path","SATOSHI_MAX","ECPoint","Network","UInt32","UInt8","Buffer256bit","BufferN","Hash160bit","Hash256bit","Satoshi","UInt53","UInt31","hmacDRBG","Point","PublicKey","extra","info","_classifyArgs","point","validate","network","defaultNetwork","y","_transformObject","_transformDER","_isBuffer","_isPrivateKey","_transformPrivateKey","privkey","getG","mul","xbuf","ybuf","_transformX","odd","fromX","json","fromPrivateKey","fromPoint","encoding","getValidationError","error","isValid","getX","getY","_getID","toAddress","fromPublicKey","inspect","ctor","superCtor","super_","TempCtor","sign","red","_init","parseHex","parseBase","wordSize","_initArray","_parseHex","_parseBase","strip","off","j","limbLen","limbPow","total","mod","imuln","_iaddn","dest","_normSign","zeros","groupSizes","groupBases","padding","out","groupSize","groupBase","cmpn","modn","idivn","q","andln","ishrn","clz32","_countBits","_zeroBits","bitLength","zeroBits","ior","or","iand","and","ixor","setn","bit","wbit","iadd","isub","sub","_smallMulTo","ncarry","rword","maxJ","_bigMulTo","hncarry","mulTo","imul","tlen","nlen","sqr","isqr","ishln","bits","carryMask","newCarry","hint","extended","h","mask","maskedWords","shln","shrn","testn","imaskn","maskn","iaddn","isubn","addn","subn","iabs","abs","_ishlnsubmul","shift","right","_wordDiv","mode","bhi","diff","qj","div","divmod","divn","divRound","dm","half","r2","acc","egcd","g","isEven","yp","xp","gcd","_invmp","x1","x2","delta","invm","isOdd","bincn","ucmp","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","mont","writable","hash160","hash256","BufferReader","eof","finished","read","readAll","readUInt16BE","readUInt16LE","readUInt32BE","readUInt32LE","readUInt64BEBN","readUInt64LEBN","second","combined","readVarintNum","readVarLengthBuffer","readVarintBuf","readVarintBN","readReverse","Script","Output","ECDSA","sighash","transaction","sighashType","inputNumber","subscript","Transaction","Input","txcopy","shallowCopy","removeCodeseparators","inputs","setScript","empty","sequenceNumber","outputs","satoshis","script","privateKey","inputIndex","hashbuf","verify","publicKey","_scriptBuffer","_script","setScriptFromBuffer","_satoshis","_satoshisBN","invalidSatoshis","fromObject","_isOutput","InvalidBuffer","scriptStr","fromBufferReader","br","toBufferWriter","writer","secp256k1","EC","deterministicGenerateK","ZERO32","alloc","EC_GROUP_ORDER","EC_P","nDiv2","G","THROW_BAD_PRIVATE","THROW_BAD_POINT","THROW_BAD_TWEAK","THROW_BAD_HASH","THROW_BAD_SIGNATURE","isScalar","isOrderScalar","compare","__isPointCompressed","isPrivate","assumeCompression","pubkey","toArrayLike","decodeFrom","P","decodePoint","getEncoded","_encode","isPointCompressed","pointAdd","pA","pB","__compressed","pp","isInfinity","pointAddScalar","tweak","tt","qq","uu","pointCompress","pointFromScalar","dd","pointMultiply","privateAdd","dt","umod","privateSub","kI","Q","isZero","isSignature","gtn","sInv","u1","u2","mulAdd","process","MAX_BYTES","MAX_UINT32","msCrypto","getRandomValues","cb","RangeError","generated","nextTick","prop","networks","networkMaps","containsArg","addNetwork","alias","pubkeyhash","privatekey","scripthash","xpubkey","xprivkey","zaddr","zkey","networkMagic","port","dnsSeeds","livenet","TESTNET","PORT","NETWORK_MAGIC","DNS_SEEDS","REGTEST","regtestEnabled","mainnet","enableRegtest","disableRegtest","Base58Check","Networks","Address","createMultisig","PayToPublicKeyHash","PayToScriptHash","_classifyArguments","hashBuffer","_transformHash","_transformBuffer","_transformPublicKey","_transformScript","_transformString","_classifyFromVersion","pubkeyhashNetwork","scripthashNetwork","bufferVersion","getAddressInfo","CantDeriveAddress","publicKeys","threshold","payingTo","buildMultisigOut","addressBuffer","fromPublicKeyHash","fromScriptHash","fromScript","isPayToPublicKeyHash","isPayToScriptHash","ecPoint","ecPointFromX","pointFromX","isRed","getPrototypeOf","getN","_getX","_getY","xValidRange","yValidRange","pointToCompressed","common","sha","ripemd","sha224","sha384","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","_delta8","_delta32","_update","_pad","_digest","bs58checkBase","asn1","bignum","define","constants","decoders","encoders","Reporter","DecoderBuffer","EncoderBuffer","Node","Base58","validChecksum","checksum","csum","hash4","checkedBuf","Sighash","params","_fromObject","MAXINT","DEFAULT_SEQNUMBER","DEFAULT_LOCKTIME_SEQNUMBER","DEFAULT_RBF_SEQNUMBER","_isInput","prevTxId","txidbuf","outputIndex","txoutnum","seqnum","scriptBuffer","MissingScript","scriptString","getSignatures","AbstractMethodInvoked","stringify","isFullySigned","isFinal","addSignature","clearSignatures","isValidSignature","sigtype","_estimateSize","TransactionSignature","_checkObjectArgs","safeParseInt","encodeLength","hexLength","intToHex","firstByte","isHexPrefixed","intToBuffer","isBN","inputBuf","stream","decoded","_decode","llength","innerRemainder","remainder","totalLength","inputBuffer","CID","multihashes","codec","rawhash","hashAlg","multihash","waterfall","createIsLink","createUtil","multicodec","EthObjClass","mapFromEthObject","util","defaultHashAlg","resolve","tree","binaryBlob","deserialize","ethObj","treeFromEthObject","isLink","_resolveFromEthObject","resolveFromEthObject","_treeFromEthObject","_mapFromEthObject","tuples","remainderPath","err","paths","pathParts","child","sortedMatches","part","treeResult","_err","short","edwards","SmartBuffer","multicodecs","SHA1_LENGTH","defaultLengths","names","byte","parsePersonLine","line","matched","email","date","serializePersonLine","node","parts","shaToCid","mhashBuf","writeBuffer","cidToSha","cidBuf","mh","_classCallCheck","_createClass","utils_1","DEFAULT_SMARTBUFFER_SIZE","DEFAULT_SMARTBUFFER_ENCODING","_encoding","_writeOffset","_readOffset","isSmartBufferOptions","checkEncoding","isFiniteInteger","INVALID_SMARTBUFFER_SIZE","_buff","buff","INVALID_SMARTBUFFER_BUFFER","INVALID_SMARTBUFFER_OBJECT","_readNumberValue","readInt8","readInt16BE","readInt16LE","readInt32BE","readInt32LE","_writeNumberValue","writeInt8","_insertNumberValue","writeInt16BE","writeInt16LE","writeInt32BE","readFloatBE","readFloatLE","writeFloatBE","writeFloatLE","readDoubleBE","readDoubleLE","writeDoubleBE","writeDoubleLE","arg1","lengthVal","checkLengthValue","checkOffsetValue","_handleString","arg2","nullPos","insertString","insertUInt8","writeString","writeOffset","endPoint","_handleBuffer","insertBuffer","encodingVal","clear","isInsert","arg3","offsetVal","ensureInsertable","_ensureWriteable","INVALID_READ_BEYOND_BOUNDS","dataLength","_ensureCapacity","oldLength","newLength","byteSize","ensureReadable","INVALID_WRITE_BEYOND_BOUNDS","checkTargetOffset","castOptions","aesid","fixProc","ciphers","compat","parseKeys","password","passphrase","subtype","ndata","stripped","certificate","tbsCertificate","subjectPublicKeyInfo","algorithm","RSAPublicKey","subjectPublicKey","subjectPrivateKey","pub_key","DSAparam","salt","decrypt","kde","kdeparams","iters","algo","cipher","iv","cipherText","keylen","pbkdf2Sync","createDecipheriv","final","EncryptedPrivateKey","PrivateKey","RSAPrivateKey","ECPrivateKey","priv_key","DSAPrivateKey","parameters","Random","toPublicKey","_getRandomBN","_transformWIF","privbuf","getRandomBuffer","_transformBNBuffer","fromWIF","fromRandom","toWIF","toBigNumber","_pubkey","uncompressed","bs58","ALPHABET","validCharacters","char","UnspentOutput","browser","getRandomBufferBrowser","getRandomBufferNode","randomBytes","bbuf","getPseudoRandomBuffer","BlockHeader","_from","prevHash","merkleRoot","reserved","time","timestamp","nonce","solution","_fromBufferReader","fromRawBlock","Constants","START_OF_HEADER","lenSolution","getTargetDifficulty","mov","getDifficulty","difficulty1TargetBN","currentTargetBN","difficultyString","decimalPos","_getHash","idProperty","_id","validTimestamp","currentTime","MAX_TIME_OFFSET","validProofOfWork","LARGEST_HASH","_typeof","Symbol","iterator","createKeccakHash","rlp","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","SHA3_NULL_S","KECCAK256_NULL","SHA3_NULL","KECCAK256_RLP_ARRAY_S","SHA3_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","SHA3_RLP_ARRAY","KECCAK256_RLP_S","SHA3_RLP_S","KECCAK256_RLP","SHA3_RLP","zeroAddress","setLengthLeft","setLength","setLengthRight","unpad","stripZeros","stripHexPrefix","isHexString","padToEven","bufferToInt","fromSigned","fromTwos","toUnsigned","toTwos","keccak","keccak256","sha3","padded","rlphash","isValidPrivate","privateKeyVerify","isValidPublic","sanitize","publicKeyVerify","pubToAddress","publicToAddress","pubKey","publicKeyConvert","privateToPublic","publicKeyCreate","importPublic","ecsign","msgHash","recovery","hashPersonalMessage","ecrecover","senderPubKey","recover","toRpcSig","fromRpcSig","privateToAddress","isValidAddress","address","isZeroAddress","addHexPrefix","toChecksumAddress","isValidChecksumAddress","generateAddress","isPrecompiled","homestead","SECP256K1_N_DIV_2","SECP256K1_N","baToJSON","ba","defineProperties","fields","raw","_fields","label","field","serialize","getter","allowZero","allowLess","default","resolveField","dagNode","/","hashToCid","pathArray","pathValues","_i","_Array","_x","Boolean","","Null","bcrypto","bscript","bufferutils","opcodes","varuint","varSliceSize","someScript","locktime","ins","outs","DEFAULT_SEQUENCE","ADVANCED_TRANSACTION_MARKER","ADVANCED_TRANSACTION_FLAG","EMPTY_SCRIPT","EMPTY_WITNESS","ZERO","ONE","VALUE_UINT64_MAX","BLANK_OUTPUT","valueBuffer","__noStrict","readSlice","readUInt32","readUInt64","readUInt64LE","readVarInt","vi","readVarSlice","readVector","vector","tx","readInt32","marker","hasWitnesses","vinLen","sequence","witness","voutLen","fromHex","isCoinbaseHash","isCoinbase","addInput","scriptSig","addOutput","scriptPubKey","weight","__byteLength","virtualSize","__allowWitness","someVector","vectorSize","newTx","txIn","txOut","hashForSignature","inIndex","prevOutScript","ourScript","OP_CODESEPARATOR","txTmp","__toBuffer","hashForWitnessV0","tbuffer","toffset","writeSlice","writeUInt32","writeUInt64","writeUInt64LE","writeVarSlice","hashOutputs","hashPrevouts","hashSequence","txOutsSize","getHash","getId","initialOffset","writeVarInt","setInputScript","setWitness","ALPHABET_MAP","polymodStep","pre","prefixChk","chk","convert","inBits","outBits","maxV","LIMIT","lowered","uppered","wordChars","toWords","fromWords","embed","p2ms","p2pk","p2pkh","p2sh","p2wpkh","p2wsh","rng","pseudoRandomBytes","prng","createHmac","Hmac","algos","algoKeys","hashes","getHashes","pbkdf2","aes","Cipher","createCipher","Cipheriv","createCipheriv","Decipher","createDecipher","Decipheriv","getCiphers","listCiphers","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","createDiffieHellman","DiffieHellman","createSign","Sign","createVerify","Verify","createECDH","publicEncrypt","privateEncrypt","publicDecrypt","privateDecrypt","rf","randomFill","randomFillSync","createCredentials","DH_CHECK_P_NOT_SAFE_PRIME","DH_CHECK_P_NOT_PRIME","DH_UNABLE_TO_CHECK_GENERATOR","DH_NOT_SUITABLE_GENERATOR","NPN_ENABLED","ALPN_ENABLED","RSA_PKCS1_PADDING","RSA_SSLV23_PADDING","RSA_NO_PADDING","RSA_PKCS1_OAEP_PADDING","RSA_X931_PADDING","RSA_PKCS1_PSS_PADDING","POINT_CONVERSION_COMPRESSED","POINT_CONVERSION_UNCOMPRESSED","POINT_CONVERSION_HYBRID","DES","CBC","EDE","crt","priv","blinds","getr","blinder","modulus","publicExponent","unblinder","blind","blinded","c1","prime1","c2","prime2","qinv","coefficient","m1","exponent1","m2","exponent2","Opcode","reverseMap","smallInt","OP_FALSE","OP_PUSHDATA1","OP_PUSHDATA2","OP_TRUE","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_NOP","OP_VER","OP_IF","OP_NOTIF","OP_VERIF","OP_VERNOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_CAT","OP_SUBSTR","OP_LEFT","OP_RIGHT","OP_SIZE","OP_INVERT","OP_AND","OP_OR","OP_XOR","OP_EQUAL","OP_EQUALVERIFY","OP_RESERVED1","OP_RESERVED2","OP_1ADD","OP_1SUB","OP_2MUL","OP_2DIV","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_LSHIFT","OP_RSHIFT","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_CHECKLOCKTIMEVERIFY","OP_NOP1","OP_NOP2","OP_NOP3","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_PUBKEYHASH","OP_PUBKEY","OP_INVALIDOPCODE","isSmallIntOp","PublicKeyHashInput","PublicKeyHash","PublicKeyInput","MultiSigScriptHashInput","MultiSigScriptHash","MultiSigInput","MultiSig","JSDescription","serialized","joinSplits","_inputAmount","_outputAmount","_newTransaction","DUST_AMOUNT","FEE_SECURITY_MARGIN","MAX_MONEY","NLOCKTIME_BLOCKHEIGHT_LIMIT","NLOCKTIME_MAX_VALUE","FEE_PER_KB","CHANGE_OUTPUT_MAX_SIZE","MAXIMUM_EXTRA_SIZE","hashProperty","ioProperty","_getInputAmount","_getOutputAmount","unsafe","disableAll","uncheckedSerialize","checkedSerialize","serializationError","getSerializationError","invalid","InvalidSatoshis","unspentError","unspent","_getUnspentValue","disableMoreOutputThanInput","InvalidOutputAmountSum","_hasFeeError","_hasDustOutputs","_isMissingSignatures","_fee","FeeError","Different","disableLargeFees","maximumFee","_estimateFee","_missingChange","ChangeAddressMissing","TooLarge","disableSmallFees","minimumFee","TooSmall","_changeScript","disableDustOutputs","isDataOut","DustOutputs","disableIsFullySigned","MissingSignatures","nLockTime","jsdesc","joinSplitPubKey","joinSplitSig","reader","sizeTxIns","sizeTxOuts","sizeJSDescs","joinSplit","changeScript","_changeIndex","changeIndex","fee","txin","isPublicKeyHashOut","isScriptHashOut","signatures","isPublicKeyOut","UnsupportedScript","uncheckedAddInput","_checkConsistency","lockUntilDate","LockTimeTooEarly","lockUntilBlockHeight","height","BlockHeightTooHigh","NLockTimeOutOfRange","getLockTime","utxo","pubkeys","txId","_fromMultisigUtxo","_fromNonP2SH","clazz","isMultisigOut","outputScript","NeedMoreInfo","_updateChangeOutput","hasAllUtxoInfo","amount","feePerKb","_feePerKb","change","fromAddress","getChangeOutput","to","addData","buildDataOut","_addOutput","clearOutputs","_clearSignatures","MissingPreviousOutput","_removeOutput","changeAmount","getFee","estimatedSize","available","amountAvailable","removeOutput","sortInputs","sortOutputs","shuffleOutputs","sortingFunction","_newOutputOrder","newOutputs","InvalidSorting","changeOutput","removeInput","InvalidIndex","applySignature","privKey","results","hashData","UnableToVerifySignature","verifySignature","nin","valueoutbn","txout","txinmap","inputid","isRBF","enableRBF","UNITS","BTC","mBTC","uBTC","Unit","code","InvalidRate","fromBTC","fromMillis","fromMilis","fromMicros","fromBits","fromSatoshis","fromFiat","rate","UnknownCode","toFixed","toBTC","toMillis","toMilis","toMicros","toBits","toSatoshis","atRate","_cache","_count","_eraseIndex","_usedList","_usedIndex","_CACHE_SIZE","xkey","hardened","_cacheHit","derived","_cacheRemove","removeKey","asyncify","EthTrieNode","cidFromHash","createResolver","nibbleToPath","leafResolver","baseTrie","trieNode","mapFromBaseTrie","getKey","getValue","getChildren","childData","isRawNode","childNode","subtree","link","toBaseEncodedString","basePaths","leafTerminatingPaths","grandChildren","grandChild","rawNode","coll","_isArrayLike2","eachOfArrayLike","eachOfGeneric","_wrapAsync2","_interopRequireDefault","_breakLoop2","_eachOfLimit2","_doLimit2","_noop2","_once2","_onlyOnce2","__esModule","completed","iteratorCallback","BitcoinjsBlock","Block","multihashing","BITCOIN_BLOCK_HEADER_SIZE","cid","serializeError","arr","Rand","generate","_rand","getBytes","getByte","ch32","maj32","p32","ft_1","s0_256","s1_256","g0_256","g1_256","shaCommon","sha256_K","SHA256","W","T1","T2","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","native","getTypeName","captureStackTrace","tfErrorString","valueTypeName","valueJson","__type","__value","__valueTypeName","description","tfPropertyErrorString","__label","__property","tfCustomError","minimal","scriptNumSize","negative","checkUInt53","NETWORKS","isOptions","ECPair","__d","__Q","makeRandom","bs58check","decodeRaw","encodeRaw","payments","fromBase58Check","payload","fromBech32","fromOutputScript","toBase58Check","toBech32","unshift","toOutputScript","setImmediate","gitUtil","gitType","headLen","typeLen","traverse","personInfoPaths","partialPath","parents","tagger","ZcashBitcoreBlockHeader","ZCASH_BLOCK_HEADER_SIZE","verified","privkey2pubkey","calci","Qprime","console","randomK","N","deterministicK","badrs","T","isYOdd","isSecondKey","eNeg","rInv","sigError","sinv","toLowS","_findSignature","signRandomK","MAX_ALLOC","checkBuffer","iterations","defaultEncoding","md5","RIPEMD160","checkParameters","ZEROS","sizes","rmd160","alg","saltLen","getDigest","ipad","opad","ipad1","ipad2","DK","block1","destPos","hLen","l","U","findPrime","simpleSieve","fermatTest","TWENTYFOUR","millerRabin","TWO","FIVE","TEN","THREE","ELEVEN","FOUR","_getPrimes","gen","n2","brorand","MillerRabin","_randbelow","min_bytes","_randrange","stop","rone","n1","rn1","getDivisor","reporter","item","save","restore","fail","skip","_reporterState","_reverse","der","DERDecoder","entity","DERNode","body","derDecodeTag","cls","tagClass","primitive","oct","tagStr","derDecodeLen","_peekTag","state","decodedTag","_decodeTag","_skipUntilEnd","_decodeList","decoder","possibleEnd","_decodeStr","unused","fromCharCode","numstr","_isNumstr","printstr","_isPrintstr","_decodeObjid","relative","identifiers","ident","subident","_decodeTime","year","mon","day","hour","sec","UTC","_decodeNull","_decodeBool","_decodeInt","_use","_getDecoder","DEREncoder","two","_encodeComposite","content","encodedTag","tagByName","tagClassByName","encodeTag","_createEncoderBuffer","lenOctets","_encodeStr","_encodeObjid","objid","_encodeTime","getFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_encodeNull","_encodeInt","numArray","_encodeBool","_getEncoder","_skipDefault","dataBuffer","_baseState","defaultBuffer","_encodeValue","i2ops","seed","paddedMsg","BASE","digits","digit","opcodenum","tokens","token","_chunkToString","substr","isPublicKeyHashIn","signatureBuf","pubkeyBuf","getPublicKey","getPublicKeyHash","isVersion","isPublicKeyIn","isScriptHashIn","redeemScript","redeemBuf","classify","UNKNOWN","isMultisigIn","OP_RETURN_STANDARD_SIZE","PUBKEY_OUT","PUBKEY_IN","PUBKEYHASH_OUT","PUBKEYHASH_IN","SCRIPTHASH_OUT","SCRIPTHASH_IN","MULTISIG_OUT","MULTISIG_IN","DATA_OUT","classifyInput","classifyOutput","outputType","outputIdentifiers","inputIdentifiers","isStandard","prepend","_addByType","_addOpcode","_addBuffer","_insertAtPosition","sorted","noSorting","buildMultisigIn","buildP2SHMultisigIn","cachedMultisig","buildPublicKeyHashOut","_network","buildPublicKeyOut","buildScriptHashOut","buildPublicKeyIn","buildPublicKeyHashIn","toScriptHashOut","UnrecognizedAddress","_getInputAddressInfo","_getOutputAddressInfo","findAndDelete","checkMinimalPush","_decodeOP_N","getSignatureOperationsCount","accurate","lastOpcode","txid","vout","MerkleBlock","numTransactions","flags","_flagBitsUsed","_hashesUsed","validMerkleTree","_calcTreeHeight","hashesUsed","flagBitsUsed","_traverseMerkleTree","depth","txs","isParentOfMatch","left","_calcTreeWidth","hasTransaction","numHashes","numFlags","HDKeyCache","hdErrors","HDPrivateKey","_generateRandomly","isValidSerialized","_buildFromSerialized","_buildFromJSON","getSerializedError","UnrecognizedArgument","_buildFromObject","isValidPath","_getDerivationIndexes","Hardened","MaxIndex","steps","RootElementAlias","isHardened","NaN","derive","_deriveWithNumber","_deriveFromString","InvalidDerivationArgument","InvalidPath","cached","indexBuffer","_buffers","chainCode","leftPart","parentFingerPrint","fingerPrint","childIndex","InvalidB58Char","InvalidB58Checksum","DataLength","InvalidLength","_validateNetwork","networkArg","InvalidNetworkArgument","InvalidNetwork","buffers","_buildFromBuffers","VersionStart","VersionEnd","DepthStart","DepthEnd","ParentFingerPrintStart","ParentFingerPrintEnd","ChildIndexStart","ChildIndexEnd","ChainCodeStart","ChainCodeEnd","PrivateKeyStart","PrivateKeyEnd","ChecksumStart","ChecksumEnd","fromSeed","hexa","InvalidEntropyArgument","MINIMUM_ENTROPY_BITS","NotEnoughEntropy","MAXIMUM_ENTROPY_BITS","TooMuchEntropy","_calcHDPublicKey","_hdPublicKey","HDPublicKey","_validateBufferArguments","ParentFingerPrintSize","VersionSize","DepthSize","ChildIndexSize","ChainCodeSize","PrivateKeySize","CheckSumSize","DefaultDepth","DefaultFingerprint","DefaultChildIndex","SerializedByteSize","bitcoreErrors","ArgumentIsPrivateExtended","hdPublicKey","_buildFromPrivate","MustSupplyArgument","InvalidIndexCantDeriveHardened","DataSize","PublicKeyStart","PublicKeyEnd","PublicKeySize","EthAccount","emptyCodeHash","account","stateRoot","codeHash","balance","isContract","block","cidFromEthObj","EthBlockHeader","parentHash","uncleHash","transactionsTrie","receiptTrie","coinbase","bloom","difficulty","gasLimit","gasUsed","extraData","mixHash","Common","_common","hardfork","canonicalDifficulty","parentBlock","cutoff","dif","activeHardfork","blockTs","parentTs","parentDif","minimumDifficulty","hardforkGteHardfork","uncleAddend","ineg","ltn","exp","isNeg","validateDifficulty","validateGasLimit","pGasLimit","maxGasLimit","minGasLimit","blockchain","isGenesis","getBlock","setGenesisParams","genesis","_eachOf2","_withoutIndex2","EthTx","gasPrice","toCreationAddress","_doWhilst2","_doWhilst","_iteratee","_slice2","abort","depthFirst","createStream","ended","reads","widthFirst","leafFirst","_doParallel2","_map2","limit","_eachOfLimit3","eachfn","counter","isOptionObject","propIsEnumerable","globalThis","defaultMergeOpts","concatArrays","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","cloneOptionObject","mergeKeys","merged","mergeOpts","resultIndex","indices","foobar","option","TransactionBuilder","minAssert","minUtils","getNAF","naf","ws","iushrn","getJSF","k1","k2","jsf","d1","d2","m8","m14","m24","cachedProperty","computer","parseBytes","intFromLE","BaseCurve","conf","zero","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","adjustCount","redN","_maxwellTrick","BasePoint","precomputed","_fixedNafMul","doubles","_getDoubles","I","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","encodeCompressed","precompute","power","beta","_getBeta","_hasDoubles","dbl","Base","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inf","JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","a0","b0","a1","a2","prevR","aprxSqrt","ushrn","y1","y2","len1","_endoSplit","v1","v2","p1","p2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","endoMul","obj2point","nx","ny","ys1","dyinv","jmulAdd","_precompute","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","MontCurve","i4","a24","normalize","aa","bb","diffAdd","da","jumlAdd","EdwardsCurve","twisted","mOneA","oneC","_mulA","_mulC","lhs","pointFromY","_extDbl","nt","_projDbl","_extAdd","_projAdd","zi","PresetCurve","defineCurve","sha1_K","SHA1","SHA224","SHA384","K","Kh","Ah","Bh","Ch","Dh","Eh","rh","sh","inner","HmacDRBG","KeyPair","nh","keyPair","keyFromPrivate","fromPrivate","keyFromPublic","pub","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","entropyEnc","ns2","_truncateToN","truncOnly","bkey","getPrivate","ns1","iter","kp","kpX","recoveryParam","canonical","getPublic","recoverPubKey","getKeyRecoveryParam","predResist","minEntropy","_reseed","reseedInterval","V","nonceEnc","_hmac","kmac","reseed","addEnc","_importPrivate","privEnc","_importPublic","pubEnc","reason","_importDER","Position","place","octetLen","rmPadding","constructLength","octets","log","LN2","slen","backHalf","EDDSA","pointClass","secret","keyFromSecret","hashInt","Rencoded","encodePoint","s_","pubBytes","makeSignature","SG","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_S","_Rencoded","_Sencoded","Sencoded","toBytes","ONE1","ZERO1","checkSig","_Buffer","_LengthN","Length","_ArrayN","_BufferN","_HexN","_StringN","INT53_MAX","ArrayN","Finite","HexN","Int8","Int16","Int32","Int53","Range","_range","StringN","UInt16","bstart","hashTypeBuffer","fastMerkleRoot","readTransaction","nTransactions","transactions","headersOnly","setUTCSeconds","txSize","calculateTarget","exponent","mantissa","writeUIntBE","calculateMerkleRoot","checkMerkleRoot","actualMerkleRoot","checkProofOfWork","digestFn","verifuint","base58","checksumFn","newChecksum","decodeUnsafe","baddress","ops","SCRIPT_TYPES","expandOutput","ourPubKey","P2PKH","pkh1","pkh2","P2WPKH","wpkh1","wpkh2","P2PK","P2MS","maxSignatures","maximumFeeRate","__prevTxSet","__inputs","__tx","canSign","signScript","signType","hasWitness","signatureHashType","setLockTime","setVersion","fromTransaction","txb","__addInputUnsafe","vin","redeemScriptType","unmatched","fixMultisigOrder","txHash","__canModifyInputs","prevTxOut","expandInput","witnessStack","ssType","wsType","NONSTANDARD","_payments$p2wpkh","prevOutType","_payments$p2pkh","_output","_signature","_signature2","_payments$p2ms","allowIncomplete","P2SH","_payments$p2sh","_output2","redeem","expanded","witnessScript","witnessScriptType","P2WSH","_expanded","_payments$p2wsh","_output3","_redeem","_outputType","__canModifyOutputs","build","__build","buildIncomplete","_redeem2","__overMaximumFees","witnessValue","__needsOutputs","signatureHash","prepared","p2wshAlt","p2shAlt","_p2sh","_p2shAlt","_expanded2","_signScript","_p2wsh","_p2wshAlt","_expanded3","_signScript2","_expanded4","_signScript3","prepareInput","signingHashType","nInputs","nOutputs","lazy","typef","BITCOIN_NETWORK","o","stacksEqual","isAcceptableSignature","_chunks","_address","hash2","pkh","_pkh","checkRedeem","_hash","hasInput","richunks","_rchunks","multisig","nullData","witnessPubKeyHash","witnessScriptHash","witnessCommitment","NULLDATA","WITNESS_COMMITMENT","partialSignature","p2wpkho","p2wsho","lastChunk","scriptSigChunks","redeemScriptChunks","witnessScriptChunks","witnessRawScriptSig","HEADER","commitment","UINT256_TYPE","NETWORK_TYPE","BITCOIN","BIP32","parentFingerprint","identifier","isNeutered","neutered","toBase58","hd","hmacSHA512","IL","IR","Ki","ki","fingerprint","deriveHardened","derivePath","splitPath","prevHd","indexStr","fromBase58","INVALID_ENCODING","INVALID_OFFSET","INVALID_OFFSET_NON_NUMBER","INVALID_LENGTH","INVALID_LENGTH_NON_NUMBER","INVALID_TARGET_OFFSET","INVALID_TARGET_LENGTH","isInteger","checkOffsetOrLengthValue","isEncoding","lines","author","committer","mergetag","text","outBuf","_loop","_line","startLine","mt","_startLine","entries","entry","writeStringNT","modeName","readStringNT","readBuffer","modNameMatched","versionGuard","_bitcore","Varint","preconditions","URI","deps","bnjs","_HDKeyCache","ZERO_BUF","sync","subtle","toBrowser","sha-1","sha-256","sha-384","sha-512","checks","browserPbkdf2","importKey","then","deriveBits","Promise","promise","resolvePromise","prom","catch","checkNative","resp","aesModes","desModes","ebtk","suite","keyLen","ivLen","CipherBase","des","modes","des-ede3-cbc","instantiate","des-ede3","des-ede-cbc","des-ede","des-cbc","des-ecb","_des","des3","_final","ip","inL","inR","outL","outR","rip","pc1","r28shl","pc2table","pc2","expand","sTable","substitute","permuteTable","permute","padSplit","bufferOff","_updateDecrypt","_updateEncrypt","_buffer","_flushBuffer","inputOff","outputOff","_finalEncrypt","_finalDecrypt","_unpad","DESState","_desState","deriveKeys","shiftTable","kL","kR","inp","inOff","outOff","_encrypt","_decrypt","lStart","rStart","keyL","keyR","proto","CBCState","_cbcInit","_cbcState","superProto","EDEState","k3","_edeState","generatePrime","DH","ENCODINGS","binary","base64","generator","genc","SEVEN","setPublicKey","setPrivateKey","_priv","primeCache","malleable","setGenerator","__prime","_primeLen","_primeCode","formatReturnValue","rem","checkPrime","__gen","generateKeys","_gen","computeSecret","getPrime","front","getPrivateKey","getGenerator","algorithms","Writable","_hashType","_tag","_signType","_write","done","hlen","hbits","bits2int","bits2octets","obits","makeKey","kv","makeR","curveId","ecSign","H","dsaSign","seq","int","use","AlgorithmIdentifier","bitstr","null_","optional","PrivateKeyInfo","octstr","EncryptedPrivateKeyInfo","explicit","ECParameters","choice","namedCurve","Entity","_createNamed","named","runInThisContext","_initNamed","ReporterError","rethrow","pathLen","enterKey","exitKey","leaveKey","enterObject","leaveObject","inherited","elem","wrapResult","tags","children","reverseArgs","useDecoder","implicit","_wrap","stateProps","cstate","_useArgs","def","newKey","prevObj","present","prevKey","_decodeGeneric","_decodeChoice","track","_getUse","_encodeChoice","_encodePrimitive","10","11","12","13","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","pem","PEMDecoder","re","PEMEncoder","asn","Time","utcTime","utctime","generalTime","gentime","AttributeTypeValue","SubjectPublicKeyInfo","RelativeDistinguishedName","setof","RDNSequence","seqof","Name","rdnSequence","Validity","Extension","bool","TBSCertificate","X509Certificate","findProc","startRegex","fullRegex","evp","okey","decrypted","cipherKey","match2","checkValue","ecVerify","unpacked","montp","dsaVerify","padNum","ECDH","aliases","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","curveType","p256","secp256r1","secp192r1","p384","p521","format","inenc","mgf","withPublic","mLen","iHash","hLen2","ps","dblen","maskedDb","maskedSeed","oaep","cur","nonZero","pkcs1","zBuffer","db","status","oldBrowser","safeBuffer","randombytes","kBufferMaxLength","kMaxLength","kMaxUint32","assertOffset","assertSize","actualFill","ourBuf","uint","cond","_importPublicShort","_importPublicMont","initialize","scriptPubkey","stackCopy","SCRIPT_VERIFY_SIGPUSHONLY","errstr","SCRIPT_VERIFY_P2SH","castToBool","redeemScriptSerialized","altstack","pc","pbegincodehash","nOpCount","vfExec","altack","true","false","MAX_SCRIPT_ELEMENT_SIZE","LOCKTIME_THRESHOLD_BN","LOCKTIME_THRESHOLD","SCRIPT_VERIFY_NONE","SCRIPT_VERIFY_STRICTENC","SCRIPT_VERIFY_DERSIG","SCRIPT_VERIFY_LOW_S","SCRIPT_VERIFY_NULLDUMMY","SCRIPT_VERIFY_MINIMALDATA","SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS","SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY","checkSignatureEncoding","checkPubkeyEncoding","checkLockTime","buf1","spliced","bn1","bn2","bufSig","bufPubkey","fValue","fSuccess","fExec","buf3","x3","fEqual","bn3","bufHash","tmpScript","nKeysCount","ikey","nSigsCount","isig","fOk","SCRIPT_MAX_SIZE","publicKeyIndex","_deserializeSignatures","_serializeSignatures","_updateScript","_createSignatures","countSignatures","countMissingSignatures","publicKeysWithoutSignature","normalizeSignatures","signatureMatch","signatureBuffer","OPCODES_SIZE","SIGNATURE_SIZE","PUBKEY_SIZE","ZCProof","nullifiers","commitments","ciphertexts","macs","_vpub_old","_vpub_oldBN","_vpub_new","_vpub_newBN","nullifier","ciphertext","mac","vpub_old","vpub_new","anchor","ephemeralKey","randomSeed","proof","CompressedG1","CompressedG2","y_lsb","pt","y_gt","g_A","g_A_prime","g_B","g_B_prime","g_C","g_C_prime","g_K","g_H","fromBN","toBN","MAX_BLOCK_SIZE","Values","START_OF_BLOCK","getTransactionHashes","getMerkleTree","i2","getMerkleRoot","validMerkleRoot","URL","knownParams","extras","_parseAmount","uri","protocol","query","Members","host","ethUtil","Account","getCode","getRaw","setCode","trie","putRaw","getStorage","setStorage","put","createKeccak","createShake","KeccakState","Keccak","Shake","Transform","capacity","delimitedSuffix","hashBitLength","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","_finalized","_transform","_flush","absorb","absorbLastFewBits","squeeze","_resetState","_clone","_read","dataByteLength","keccakState","squeezing","p1600","P1600_ROUND_CONSTANTS","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","messages","ecparams","loadPublicKey","xBuffer","loadCompressedPublicKey","yBuffer","loadUncompressedPublicKey","privateKeyExport","EC_PRIVATE_KEY_EXPORT_DER_FAIL","privateKeyNegate","privateKeyModInverse","EC_PRIVATE_KEY_RANGE_INVALID","privateKeyTweakAdd","EC_PRIVATE_KEY_TWEAK_ADD_FAIL","privateKeyTweakMul","EC_PRIVATE_KEY_TWEAK_MUL_FAIL","EC_PUBLIC_KEY_CREATE_FAIL","pair","EC_PUBLIC_KEY_PARSE_FAIL","publicKeyTweakAdd","EC_PUBLIC_KEY_TWEAK_ADD_FAIL","publicKeyTweakMul","EC_PUBLIC_KEY_TWEAK_MUL_FAIL","publicKeyCombine","EC_PUBLIC_KEY_COMBINE_FAIL","signatureNormalize","ECDSA_SIGNATURE_PARSE_FAIL","signatureExport","signatureImport","sigObj","noncefn","getNonce","ECDSA_SIGN_FAIL","sigr","sigs","ECDSA_RECOVER_FAIL","ecdh","shared","ecdhUnsafe","scalar","ECDH_FAIL","arrayContainsArray","superset","subset","getBinarySize","fromAscii","stringValue","fromUtf8","toAscii","toUtf8","getKeys","allowEmpty","chains_1","hardforks_1","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","setHardfork","chains","required_1","_isSupportedHardfork","changed","hardforkChanges_1","hardforks","_chooseHardfork","onlySupported","_getHardfork","hfs_1","hf","_a","topic","hardforkChanges_2","hfChanges","paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","hardforks_2","gteHardfork","hardforkIsActiveOnChain","hfs_2","isHardforkBlock","consensus","finality","bootstrapNodes","chainId","networkId","42","6284","ropsten","rinkeby","kovan","goerli","RLP","EthBlockHead","ethBlockResolver","ethBlockListResolver","ethBlockList","ethBlock","blockPath","subpaths","rawOmmers","rawBlock","blockList","mhash","ethAccountSnapshotResolver","ethStateTrieResolver","createTrieResolver","TrieNode","parseNode","keyVal","setValue","setKey","terminator","removeHexPrefix","isTerminator","stringToNibbles","nibbles","nibblesToBuffer","getNodeType","ethStorageTrieResolver","fees","N_DIV_2","instance","Constructor","getSenderAddress","sigV","_chainId","_homestead","includeSignature","items","getChainId","getSenderPublicKey","_senderPubKey","getDataFee","cost","txDataZeroGas","txDataNonZeroGas","getBaseFee","txGas","txCreation","getUpfrontCost","stringError","ethTxResolver","ethTxTrieResolver","doUntil","joinPath","osPathSep","sep","pullDeferSource","pullTraverse","mergeOptions","ipldDagCbor","ipldDagPb","ipldRaw","IPLDResolver","userOptions","_this","defaultOptions","blockService","bs","resolvers","load","loadFormat","rm","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","formats","return","_this2","_get","_getFormat","endReached","isTerminal","_maybeCID","localResolve","deferred","cids","_this3","getMany","blocks","mapCallback","_this4","isCID","onlyHash","_put","_this5","recursive","basePath","delete","_this6","deserialized","_this7","_this8","ethAccountSnapshot","ethStateTrie","ethStorageTrie","ethTx","ethTxTrie"],"mappings":"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AAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,aAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,cAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,eAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,gBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA7xB,EAAA,iBAAAmvB,EAAA0C,KAAA,cACA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","file":"static/js/5.3965da64.chunk.js","sourcesContent":["/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;\n(function () {\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n  /** Used as the semantic version number. */\n\n  var VERSION = '3.10.1';\n  /** Used to compose bitmasks for wrapper metadata. */\n\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n  /** Used as default options for `_.trunc`. */\n\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n  /** Used to detect when a function becomes hot. */\n\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n  /** Used as the size to enable large array optimizations. */\n\n  var LARGE_ARRAY_SIZE = 200;\n  /** Used to indicate the type of lazy iteratees. */\n\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n\n  var FUNC_ERROR_TEXT = 'Expected a function';\n  /** Used as the internal argument placeholder. */\n\n  var PLACEHOLDER = '__lodash_placeholder__';\n  /** `Object#toString` result references. */\n\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n  /** Used to match empty string literals in compiled template source. */\n\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n  /** Used to match HTML entities and HTML characters. */\n\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n  /** Used to match template delimiters. */\n\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n  /** Used to match property names within property paths. */\n\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n  /** Used to match backslashes in property paths. */\n\n  var reEscapeChar = /\\\\(\\\\)?/g;\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n  /** Used to match `RegExp` flags from their coerced string values. */\n\n  var reFlags = /\\w*$/;\n  /** Used to detect hexadecimal string values. */\n\n  var reHasHexPrefix = /^0[xX]/;\n  /** Used to detect host constructors (Safari > 5). */\n\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n  /** Used to detect unsigned integer values. */\n\n  var reIsUint = /^\\d+$/;\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n  /** Used to ensure capturing order of template delimiters. */\n\n  var reNoMatch = /($^)/;\n  /** Used to match unescaped characters in compiled string literals. */\n\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n  /** Used to match words to create compound words. */\n\n  var reWords = function () {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }();\n  /** Used to assign default `context` object properties. */\n\n\n  var contextProps = ['Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number', 'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'];\n  /** Used to make template sourceURLs easier to identify. */\n\n  var templateCounter = -1;\n  /** Used to identify `toStringTag` values of typed arrays. */\n\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[mapTag] = cloneableTags[setTag] = cloneableTags[weakMapTag] = false;\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\n  var deburredLetters = {\n    '\\xc0': 'A',\n    '\\xc1': 'A',\n    '\\xc2': 'A',\n    '\\xc3': 'A',\n    '\\xc4': 'A',\n    '\\xc5': 'A',\n    '\\xe0': 'a',\n    '\\xe1': 'a',\n    '\\xe2': 'a',\n    '\\xe3': 'a',\n    '\\xe4': 'a',\n    '\\xe5': 'a',\n    '\\xc7': 'C',\n    '\\xe7': 'c',\n    '\\xd0': 'D',\n    '\\xf0': 'd',\n    '\\xc8': 'E',\n    '\\xc9': 'E',\n    '\\xca': 'E',\n    '\\xcb': 'E',\n    '\\xe8': 'e',\n    '\\xe9': 'e',\n    '\\xea': 'e',\n    '\\xeb': 'e',\n    '\\xcC': 'I',\n    '\\xcd': 'I',\n    '\\xce': 'I',\n    '\\xcf': 'I',\n    '\\xeC': 'i',\n    '\\xed': 'i',\n    '\\xee': 'i',\n    '\\xef': 'i',\n    '\\xd1': 'N',\n    '\\xf1': 'n',\n    '\\xd2': 'O',\n    '\\xd3': 'O',\n    '\\xd4': 'O',\n    '\\xd5': 'O',\n    '\\xd6': 'O',\n    '\\xd8': 'O',\n    '\\xf2': 'o',\n    '\\xf3': 'o',\n    '\\xf4': 'o',\n    '\\xf5': 'o',\n    '\\xf6': 'o',\n    '\\xf8': 'o',\n    '\\xd9': 'U',\n    '\\xda': 'U',\n    '\\xdb': 'U',\n    '\\xdc': 'U',\n    '\\xf9': 'u',\n    '\\xfa': 'u',\n    '\\xfb': 'u',\n    '\\xfc': 'u',\n    '\\xdd': 'Y',\n    '\\xfd': 'y',\n    '\\xff': 'y',\n    '\\xc6': 'Ae',\n    '\\xe6': 'ae',\n    '\\xde': 'Th',\n    '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n  /** Used to map characters to HTML entities. */\n\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n  /** Used to map HTML entities to characters. */\n\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n  /** Used to determine if values are of the language type `Object`. */\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n  /** Used to escape characters for inclusion in compiled regexes. */\n\n  var regexpEscapes = {\n    '0': 'x30',\n    '1': 'x31',\n    '2': 'x32',\n    '3': 'x33',\n    '4': 'x34',\n    '5': 'x35',\n    '6': 'x36',\n    '7': 'x37',\n    '8': 'x38',\n    '9': 'x39',\n    'A': 'x41',\n    'B': 'x42',\n    'C': 'x43',\n    'D': 'x44',\n    'E': 'x45',\n    'F': 'x46',\n    'a': 'x61',\n    'b': 'x62',\n    'c': 'x63',\n    'd': 'x64',\n    'e': 'x65',\n    'f': 'x66',\n    'n': 'x6e',\n    'r': 'x72',\n    't': 'x74',\n    'u': 'x75',\n    'v': 'x76',\n    'x': 'x78'\n  };\n  /** Used to escape characters for inclusion in compiled string literals. */\n\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    \"\\u2028\": 'u2028',\n    \"\\u2029\": 'u2029'\n  };\n  /** Detect free variable `exports`. */\n\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n  /** Detect free variable `global` from Node.js. */\n\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n  /** Detect free variable `self`. */\n\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n  /** Detect free variable `window`. */\n\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n\n  var root = freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if (value > other && !othIsNull || !valIsReflexive || valIsNull && !othIsUndef && othIsReflexive || valIsUndef && othIsReflexive) {\n        return 1;\n      }\n\n      if (value < other && !valIsNull || !othIsReflexive || othIsNull && !valIsUndef && valIsReflexive || othIsUndef && valIsReflexive) {\n        return -1;\n      }\n    }\n\n    return 0;\n  }\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n\n\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while (fromRight ? index-- : ++index < length) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n\n\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n\n\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n\n\n  function baseToString(value) {\n    return value == null ? '' : value + '';\n  }\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n\n\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n\n\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n\n\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || object.index - other.index;\n  }\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n\n\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n\n        var order = orders[index];\n        return result * (order === 'asc' || order === true ? 1 : -1);\n      }\n    } // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  }\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n\n\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n\n    return '\\\\' + chr;\n  }\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n\n\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n\n\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while (fromRight ? index-- : ++index < length) {\n      var other = array[index];\n\n      if (other !== other) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n\n\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n\n\n  function isSpace(charCode) {\n    return charCode <= 160 && charCode >= 9 && charCode <= 13 || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);\n  }\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n\n\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n\n\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n\n\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n\n\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n\n    return index;\n  }\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n\n\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n\n\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n    /** Native constructor references. */\n\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n    /** Used for native method references. */\n\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n    /** Used to resolve the decompiled source of functions. */\n\n    var fnToString = Function.prototype.toString;\n    /** Used to check objects for own properties. */\n\n    var hasOwnProperty = objectProto.hasOwnProperty;\n    /** Used to generate unique IDs. */\n\n    var idCounter = 0;\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n\n    var objToString = objectProto.toString;\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n\n    var oldDash = root._;\n    /** Used to detect if a method is native. */\n\n    var reIsNative = RegExp('^' + fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n    /** Native method references. */\n\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n    /* Native method references for those with the same name as other `lodash` methods. */\n\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n    /** Used as references for `-Infinity` and `Infinity`. */\n\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n    /** Used as references for the maximum length and index of an array. */\n\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n\n    var MAX_SAFE_INTEGER = 9007199254740991;\n    /** Used to store function metadata. */\n\n    var metaMap = WeakMap && new WeakMap();\n    /** Used to lookup unminified function names. */\n\n    var realNames = {};\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n\n      return new LodashWrapper(value);\n    }\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n\n\n    function baseLodash() {} // No operation performed.\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n\n\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n\n\n    var support = lodash.support = {};\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n\n    lodash.templateSettings = {\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n\n\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n\n\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n\n      return result;\n    }\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n\n\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : start - 1,\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || arrLength == length && takeCount == length) {\n        return baseWrapperValue(isRight && isArr ? array.reverse() : array, this.__actions__);\n      }\n\n      var result = [];\n\n      outer: while (length-- && resIndex < takeCount) {\n        index += dir;\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n\n        result[resIndex++] = value;\n      }\n\n      return result;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n\n\n    function MapCache() {\n      this.__data__ = {};\n    }\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n\n\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n\n\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n\n\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n\n\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n\n      return this;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n\n\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n      this.data = {\n        'hash': nativeCreate(null),\n        'set': new Set()\n      };\n\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n\n\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = typeof value == 'string' || isObject(value) ? data.set.has(value) : data.hash[value];\n      return result ? 0 : -1;\n    }\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n\n\n    function cachePush(value) {\n      var data = this.data;\n\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n\n\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n\n      return result;\n    }\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n      array || (array = Array(length));\n\n      while (++index < length) {\n        array[index] = source[index];\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n\n\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n\n\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n\n\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n\n      return result;\n    }\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n\n      return array;\n    }\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n\n      return accumulator;\n    }\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n\n      return accumulator;\n    }\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n\n\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n\n      return result;\n    }\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return objectValue === undefined || !hasOwnProperty.call(object, key) ? sourceValue : objectValue;\n    }\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? result !== value : value === value) || value === undefined && !(key in object)) {\n          object[key] = result;\n        }\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseAssign(object, source) {\n      return source == null ? object : baseCopy(source, keys(source), object);\n    }\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n\n\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while (++index < propsLength) {\n        var key = props[index];\n\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseCopy(source, props, object) {\n      object || (object = {});\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n\n      return object;\n    }\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n\n\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n\n      if (type == 'function') {\n        return thisArg === undefined ? func : bindCallback(func, thisArg, argCount);\n      }\n\n      if (func == null) {\n        return identity;\n      }\n\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n\n      return thisArg === undefined ? property(func) : baseMatchesProperty(func, thisArg);\n    }\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n\n\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (!isObject(value)) {\n        return value;\n      }\n\n      var isArr = isArray(value);\n\n      if (isArr) {\n        result = initCloneArray(value);\n\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || isFunc && !object) {\n          result = initCloneObject(isFunc ? {} : value);\n\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag] ? initCloneByTag(value, tag, isDeep) : object ? value : {};\n        }\n      } // Check for circular references and return its corresponding clone.\n\n\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      } // Add the source value to the stack of traversed objects and associate it with its clone.\n\n\n      stackA.push(value);\n      stackB.push(result); // Recursively populate clone (susceptible to call stack limits).\n\n      (isArr ? arrayEach : baseForOwn)(value, function (subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    var baseCreate = function () {\n      function object() {}\n\n      return function (prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object();\n          object.prototype = undefined;\n        }\n\n        return result || {};\n      };\n    }();\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n\n\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return setTimeout(function () {\n        func.apply(undefined, args);\n      }, wait);\n    }\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n\n\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = isCommon && values.length >= LARGE_ARRAY_SIZE ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n\n      outer: while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n\n          result.push(value);\n        } else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n\n\n    var baseEach = createBaseEach(baseForOwn);\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function (value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n\n\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n      baseEach(collection, function (value, index, collection) {\n        var current = +iteratee(value, index, collection);\n\n        if (comparator(current, computed) || current === exValue && current === result) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n      start = start == null ? 0 : +start || 0;\n\n      if (start < 0) {\n        start = -start > length ? 0 : length + start;\n      }\n\n      end = end === undefined || end > length ? length : +end || 0;\n\n      if (end < 0) {\n        end += length;\n      }\n\n      length = start > end ? 0 : end >>> 0;\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n\n      return array;\n    }\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n\n\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function (value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n\n\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function (value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n\n\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isArrayLike(value) && (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    var baseFor = createBaseFor();\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n\n    var baseForRight = createBaseFor(true);\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n\n\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n\n\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n\n      return index && index == length ? object : undefined;\n    }\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n\n\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n\n      if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {\n        return value !== value && other !== other;\n      }\n\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n\n      if (!isSameTag) {\n        return false;\n      } // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n\n\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      } // Add `object` and `other` to the stack of traversed objects.\n\n\n      stackA.push(object);\n      stackB.push(other);\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n      stackA.pop();\n      stackB.pop();\n      return result;\n    }\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n\n\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n\n      object = toObject(object);\n\n      while (index--) {\n        var data = matchData[index];\n\n        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n          return false;\n        }\n      }\n\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n\n\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n      baseEach(collection, function (value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n        return function (object) {\n          if (object == null) {\n            return false;\n          }\n\n          return object[key] === value && (value !== undefined || key in toObject(object));\n        };\n      }\n\n      return function (object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = path + '';\n      path = toPath(path);\n      return function (object) {\n        if (object == null) {\n          return false;\n        }\n\n        var key = pathKey;\n        object = toObject(object);\n\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\n          if (object == null) {\n            return false;\n          }\n\n          key = last(path);\n          object = toObject(object);\n        }\n\n        return object[key] === srcValue ? srcValue !== undefined || key in object : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n\n\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n      arrayEach(props || source, function (srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        } else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n\n          if ((result !== undefined || isSrcArr && !(key in object)) && (isCommon || (result === result ? result !== value : value === value))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value) ? value : isArrayLike(value) ? arrayCopy(value) : [];\n        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value) ? toPlainObject(value) : isPlainObject(value) ? value : {};\n        } else {\n          isCommon = false;\n        }\n      } // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n\n\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n      }\n    }\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function baseProperty(key) {\n      return function (object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n\n\n    function basePropertyDeep(path) {\n      var pathKey = path + '';\n      path = toPath(path);\n      return function (object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n\n      while (length--) {\n        var index = indexes[length];\n\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n\n      return array;\n    }\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n\n\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n\n\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function (value, index, collection) {\n        accumulator = initFromCollection ? (initFromCollection = false, value) : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n\n\n    var baseSetData = !metaMap ? identity : function (func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n      start = start == null ? 0 : +start || 0;\n\n      if (start < 0) {\n        start = -start > length ? 0 : length + start;\n      }\n\n      end = end === undefined || end > length ? length : +end || 0;\n\n      if (end < 0) {\n        end += length;\n      }\n\n      length = start > end ? 0 : end - start >>> 0;\n      start >>>= 0;\n      var result = Array(length);\n\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n\n\n    function baseSome(collection, predicate) {\n      var result;\n      baseEach(collection, function (value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n      array.sort(comparer);\n\n      while (length--) {\n        array[length] = array[length].value;\n      }\n\n      return array;\n    }\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n\n\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n      iteratees = arrayMap(iteratees, function (iteratee) {\n        return callback(iteratee);\n      });\n      var result = baseMap(collection, function (value) {\n        var criteria = arrayMap(iteratees, function (iteratee) {\n          return iteratee(value);\n        });\n        return {\n          'criteria': criteria,\n          'index': ++index,\n          'value': value\n        };\n      });\n      return baseSortBy(result, function (object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n\n\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function (value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n\n\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n\n      outer: while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n\n          if (iteratee) {\n            seen.push(computed);\n          }\n\n          result.push(value);\n        } else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n\n          result.push(value);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n\n\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n\n      return result;\n    }\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\n      return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);\n    }\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n\n\n    function baseWrapperValue(value, actions) {\n      var result = value;\n\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n\n      return result;\n    }\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n\n\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = low + high >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? computed <= value : computed < value) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n\n        return high;\n      }\n\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n\n\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? computed <= value : computed < value;\n        }\n\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n\n\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n\n      if (thisArg === undefined) {\n        return func;\n      }\n\n      switch (argCount) {\n        case 1:\n          return function (value) {\n            return func.call(thisArg, value);\n          };\n\n        case 3:\n          return function (value, index, collection) {\n            return func.call(thisArg, value, index, collection);\n          };\n\n        case 4:\n          return function (accumulator, value, index, collection) {\n            return func.call(thisArg, accumulator, value, index, collection);\n          };\n\n        case 5:\n          return function (value, other, key, object, source) {\n            return func.call(thisArg, value, other, key, object, source);\n          };\n      }\n\n      return function () {\n        return func.apply(thisArg, arguments);\n      };\n    }\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n\n\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n\n\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n\n      return result;\n    }\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n\n\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n\n      var offset = argsIndex;\n\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n\n      return result;\n    }\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n\n\n    function createAggregator(setter, initializer) {\n      return function (collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function (value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n\n\n    function createAssigner(assigner) {\n      return restParam(function (object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= customizer ? 1 : 0;\n        }\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n\n        while (++index < length) {\n          var source = sources[index];\n\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n\n        return object;\n      });\n    }\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n\n\n    function createBaseEach(eachFunc, fromRight) {\n      return function (collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while (fromRight ? index-- : ++index < length) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n\n        return collection;\n      };\n    }\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n\n\n    function createBaseFor(fromRight) {\n      return function (object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while (fromRight ? index-- : ++index < length) {\n          var key = props[index];\n\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n\n        return object;\n      };\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n\n\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n\n\n    function createCache(values) {\n      return nativeCreate && Set ? new SetCache(values) : null;\n    }\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n\n\n    function createCompounder(callback) {\n      return function (string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createCtorWrapper(Ctor) {\n      return function () {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n\n        switch (args.length) {\n          case 0:\n            return new Ctor();\n\n          case 1:\n            return new Ctor(args[0]);\n\n          case 2:\n            return new Ctor(args[0], args[1]);\n\n          case 3:\n            return new Ctor(args[0], args[1], args[2]);\n\n          case 4:\n            return new Ctor(args[0], args[1], args[2], args[3]);\n\n          case 5:\n            return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\n          case 6:\n            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\n          case 7:\n            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args); // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n\n\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n\n      return curryFunc;\n    }\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n\n\n    function createDefaults(assigner, customizer) {\n      return restParam(function (args) {\n        var object = args[0];\n\n        if (object == null) {\n          return object;\n        }\n\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n\n\n    function createExtremum(comparator, exValue) {\n      return function (collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFind(eachFunc, fromRight) {\n      return function (collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFindIndex(fromRight) {\n      return function (array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n\n\n    function createFindKey(objectFunc) {\n      return function (object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n\n\n    function createFlow(fromRight) {\n      return function () {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while (fromRight ? index-- : ++index < length) {\n          var func = funcs[leftIndex++] = arguments[index];\n\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n\n        index = wrapper ? -1 : length;\n\n        while (++index < length) {\n          func = funcs[index];\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n\n        return function () {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n\n          return result;\n        };\n      };\n    }\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createForEach(arrayFunc, eachFunc) {\n      return function (collection, iteratee, thisArg) {\n        return typeof iteratee == 'function' && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee) : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createForIn(objectFunc) {\n      return function (object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createForOwn(objectFunc) {\n      return function (object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n\n        return objectFunc(object, iteratee);\n      };\n    }\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n\n\n    function createObjectMapper(isMapKeys) {\n      return function (object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n        baseForOwn(object, function (value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n\n\n    function createPadDir(fromRight) {\n      return function (string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n\n\n    function createPartial(flag) {\n      var partialFunc = restParam(function (func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n\n\n    function createReduce(arrayFunc, eachFunc) {\n      return function (collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return typeof iteratee == 'function' && thisArg === undefined && isArray(collection) ? arrayFunc(collection, iteratee, accumulator, initFromArray) : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n          length -= argsHolders.length;\n\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n            bitmask |= isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG;\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n\n        return fn.apply(thisBinding, args);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n\n\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : chars + '';\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n\n\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n\n        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n\n      return wrapper;\n    }\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n\n\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function (number, precision) {\n        precision = precision === undefined ? 0 : +precision || 0;\n\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n\n        return func(number);\n      };\n    }\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n\n\n    function createSortedIndex(retHighest) {\n      return function (array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return iteratee == null && callback === baseCallback ? binaryIndex(array, value, retHighest) : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n\n\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var length = partials ? partials.length : 0;\n\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n        partials = holders = undefined;\n      }\n\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n\n      newData[9] = arity == null ? isBindKey ? 0 : func.length : nativeMax(arity - length, 0) || 0;\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n\n\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      } // Ignore non-index properties.\n\n\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n\n          return false;\n        } // Recursively compare arrays (susceptible to call stack limits).\n\n\n        if (isLoose) {\n          if (!arraySome(other, function (othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return object != +object ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == other + '';\n      }\n\n      return false;\n    }\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n\n\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n\n      var index = objLength;\n\n      while (index--) {\n        var key = objProps[index];\n\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n\n      var skipCtor = isLoose;\n\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined; // Recursively compare objects (susceptible to call stack limits).\n\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n\n\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n\n\n    var getData = !metaMap ? noop : function (func) {\n      return metaMap.get(func);\n    };\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n\n\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n\n\n    var getLength = baseProperty('length');\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n\n      return result;\n    }\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n\n\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n\n\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':\n            start += size;\n            break;\n\n          case 'dropRight':\n            end -= size;\n            break;\n\n          case 'take':\n            end = nativeMin(end, start + size);\n            break;\n\n          case 'takeRight':\n            start = nativeMax(start, end - size);\n            break;\n        }\n      }\n\n      return {\n        'start': start,\n        'end': end\n      };\n    }\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n\n\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length); // Add array properties assigned by `RegExp#exec`.\n\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n\n      return result;\n    }\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n\n\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n\n      return new Ctor();\n    }\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n\n\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag:\n        case float64Tag:\n        case int8Tag:\n        case int16Tag:\n        case int32Tag:\n        case uint8Tag:\n        case uint8ClampedTag:\n        case uint16Tag:\n        case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n\n      return result;\n    }\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n\n\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n\n\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n\n\n    function isIndex(value, length) {\n      value = typeof value == 'number' || reIsUint.test(value) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n\n\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n\n      var type = typeof index;\n\n      if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n        var other = object[index];\n        return value === value ? value === other : other !== other;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n\n\n    function isKey(value, object) {\n      var type = typeof value;\n\n      if (type == 'string' && reIsPlainProp.test(value) || type == 'number') {\n        return true;\n      }\n\n      if (isArray(value)) {\n        return false;\n      }\n\n      var result = !reIsDeepProp.test(value);\n      return result || object != null && value in toObject(object);\n    }\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n\n\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n\n      var other = lodash[funcName];\n\n      if (func === other) {\n        return true;\n      }\n\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n\n\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n\n\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n\n\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n      var isCombo = srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG; // Exit early if metadata can't be merged.\n\n      if (!(isCommon || isCombo)) {\n        return data;\n      } // Use source `thisArg` if available.\n\n\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2]; // Set when currying a bound function.\n\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      } // Compose partial arguments.\n\n\n      var value = source[3];\n\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      } // Compose partial right arguments.\n\n\n      value = source[5];\n\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      } // Use source `argPos` if available.\n\n\n      value = source[7];\n\n      if (value) {\n        data[7] = arrayCopy(value);\n      } // Use source `ary` if it's smaller.\n\n\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      } // Use source `arity` if one is not provided.\n\n\n      if (data[9] == null) {\n        data[9] = source[9];\n      } // Use source `func` and merge bitmasks.\n\n\n      data[0] = source[0];\n      data[1] = newBitmask;\n      return data;\n    }\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n\n\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    function pickByArray(object, props) {\n      object = toObject(object);\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n\n\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function (value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n\n\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n\n      return array;\n    }\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n\n\n    var setData = function () {\n      var count = 0,\n          lastCalled = 0;\n      return function (key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n        lastCalled = stamp;\n\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n\n        return baseSetData(key, value);\n      };\n    }();\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n\n\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n      var allowIndexes = !!length && isLength(length) && (isArray(object) || isArguments(object));\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n\n        if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n\n\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n\n      return isObject(value) ? value : Object(value);\n    }\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n\n\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n\n\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n\n      var result = [];\n      baseToString(value).replace(rePropName, function (match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n      });\n      return result;\n    }\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n\n\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper ? wrapper.clone() : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n\n\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, index += size);\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n\n\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n\n\n    var difference = restParam(function (array, values) {\n      return isObjectLike(array) && isArrayLike(array) ? baseDifference(array, baseFlatten(values, false, true)) : [];\n    });\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n\n\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function dropRightWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true) : [];\n    }\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function dropWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), true) : [];\n    }\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n\n\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n\n      return baseFill(array, value, start, end);\n    }\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n\n\n    var findIndex = createFindIndex();\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n\n    var findLastIndex = createFindIndex(true);\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n\n\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n\n\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n\n\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n\n        if (index < length && (value === value ? value === array[index] : array[index] !== array[index])) {\n          return index;\n        }\n\n        return -1;\n      }\n\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n\n\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n\n\n    var intersection = restParam(function (arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = isCommon && value.length >= 120 ? createCache(othIndex && value) : null;\n      }\n\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer: while (++index < length) {\n        value = array[index];\n\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n\n          while (--othIndex) {\n            var cache = caches[othIndex];\n\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n\n          if (seen) {\n            seen.push(value);\n          }\n\n          result.push(value);\n        }\n      }\n\n      return result;\n    });\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n\n\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return -1;\n      }\n\n      var index = length;\n\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n\n        if (value === value ? value === other : other !== other) {\n          return index;\n        }\n\n        return -1;\n      }\n\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n\n\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n\n      return array;\n    }\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n\n\n    var pullAt = restParam(function (array, indexes) {\n      indexes = baseFlatten(indexes);\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n\n    function remove(array, predicate, thisArg) {\n      var result = [];\n\n      if (!(array && array.length)) {\n        return result;\n      }\n\n      var index = -1,\n          indexes = [],\n          length = array.length;\n      predicate = getCallback(predicate, thisArg, 3);\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n\n      basePullAt(array, indexes);\n      return result;\n    }\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n\n\n    function rest(array) {\n      return drop(array, 1);\n    }\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n\n\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n\n      return baseSlice(array, start, end);\n    }\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n\n\n    var sortedIndex = createSortedIndex();\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n\n    var sortedLastIndex = createSortedIndex(true);\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n\n\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n\n\n    function takeRightWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true) : [];\n    }\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n\n\n    function takeWhile(array, predicate, thisArg) {\n      return array && array.length ? baseWhile(array, getCallback(predicate, thisArg, 3)) : [];\n    }\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n\n\n    var union = restParam(function (arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n\n      var callback = getCallback();\n\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n\n      return isSorted && getIndexOf() == baseIndexOf ? sortedUniq(array, iteratee) : baseUniq(array, iteratee);\n    }\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n\n\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n\n      var index = -1,\n          length = 0;\n      array = arrayFilter(array, function (group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n\n      return result;\n    }\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n\n\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n\n      if (!length) {\n        return [];\n      }\n\n      var result = unzip(array);\n\n      if (iteratee == null) {\n        return result;\n      }\n\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function (group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n\n\n    var without = restParam(function (array, values) {\n      return isArrayLike(array) ? baseDifference(array, values) : [];\n    });\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n\n        if (isArrayLike(array)) {\n          var result = result ? arrayPush(baseDifference(result, array), baseDifference(array, result)) : array;\n        }\n      }\n\n      return result ? baseUniq(result) : [];\n    }\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n\n\n    var zip = restParam(unzip);\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n\n      while (++index < length) {\n        var key = props[index];\n\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n\n      return result;\n    }\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n\n\n    var zipWith = restParam(function (arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = length > 1 && typeof thisArg == 'function' ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n\n\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n\n\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n\n\n    function wrapperChain() {\n      return chain(this);\n    }\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n\n\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n\n\n    var wrapperConcat = restParam(function (values) {\n      values = baseFlatten(values);\n      return this.thru(function (array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n\n      previous.__wrapped__ = value;\n      return result;\n    }\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n\n\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function interceptor(value) {\n        return wrapped && wrapped.__dir__ < 0 ? value : value.reverse();\n      };\n\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n\n        wrapped = wrapped.reverse();\n\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [interceptor],\n          'thisArg': undefined\n        });\n\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n\n      return this.thru(interceptor);\n    }\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n\n\n    function wrapperToString() {\n      return this.value() + '';\n    }\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n\n\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n\n\n    var at = restParam(function (collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n\n    var countBy = createAggregator(function (result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : result[key] = 1;\n    });\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n\n      return func(collection, predicate);\n    }\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n\n\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n\n\n    var find = createFind(baseEach);\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n\n    var findLast = createFind(baseEachRight, true);\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n\n\n    var forEach = createForEach(arrayEach, baseEach);\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n\n    var groupBy = createAggregator(function (result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n\n      if (typeof fromIndex != 'number' || guard && isIterateeCall(target, fromIndex, guard)) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex || 0;\n      }\n\n      return typeof collection == 'string' || !isArray(collection) && isString(collection) ? fromIndex <= length && collection.indexOf(target, fromIndex) > -1 : !!length && getIndexOf(collection, target, fromIndex) > -1;\n    }\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n\n\n    var indexBy = createAggregator(function (result, value, key) {\n      result[key] = value;\n    });\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n\n    var invoke = restParam(function (collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n      baseEach(collection, function (value) {\n        var func = isFunc ? path : isProp && value != null ? value[path] : undefined;\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n\n\n    var partition = createAggregator(function (result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function () {\n      return [[], []];\n    });\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n\n\n    var reduce = createReduce(arrayReduce, baseEach);\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function (value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n\n\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n      n = nativeMin(n < 0 ? 0 : +n || 0, length);\n\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n        result[rand] = result[index];\n        result[index] = value;\n      }\n\n      result.length = n;\n      return result;\n    }\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n\n\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n\n\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n\n\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n\n      return func(collection, predicate);\n    }\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n\n\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      var result = baseMap(collection, function (value, key, collection) {\n        return {\n          'criteria': iteratee(value, key, collection),\n          'index': ++index,\n          'value': value\n        };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n\n\n    var sortByAll = restParam(function (collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n\n      var guard = iteratees[2];\n\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n\n\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n\n\n    var now = nativeNow || function () {\n      return new Date().getTime();\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n\n\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function () {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n\n\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n\n      n = func && n == null ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n\n\n    function before(n, func) {\n      var result;\n\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n\n      return function () {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n\n        if (n <= 1) {\n          func = undefined;\n        }\n\n        return result;\n      };\n    }\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n\n\n    var bind = restParam(function (func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n\n    var bindAll = restParam(function (object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n\n      return object;\n    });\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n\n    var bindKey = restParam(function (object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n\n    var curry = createCurry(CURRY_FLAG);\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      wait = wait < 0 ? 0 : +wait || 0;\n\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          } else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        } else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n\n        return result;\n      }\n\n      debounced.cancel = cancel;\n      return debounced;\n    }\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n\n\n    var defer = restParam(function (func, args) {\n      return baseDelay(func, 1, args);\n    });\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n\n    var delay = restParam(function (func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n\n    var flow = createFlow();\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n\n    var flowRight = createFlow(true);\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || resolver && typeof resolver != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var memoized = function memoized() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n\n      memoized.cache = new memoize.Cache();\n      return memoized;\n    }\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n\n\n    var modArgs = restParam(function (func, transforms) {\n      transforms = baseFlatten(transforms);\n\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      var length = transforms.length;\n      return restParam(function (args) {\n        var index = nativeMin(args.length, length);\n\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n\n        return func.apply(this, args);\n      });\n    });\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function () {\n        return !predicate.apply(this, arguments);\n      };\n    }\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n\n\n    function once(func) {\n      return before(2, func);\n    }\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n\n\n    var partial = createPartial(PARTIAL_FLAG);\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n\n    var rearg = restParam(function (func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      start = nativeMax(start === undefined ? func.length - 1 : +start || 0, 0);\n      return function () {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n\n        switch (start) {\n          case 0:\n            return func.call(this, rest);\n\n          case 1:\n            return func.call(this, args[0], rest);\n\n          case 2:\n            return func.call(this, args[0], args[1], rest);\n        }\n\n        var otherArgs = Array(start + 1);\n        index = -1;\n\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n\n\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      return function (array) {\n        return func.apply(this, array);\n      };\n    }\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n\n\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': +wait,\n        'trailing': trailing\n      });\n    }\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n\n\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n\n\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      } else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n\n      return typeof customizer == 'function' ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1)) : baseClone(value, isDeep);\n    }\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n\n\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function' ? baseClone(value, true, bindCallback(customizer, thisArg, 1)) : baseClone(value, true);\n    }\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n\n\n    function gt(value, other) {\n      return value > other;\n    }\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n\n\n    function gte(value, other) {\n      return value >= other;\n    }\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n\n\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n\n\n    var isArray = nativeIsArray || function (value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n\n\n    function isBoolean(value) {\n      return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag;\n    }\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n\n\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n\n\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n\n\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || isObjectLike(value) && isFunction(value.splice))) {\n        return !value.length;\n      }\n\n      return !keys(value).length;\n    }\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n\n\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n\n\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n\n\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n\n\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n\n\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n\n\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n\n\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n\n\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n\n\n    function isNull(value) {\n      return value === null;\n    }\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n\n\n    function isNumber(value) {\n      return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;\n    }\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n\n\n    function isPlainObject(value) {\n      var Ctor; // Exit early for non `Object` objects.\n\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) || !hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))) {\n        return false;\n      } // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n\n\n      var result; // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n\n      baseForIn(value, function (subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n\n\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n\n\n    function isString(value) {\n      return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;\n    }\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n\n\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n\n\n    function isUndefined(value) {\n      return value === undefined;\n    }\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n\n\n    function lt(value, other) {\n      return value < other;\n    }\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n\n\n    function lte(value, other) {\n      return value <= other;\n    }\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n\n\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n\n      if (!isLength(length)) {\n        return values(value);\n      }\n\n      if (!length) {\n        return [];\n      }\n\n      return arrayCopy(value);\n    }\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n\n\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n\n\n    var merge = createAssigner(baseMerge);\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n    var assign = createAssigner(function (object, source, customizer) {\n      return customizer ? assignWith(object, source, customizer) : baseAssign(object, source);\n    });\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n\n      return properties ? baseAssign(result, properties) : result;\n    }\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n\n    var defaults = createDefaults(assign, assignDefaults);\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n\n    var findKey = createFindKey(baseForOwn);\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n\n    var findLastKey = createFindKey(baseForOwnRight);\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n\n    var forIn = createForIn(baseFor);\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n\n    var forInRight = createForIn(baseForRight);\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n\n    var forOwn = createForOwn(baseForOwn);\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n\n    var forOwnRight = createForOwn(baseForOwnRight);\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n\n\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n\n\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n\n      var result = hasOwnProperty.call(object, path);\n\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\n        if (object == null) {\n          return false;\n        }\n\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n\n      return result || isLength(object.length) && isIndex(path, object.length) && (isArray(object) || isArguments(object));\n    }\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n\n\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        } else {\n          result[value] = key;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n\n\n    var keys = !nativeKeys ? shimKeys : function (object) {\n      var Ctor = object == null ? undefined : object.constructor;\n\n      if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && isArrayLike(object)) {\n        return shimKeys(object);\n      }\n\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n\n      var length = object.length;\n      length = length && isLength(length) && (isArray(object) || isArguments(object)) && length || 0;\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = index + '';\n      }\n\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n\n\n    var mapKeys = createObjectMapper(true);\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n\n    var mapValues = createObjectMapper();\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n\n    var omit = restParam(function (object, props) {\n      if (object == null) {\n        return {};\n      }\n\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function (value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n\n    function pairs(object) {\n      object = toObject(object);\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n\n      return result;\n    }\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n\n\n    var pick = restParam(function (object, props) {\n      if (object == null) {\n        return {};\n      }\n\n      return typeof props[0] == 'function' ? pickByCallback(object, bindCallback(props[0], props[1], 3)) : pickByArray(object, baseFlatten(props));\n    });\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n\n        result = result === undefined ? defaultValue : result;\n      }\n\n      return isFunction(result) ? result.call(object) : result;\n    }\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n\n\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n\n      var pathKey = path + '';\n      path = object[pathKey] != null || isKey(path, object) ? [pathKey] : toPath(path);\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n\n        nested = nested[key];\n      }\n\n      return object;\n    }\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n\n\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor() : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n\n      (isArr ? arrayEach : baseForOwn)(object, function (value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n\n\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n\n\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n\n\n    function inRange(value, start, end) {\n      start = +start || 0;\n\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n\n\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        } else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n\n      min = +min || 0;\n\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))), max);\n      }\n\n      return baseRandom(min, max);\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n\n\n    var camelCase = createCompounder(function (result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? word.charAt(0).toUpperCase() + word.slice(1) : word);\n    });\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n\n\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n\n\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = target + '';\n      var length = string.length;\n      position = position === undefined ? length : nativeMin(position < 0 ? 0 : +position || 0, length);\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n\n\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n    }\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n\n\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return string && reHasRegExpChars.test(string) ? string.replace(reRegExpChars, escapeRegExpChar) : string || '(?:)';\n    }\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n\n\n    var kebabCase = createCompounder(function (result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n      var strLength = string.length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n\n\n    var padLeft = createPadDir();\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n\n    var padRight = createPadDir(true);\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n\n\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      } // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\n\n      do {\n        if (n % 2) {\n          result += string;\n        }\n\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n\n\n    var snakeCase = createCompounder(function (result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n\n    var startCase = createCompounder(function (result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null ? 0 : nativeMin(position < 0 ? 0 : +position || 0, string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n\n\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\"; // Compile the regexp to match each delimiter.\n\n      var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g'); // Use a sourceURL for easier debugging.\n\n      var sourceURL = '//# sourceURL=' + ('sourceURL' in options ? options.sourceURL : 'lodash.templateSources[' + ++templateCounter + ']') + '\\n';\n      string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue); // Escape characters that can't be included in string literals.\n\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar); // Replace delimiters with snippets.\n\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n\n        index = offset + match.length; // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n\n        return match;\n      });\n      source += \"';\\n\"; // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n\n      var variable = options.variable;\n\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      } // Cleanup code by stripping empty strings.\n\n\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;'); // Frame code as the function body.\n\n      source = 'function(' + (variable || 'obj') + ') {\\n' + (variable ? '' : 'obj || (obj = {});\\n') + \"var __t, __p = ''\" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\\n' + \"function print() { __p += __j.call(arguments, '') }\\n\" : ';\\n') + source + 'return __p\\n}';\n      var result = attempt(function () {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      }); // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n\n      result.source = source;\n\n      if (isError(result)) {\n        throw result;\n      }\n\n      return result;\n    }\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n\n\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n\n      chars = chars + '';\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n\n\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n\n      return string.slice(charsLeftIndex(string, chars + ''));\n    }\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n\n\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n\n      if (!string) {\n        return string;\n      }\n\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n\n      return string.slice(0, charsRightIndex(string, chars + '') + 1);\n    }\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n\n\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? +options.length || 0 : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n\n      string = baseToString(string);\n\n      if (length >= string.length) {\n        return string;\n      }\n\n      var end = length - omission.length;\n\n      if (end < 1) {\n        return omission;\n      }\n\n      var result = string.slice(0, end);\n\n      if (separator == null) {\n        return result + omission;\n      }\n\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n\n          separator.lastIndex = 0;\n\n          while (match = separator.exec(substring)) {\n            newEnd = match.index;\n          }\n\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n\n      return result + omission;\n    }\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n\n\n    function unescape(string) {\n      string = baseToString(string);\n      return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;\n    }\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n\n\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n\n\n    var attempt = restParam(function (func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n\n      return isObjectLike(func) ? matches(func) : baseCallback(func, thisArg);\n    }\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n\n\n    function constant(value) {\n      return function () {\n        return value;\n      };\n    }\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n\n\n    function identity(value) {\n      return value;\n    }\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n\n\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n\n\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n\n\n    var method = restParam(function (path, args) {\n      return function (object) {\n        return invokePath(object, path, args);\n      };\n    });\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n\n    var methodOf = restParam(function (object, args) {\n      return function (path) {\n        return invokePath(object, path, args);\n      };\n    });\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = props && props.length ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n        object[methodName] = func;\n\n        if (isFunc) {\n          object.prototype[methodName] = function (func) {\n            return function () {\n              var chainAll = this.__chain__;\n\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n                actions.push({\n                  'func': func,\n                  'args': arguments,\n                  'thisArg': object\n                });\n                result.__chain__ = chainAll;\n                return result;\n              }\n\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func);\n        }\n      }\n\n      return object;\n    }\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n\n\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n\n\n    function noop() {} // No operation performed.\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n\n\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n\n\n    function propertyOf(object) {\n      return function (path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n\n\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n\n      start = +start || 0;\n      step = step == null ? 1 : +step || 0;\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      } // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\n\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n\n      return result;\n    }\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n\n\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n); // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n      iteratee = bindCallback(iteratee, thisArg, 1);\n\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n\n\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n\n\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n\n\n    var ceil = createRound('ceil');\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n\n    var floor = createRound('floor');\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n\n    var round = createRound('round');\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1 ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee) : baseSum(collection, iteratee);\n    }\n    /*------------------------------------------------------------------------*/\n    // Ensure wrappers are instances of `baseLodash`.\n\n\n    lodash.prototype = baseLodash.prototype;\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper; // Add functions to the `Map` cache.\n\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet; // Add functions to the `Set` cache.\n\n    SetCache.prototype.push = cachePush; // Assign cache to `_.memoize`.\n\n    memoize.Cache = MapCache; // Add functions that return wrapped values when chaining.\n\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith; // Add aliases.\n\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq; // Add functions to `lodash.prototype`.\n\n    mixin(lodash, lodash);\n    /*------------------------------------------------------------------------*/\n    // Add functions that return unwrapped values when chaining.\n\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words; // Add aliases.\n\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n    mixin(lodash, function () {\n      var source = {};\n      baseForOwn(lodash, function (func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n    /*------------------------------------------------------------------------*/\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function (n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n\n      return this.thru(function (value) {\n        return sample(value, n);\n      });\n    };\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n\n\n    lodash.VERSION = VERSION; // Assign default placeholders.\n\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {\n      lodash[methodName].placeholder = lodash;\n    }); // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\n    arrayEach(['drop', 'take'], function (methodName, index) {\n      LazyWrapper.prototype[methodName] = function (n) {\n        var filtered = this.__filtered__;\n\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n        var result = this.clone();\n\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({\n            'size': n,\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function (n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    }); // Add `LazyWrapper` methods that accept an `iteratee` value.\n\n    arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function (iteratee, thisArg) {\n        var result = this.clone();\n\n        result.__iteratees__.push({\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'type': type\n        });\n\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    }); // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\n    arrayEach(['first', 'last'], function (methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function () {\n        return this[takeName](1).value()[0];\n      };\n    }); // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\n    arrayEach(['initial', 'rest'], function (methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function () {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    }); // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\n    arrayEach(['pluck', 'where'], function (methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function (value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function () {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function (predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function (value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function (start, end) {\n      start = start == null ? 0 : +start || 0;\n      var result = this;\n\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n\n      if (end !== undefined) {\n        end = +end || 0;\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function (predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function () {\n      return this.take(POSITIVE_INFINITY);\n    }; // Add `LazyWrapper` methods to `lodash.prototype`.\n\n\n    baseForOwn(LazyWrapper.prototype, function (func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n\n      lodash.prototype[methodName] = function () {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n\n        var interceptor = function interceptor(value) {\n          return retUnwrapped && chainAll ? lodashFunc(value, 1)[0] : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = {\n          'func': thru,\n          'args': [interceptor],\n          'thisArg': undefined\n        },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n\n            value.__actions__.push(action);\n\n            return func.call(value);\n          }\n\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n\n          result.__actions__.push(action);\n\n          return new LodashWrapper(result, chainAll);\n        }\n\n        return this.thru(interceptor);\n      };\n    }); // Add `Array` and `String` methods to `lodash.prototype`.\n\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function (methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function () {\n        var args = arguments;\n\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n\n        return this[chainName](function (value) {\n          return func.apply(value, args);\n        });\n      };\n    }); // Map minified function names to their real names.\n\n    baseForOwn(LazyWrapper.prototype, function (func, methodName) {\n      var lodashFunc = lodash[methodName];\n\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n        names.push({\n          'name': methodName,\n          'func': lodashFunc\n        });\n      }\n    });\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }]; // Add functions to the lazy wrapper.\n\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue; // Add chaining functions to the `lodash` wrapper.\n\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue; // Add function aliases to the `lodash` wrapper.\n\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n    return lodash;\n  }\n  /*--------------------------------------------------------------------------*/\n  // Export lodash.\n\n\n  var _ = runInContext(); // Some AMD build optimizers like r.js check for condition patterns like the following:\n\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _; // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n\n    define(function () {\n      return _;\n    });\n  } // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n      // Export for Node.js or RingoJS.\n      if (moduleExports) {\n        (freeModule.exports = _)._ = _;\n      } // Export for Rhino with CommonJS support.\n      else {\n          freeExports._ = _;\n        }\n    } else {\n      // Export for a browser or Rhino.\n      root._ = _;\n    }\n}).call(this);","'use strict';\n\nvar errors = require('../errors');\n\nvar _ = require('lodash');\n\nmodule.exports = {\n  checkState: function checkState(condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message);\n    }\n  },\n  checkArgument: function checkArgument(condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath);\n    }\n  },\n  checkArgumentType: function checkArgumentType(argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)';\n\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var BufferUtil = require('./buffer');\n\n        if (!BufferUtil.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName);\n        }\n      } else if (typeof argument !== type) {\n        throw new errors.InvalidArgumentType(argument, type, argumentName);\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName);\n      }\n    }\n  }\n};","var Buffer = require('safe-buffer').Buffer;\n\nvar bip66 = require('bip66');\n\nvar ecc = require('tiny-secp256k1');\n\nvar pushdata = require('pushdata-bitcoin');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar scriptNumber = require('./script_number');\n\nvar OPS = require('bitcoin-ops');\n\nvar REVERSE_OPS = require('bitcoin-ops/map');\n\nvar OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n\nfunction isOPInt(value) {\n  return types.Number(value) && (value === OPS.OP_0 || value >= OPS.OP_1 && value <= OPS.OP_16 || value === OPS.OP_1NEGATE);\n}\n\nfunction isPushOnlyChunk(value) {\n  return types.Buffer(value) || isOPInt(value);\n}\n\nfunction isPushOnly(value) {\n  return types.Array(value) && value.every(isPushOnlyChunk);\n}\n\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return OPS.OP_1NEGATE;\n}\n\nfunction compile(chunks) {\n  // TODO: remove me\n  if (Buffer.isBuffer(chunks)) return chunks;\n  typeforce(types.Array, chunks);\n  var bufferSize = chunks.reduce(function (accum, chunk) {\n    // data chunk\n    if (Buffer.isBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length;\n    } // opcode\n\n\n    return accum + 1;\n  }, 0.0);\n  var buffer = Buffer.allocUnsafe(bufferSize);\n  var offset = 0;\n  chunks.forEach(function (chunk) {\n    // data chunk\n    if (Buffer.isBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      var opcode = asMinimalOP(chunk);\n\n      if (opcode !== undefined) {\n        buffer.writeUInt8(opcode, offset);\n        offset += 1;\n        return;\n      }\n\n      offset += pushdata.encode(buffer, chunk.length, offset);\n      chunk.copy(buffer, offset);\n      offset += chunk.length; // opcode\n    } else {\n      buffer.writeUInt8(chunk, offset);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\n\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (types.Array(buffer)) return buffer;\n  typeforce(types.Buffer, buffer);\n  var chunks = [];\n  var i = 0;\n\n  while (i < buffer.length) {\n    var opcode = buffer[i]; // data chunk\n\n    if (opcode > OPS.OP_0 && opcode <= OPS.OP_PUSHDATA4) {\n      var d = pushdata.decode(buffer, i); // did reading a pushDataInt fail?\n\n      if (d === null) return null;\n      i += d.size; // attempt to read too much data?\n\n      if (i + d.number > buffer.length) return null;\n      var data = buffer.slice(i, i + d.number);\n      i += d.number; // decompile minimally\n\n      var op = asMinimalOP(data);\n\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      } // opcode\n\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n\n  return chunks;\n}\n\nfunction toASM(chunks) {\n  if (Buffer.isBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n\n  return chunks.map(function (chunk) {\n    // data?\n    if (Buffer.isBuffer(chunk)) {\n      var op = asMinimalOP(chunk);\n      if (op === undefined) return chunk.toString('hex');\n      chunk = op;\n    } // opcode!\n\n\n    return REVERSE_OPS[chunk];\n  }).join(' ');\n}\n\nfunction fromASM(asm) {\n  typeforce(types.String, asm);\n  return compile(asm.split(' ').map(function (chunkStr) {\n    // opcode?\n    if (OPS[chunkStr] !== undefined) return OPS[chunkStr];\n    typeforce(types.Hex, chunkStr); // data!\n\n    return Buffer.from(chunkStr, 'hex');\n  }));\n}\n\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  typeforce(isPushOnly, chunks);\n  return chunks.map(function (op) {\n    if (Buffer.isBuffer(op)) return op;\n    if (op === OPS.OP_0) return Buffer.allocUnsafe(0);\n    return scriptNumber.encode(op - OP_INT_BASE);\n  });\n}\n\nfunction isCanonicalPubKey(buffer) {\n  return ecc.isPoint(buffer);\n}\n\nfunction isDefinedHashType(hashType) {\n  var hashTypeMod = hashType & ~0x80; // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\n\nfunction isCanonicalScriptSignature(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return bip66.check(buffer.slice(0, -1));\n}\n\nmodule.exports = {\n  compile: compile,\n  decompile: decompile,\n  fromASM: fromASM,\n  toASM: toASM,\n  toStack: toStack,\n  number: require('./script_number'),\n  signature: require('./script_signature'),\n  isCanonicalPubKey: isCanonicalPubKey,\n  isCanonicalScriptSignature: isCanonicalScriptSignature,\n  isPushOnly: isPushOnly,\n  isDefinedHashType: isDefinedHashType\n};","'use strict';\n\nvar buffer = require('buffer');\n\nvar assert = require('assert');\n\nvar js = require('./js');\n\nvar $ = require('./preconditions');\n\nfunction equals(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var length = a.length;\n\n  for (var i = 0; i < length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  /**\n   * Fill a buffer with a value.\n   *\n   * @param {Buffer} buffer\n   * @param {number} value\n   * @return {Buffer}\n   */\n  fill: function fill(buffer, value) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    $.checkArgumentType(value, 'number', 'value');\n    var length = buffer.length;\n\n    for (var i = 0; i < length; i++) {\n      buffer[i] = value;\n    }\n\n    return buffer;\n  },\n\n  /**\n   * Return a copy of a buffer\n   *\n   * @param {Buffer} original\n   * @return {Buffer}\n   */\n  copy: function copy(original) {\n    var buffer = new Buffer(original.length);\n    original.copy(buffer);\n    return buffer;\n  },\n\n  /**\n   * Returns true if the given argument is an instance of a buffer. Tests for\n   * both node's Buffer and Uint8Array\n   *\n   * @param {*} arg\n   * @return {boolean}\n   */\n  isBuffer: function isBuffer(arg) {\n    return buffer.Buffer.isBuffer(arg) || arg instanceof Uint8Array;\n  },\n\n  /**\n   * Returns a zero-filled byte array\n   *\n   * @param {number} bytes\n   * @return {Buffer}\n   */\n  emptyBuffer: function emptyBuffer(bytes) {\n    $.checkArgumentType(bytes, 'number', 'bytes');\n    var result = new buffer.Buffer(bytes);\n\n    for (var i = 0; i < bytes; i++) {\n      result.write('\\0', i);\n    }\n\n    return result;\n  },\n\n  /**\n   * Concatenates a buffer\n   *\n   * Shortcut for <tt>buffer.Buffer.concat</tt>\n   */\n  concat: buffer.Buffer.concat,\n  equals: equals,\n  equal: equals,\n\n  /**\n   * Transforms a number from 0 to 255 into a Buffer of size 1 with that value\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsSingleByteBuffer: function integerAsSingleByteBuffer(integer) {\n    $.checkArgumentType(integer, 'number', 'integer');\n    return new buffer.Buffer([integer & 0xff]);\n  },\n\n  /**\n   * Transform a 4-byte integer into a Buffer of length 4.\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsBuffer: function integerAsBuffer(integer) {\n    $.checkArgumentType(integer, 'number', 'integer');\n    var bytes = [];\n    bytes.push(integer >> 24 & 0xff);\n    bytes.push(integer >> 16 & 0xff);\n    bytes.push(integer >> 8 & 0xff);\n    bytes.push(integer & 0xff);\n    return new Buffer(bytes);\n  },\n\n  /**\n   * Transform the first 4 values of a Buffer into a number, in little endian encoding\n   *\n   * @param {Buffer} buffer\n   * @return {number}\n   */\n  integerFromBuffer: function integerFromBuffer(buffer) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    return buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];\n  },\n\n  /**\n   * Transforms the first byte of an array into a number ranging from -128 to 127\n   * @param {Buffer} buffer\n   * @return {number}\n   */\n  integerFromSingleByteBuffer: function integerFromBuffer(buffer) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    return buffer[0];\n  },\n\n  /**\n   * Transforms a buffer into a string with a number in hexa representation\n   *\n   * Shorthand for <tt>buffer.toString('hex')</tt>\n   *\n   * @param {Buffer} buffer\n   * @return {string}\n   */\n  bufferToHex: function bufferToHex(buffer) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    return buffer.toString('hex');\n  },\n\n  /**\n   * Reverse a buffer\n   * @param {Buffer} param\n   * @return {Buffer}\n   */\n  reverse: function reverse(param) {\n    var ret = new buffer.Buffer(param.length);\n\n    for (var i = 0; i < param.length; i++) {\n      ret[i] = param[param.length - i - 1];\n    }\n\n    return ret;\n  },\n\n  /**\n   * Transforms an hexa encoded string into a Buffer with binary values\n   *\n   * Shorthand for <tt>Buffer(string, 'hex')</tt>\n   *\n   * @param {string} string\n   * @return {Buffer}\n   */\n  hexToBuffer: function hexToBuffer(string) {\n    assert(js.isHexa(string));\n    return new buffer.Buffer(string, 'hex');\n  }\n};\nmodule.exports.NULL_HASH = module.exports.fill(new Buffer(32), 0);\nmodule.exports.EMPTY_BUFFER = new Buffer(0);","'use strict';\n\nvar _ = require('lodash');\n/**\n * Determines whether a string contains only hexadecimal values\n *\n * @name JSUtil.isHexa\n * @param {string} value\n * @return {boolean} true if the string is the hexa representation of a number\n */\n\n\nvar isHexa = function isHexa(value) {\n  if (!_.isString(value)) {\n    return false;\n  }\n\n  return /^[0-9a-fA-F]+$/.test(value);\n};\n/**\n * @namespace JSUtil\n */\n\n\nmodule.exports = {\n  /**\n   * Test if an argument is a valid JSON object. If it is, returns a truthy\n   * value (the json object decoded), so no double JSON.parse call is necessary\n   *\n   * @param {string} arg\n   * @return {Object|boolean} false if the argument is not a JSON string.\n   */\n  isValidJSON: function isValidJSON(arg) {\n    var parsed;\n\n    if (!_.isString(arg)) {\n      return false;\n    }\n\n    try {\n      parsed = JSON.parse(arg);\n    } catch (e) {\n      return false;\n    }\n\n    if (typeof parsed === 'object') {\n      return true;\n    }\n\n    return false;\n  },\n  isHexa: isHexa,\n  isHexaString: isHexa,\n\n  /**\n   * Clone an array\n   */\n  cloneArray: function cloneArray(array) {\n    return [].concat(array);\n  },\n\n  /**\n   * Define immutable properties on a target object\n   *\n   * @param {Object} target - An object to be extended\n   * @param {Object} values - An object of properties\n   * @return {Object} The target object\n   */\n  defineImmutable: function defineImmutable(target, values) {\n    Object.keys(values).forEach(function (key) {\n      Object.defineProperty(target, key, {\n        configurable: false,\n        enumerable: true,\n        value: values[key]\n      });\n    });\n    return target;\n  },\n\n  /**\n   * Checks that a value is a natural number, a positive integer or zero.\n   *\n   * @param {*} value\n   * @return {Boolean}\n   */\n  isNaturalNumber: function isNaturalNumber(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value && value >= 0;\n  }\n};","var ERRORS = require('./errors');\n\nvar NATIVE = require('./native'); // short-hand\n\n\nvar tfJSON = ERRORS.tfJSON;\nvar TfTypeError = ERRORS.TfTypeError;\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError;\nvar tfSubError = ERRORS.tfSubError;\nvar getValueTypeName = ERRORS.getValueTypeName;\nvar TYPES = {\n  arrayOf: function arrayOf(type, options) {\n    type = compile(type);\n    options = options || {};\n\n    function _arrayOf(array, strict) {\n      if (!NATIVE.Array(array)) return false;\n      if (NATIVE.Nil(array)) return false;\n      if (options.minLength !== undefined && array.length < options.minLength) return false;\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false;\n      if (options.length !== undefined && array.length !== options.length) return false;\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict);\n        } catch (e) {\n          throw tfSubError(e, i);\n        }\n      });\n    }\n\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']';\n\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}';\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' + (options.minLength === undefined ? 0 : options.minLength) + ',' + (options.maxLength === undefined ? Infinity : options.maxLength) + '}';\n      }\n\n      return str;\n    };\n\n    return _arrayOf;\n  },\n  maybe: function maybe(type) {\n    type = compile(type);\n\n    function _maybe(value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe);\n    }\n\n    _maybe.toJSON = function () {\n      return '?' + tfJSON(type);\n    };\n\n    return _maybe;\n  },\n  map: function map(propertyType, propertyKeyType) {\n    propertyType = compile(propertyType);\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType);\n\n    function _map(value, strict) {\n      if (!NATIVE.Object(value)) return false;\n      if (NATIVE.Nil(value)) return false;\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict);\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key');\n        }\n\n        try {\n          var propertyValue = value[propertyName];\n          typeforce(propertyType, propertyValue, strict);\n        } catch (e) {\n          throw tfSubError(e, propertyName);\n        }\n      }\n\n      return true;\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}';\n      };\n    } else {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyType) + '}';\n      };\n    }\n\n    return _map;\n  },\n  object: function object(uncompiled) {\n    var type = {};\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName]);\n    }\n\n    function _object(value, strict) {\n      if (!NATIVE.Object(value)) return false;\n      if (NATIVE.Nil(value)) return false;\n      var propertyName;\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName];\n          var propertyValue = value[propertyName];\n          typeforce(propertyType, propertyValue, strict);\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName);\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue;\n          throw new TfPropertyTypeError(undefined, propertyName);\n        }\n      }\n\n      return true;\n    }\n\n    _object.toJSON = function () {\n      return tfJSON(type);\n    };\n\n    return _object;\n  },\n  anyOf: function anyOf() {\n    var types = [].slice.call(arguments).map(compile);\n\n    function _anyOf(value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict);\n        } catch (e) {\n          return false;\n        }\n      });\n    }\n\n    _anyOf.toJSON = function () {\n      return types.map(tfJSON).join('|');\n    };\n\n    return _anyOf;\n  },\n  allOf: function allOf() {\n    var types = [].slice.call(arguments).map(compile);\n\n    function _allOf(value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict);\n        } catch (e) {\n          return false;\n        }\n      });\n    }\n\n    _allOf.toJSON = function () {\n      return types.map(tfJSON).join(' & ');\n    };\n\n    return _allOf;\n  },\n  quacksLike: function quacksLike(type) {\n    function _quacksLike(value) {\n      return type === getValueTypeName(value);\n    }\n\n    _quacksLike.toJSON = function () {\n      return type;\n    };\n\n    return _quacksLike;\n  },\n  tuple: function tuple() {\n    var types = [].slice.call(arguments).map(compile);\n\n    function _tuple(values, strict) {\n      if (NATIVE.Nil(values)) return false;\n      if (NATIVE.Nil(values.length)) return false;\n      if (strict && values.length !== types.length) return false;\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict);\n        } catch (e) {\n          throw tfSubError(e, i);\n        }\n      });\n    }\n\n    _tuple.toJSON = function () {\n      return '(' + types.map(tfJSON).join(', ') + ')';\n    };\n\n    return _tuple;\n  },\n  value: function value(expected) {\n    function _value(actual) {\n      return actual === expected;\n    }\n\n    _value.toJSON = function () {\n      return expected;\n    };\n\n    return _value;\n  } // TODO: deprecate\n\n};\nTYPES.oneOf = TYPES.anyOf;\n\nfunction compile(type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1));\n    return NATIVE[type] || TYPES.quacksLike(type);\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1');\n      return TYPES.arrayOf(type[0]);\n    }\n\n    return TYPES.object(type);\n  } else if (NATIVE.Function(type)) {\n    return type;\n  }\n\n  return TYPES.value(type);\n}\n\nfunction typeforce(type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true;\n    throw new TfTypeError(surrogate || type, value);\n  } // JIT\n\n\n  return typeforce(compile(type), value, strict);\n} // assign types to typeforce function\n\n\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName];\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName];\n}\n\nvar EXTRA = require('./extra');\n\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName];\n}\n\ntypeforce.compile = compile;\ntypeforce.TfTypeError = TfTypeError;\ntypeforce.TfPropertyTypeError = TfPropertyTypeError;\nmodule.exports = typeforce;","'use strict';\n\nvar BN = require('bn.js');\n\nvar $ = require('../util/preconditions');\n\nvar _ = require('lodash');\n\nvar reversebuf = function reversebuf(buf) {\n  var buf2 = new Buffer(buf.length);\n\n  for (var i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i];\n  }\n\n  return buf2;\n};\n\nBN.Zero = new BN(0);\nBN.One = new BN(1);\nBN.Minus1 = new BN(-1);\n\nBN.fromNumber = function (n) {\n  $.checkArgument(_.isNumber(n));\n  return new BN(n);\n};\n\nBN.fromString = function (str, base) {\n  $.checkArgument(_.isString(str));\n  return new BN(str, base);\n};\n\nBN.fromBuffer = function (buf, opts) {\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf);\n  }\n\n  var hex = buf.toString('hex');\n  var bn = new BN(hex, 16);\n  return bn;\n};\n/**\n * Instantiate a BigNumber from a \"signed magnitude buffer\"\n * (a buffer where the most significant bit represents the sign (0 = positive, -1 = negative))\n */\n\n\nBN.fromSM = function (buf, opts) {\n  var ret;\n\n  if (buf.length === 0) {\n    return BN.fromBuffer(new Buffer([0]));\n  }\n\n  var endian = 'big';\n\n  if (opts) {\n    endian = opts.endian;\n  }\n\n  if (endian === 'little') {\n    buf = reversebuf(buf);\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f;\n    ret = BN.fromBuffer(buf);\n    ret.neg().copy(ret);\n  } else {\n    ret = BN.fromBuffer(buf);\n  }\n\n  return ret;\n};\n\nBN.prototype.toNumber = function () {\n  return parseInt(this.toString(10), 10);\n};\n\nBN.prototype.toBuffer = function (opts) {\n  var buf, hex;\n\n  if (opts && opts.size) {\n    hex = this.toString(16, 2);\n    var natlen = hex.length / 2;\n    buf = new Buffer(hex, 'hex');\n\n    if (natlen === opts.size) {\n      buf = buf;\n    } else if (natlen > opts.size) {\n      buf = BN.trim(buf, natlen);\n    } else if (natlen < opts.size) {\n      buf = BN.pad(buf, natlen, opts.size);\n    }\n  } else {\n    hex = this.toString(16, 2);\n    buf = new Buffer(hex, 'hex');\n  }\n\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf);\n  }\n\n  return buf;\n};\n\nBN.prototype.toSMBigEndian = function () {\n  var buf;\n\n  if (this.cmp(BN.Zero) === -1) {\n    buf = this.neg().toBuffer();\n\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([new Buffer([0x80]), buf]);\n    } else {\n      buf[0] = buf[0] | 0x80;\n    }\n  } else {\n    buf = this.toBuffer();\n\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([new Buffer([0x00]), buf]);\n    }\n  }\n\n  if (buf.length === 1 & buf[0] === 0) {\n    buf = new Buffer([]);\n  }\n\n  return buf;\n};\n\nBN.prototype.toSM = function (opts) {\n  var endian = opts ? opts.endian : 'big';\n  var buf = this.toSMBigEndian();\n\n  if (endian === 'little') {\n    buf = reversebuf(buf);\n  }\n\n  return buf;\n};\n/**\n * Create a BN from a \"ScriptNum\":\n * This is analogous to the constructor for CScriptNum in bitcoind. Many ops in\n * bitcoind's script interpreter use CScriptNum, which is not really a proper\n * bignum. Instead, an error is thrown if trying to input a number bigger than\n * 4 bytes. We copy that behavior here. A third argument, `size`, is provided to\n * extend the hard limit of 4 bytes, as some usages require more than 4 bytes.\n */\n\n\nBN.fromScriptNumBuffer = function (buf, fRequireMinimal, size) {\n  var nMaxNumSize = size || 4;\n  $.checkArgument(buf.length <= nMaxNumSize, new Error('script number overflow'));\n\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number');\n      }\n    }\n  }\n\n  return BN.fromSM(buf, {\n    endian: 'little'\n  });\n};\n/**\n * The corollary to the above, with the notable exception that we do not throw\n * an error if the output is larger than four bytes. (Which can happen if\n * performing a numerical operation that results in an overflow to more than 4\n * bytes).\n */\n\n\nBN.prototype.toScriptNumBuffer = function () {\n  return this.toSM({\n    endian: 'little'\n  });\n};\n\nBN.prototype.gt = function (b) {\n  return this.cmp(b) > 0;\n};\n\nBN.prototype.gte = function (b) {\n  return this.cmp(b) >= 0;\n};\n\nBN.prototype.lt = function (b) {\n  return this.cmp(b) < 0;\n};\n\nBN.trim = function (buf, natlen) {\n  return buf.slice(natlen - buf.length, buf.length);\n};\n\nBN.pad = function (buf, natlen, size) {\n  var rbuf = new Buffer(size);\n\n  for (var i = 0; i < buf.length; i++) {\n    rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i];\n  }\n\n  for (i = 0; i < size - natlen; i++) {\n    rbuf[i] = 0;\n  }\n\n  return rbuf;\n};\n\nmodule.exports = BN;","'use strict';\n\nvar elliptic = exports;\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves'); // Protocols\n\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');","'use strict';\n\nvar crypto = require('crypto');\n\nvar BufferUtil = require('../util/buffer');\n\nvar $ = require('../util/preconditions');\n\nvar Hash = module.exports;\n\nHash.sha1 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha1').update(buf).digest();\n};\n\nHash.sha1.blocksize = 512;\n\nHash.sha256 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha256').update(buf).digest();\n};\n\nHash.sha256.blocksize = 512;\n\nHash.sha256sha256 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.sha256(Hash.sha256(buf));\n};\n\nHash.ripemd160 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('ripemd160').update(buf).digest();\n};\n\nHash.sha256ripemd160 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.ripemd160(Hash.sha256(buf));\n};\n\nHash.sha512 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha512').update(buf).digest();\n};\n\nHash.sha512.blocksize = 1024;\n\nHash.hmac = function (hashf, data, key) {\n  //http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  //http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(BufferUtil.isBuffer(data));\n  $.checkArgument(BufferUtil.isBuffer(key));\n  $.checkArgument(hashf.blocksize);\n  var blocksize = hashf.blocksize / 8;\n\n  if (key.length > blocksize) {\n    key = hashf(key);\n  } else if (key < blocksize) {\n    var fill = new Buffer(blocksize);\n    fill.fill(0);\n    key.copy(fill);\n    key = fill;\n  }\n\n  var o_key = new Buffer(blocksize);\n  o_key.fill(0x5c);\n  var i_key = new Buffer(blocksize);\n  i_key.fill(0x36);\n  var o_key_pad = new Buffer(blocksize);\n  var i_key_pad = new Buffer(blocksize);\n\n  for (var i = 0; i < blocksize; i++) {\n    o_key_pad[i] = o_key[i] ^ key[i];\n    i_key_pad[i] = i_key[i] ^ key[i];\n  }\n\n  return hashf(Buffer.concat([o_key_pad, hashf(Buffer.concat([i_key_pad, data]))]));\n};\n\nHash.sha256hmac = function (data, key) {\n  return Hash.hmac(Hash.sha256, data, key);\n};\n\nHash.sha512hmac = function (data, key) {\n  return Hash.hmac(Hash.sha512, data, key);\n};","'use strict';\n\nvar bufferUtil = require('../util/buffer');\n\nvar assert = require('assert');\n\nvar BufferWriter = function BufferWriter(obj) {\n  if (!(this instanceof BufferWriter)) return new BufferWriter(obj);\n  if (obj) this.set(obj);else this.bufs = [];\n};\n\nBufferWriter.prototype.set = function (obj) {\n  this.bufs = obj.bufs || this.bufs || [];\n  return this;\n};\n\nBufferWriter.prototype.toBuffer = function () {\n  return this.concat();\n};\n\nBufferWriter.prototype.concat = function () {\n  return Buffer.concat(this.bufs);\n};\n\nBufferWriter.prototype.write = function (buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeReverse = function (buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(bufferUtil.reverse(buf));\n  return this;\n};\n\nBufferWriter.prototype.writeUInt8 = function (n) {\n  var buf = new Buffer(1);\n  buf.writeUInt8(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt16BE = function (n) {\n  var buf = new Buffer(2);\n  buf.writeUInt16BE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt16LE = function (n) {\n  var buf = new Buffer(2);\n  buf.writeUInt16LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt32BE = function (n) {\n  var buf = new Buffer(4);\n  buf.writeUInt32BE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeInt32LE = function (n) {\n  var buf = new Buffer(4);\n  buf.writeInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt32LE = function (n) {\n  var buf = new Buffer(4);\n  buf.writeUInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt64BEBN = function (bn) {\n  var buf = bn.toBuffer({\n    size: 8\n  });\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt64LEBN = function (bn) {\n  var buf = bn.toBuffer({\n    size: 8\n  });\n  this.writeReverse(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeVarintNum = function (n) {\n  var buf = BufferWriter.varintBufNum(n);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeVarintBN = function (bn) {\n  var buf = BufferWriter.varintBufBN(bn);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.varintBufNum = function (n) {\n  var buf = undefined;\n\n  if (n < 253) {\n    buf = new Buffer(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = new Buffer(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = new Buffer(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    buf = new Buffer(1 + 8);\n    buf.writeUInt8(255, 0);\n    buf.writeInt32LE(n & -1, 1);\n    buf.writeUInt32LE(Math.floor(n / 0x100000000), 5);\n  }\n\n  return buf;\n};\n\nBufferWriter.varintBufBN = function (bn) {\n  var buf = undefined;\n  var n = bn.toNumber();\n\n  if (n < 253) {\n    buf = new Buffer(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = new Buffer(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = new Buffer(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    var bw = new BufferWriter();\n    bw.writeUInt8(255);\n    bw.writeUInt64LEBN(bn);\n    var buf = bw.concat();\n  }\n\n  return buf;\n};\n\nmodule.exports = BufferWriter;","// https://en.bitcoin.it/wiki/List_of_address_prefixes\n// Dogecoin BIP32 is a proposed standard: https://bitcointalk.org/index.php?topic=409731\nmodule.exports = {\n  bitcoin: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: {\n      public: 0x0488b21e,\n      private: 0x0488ade4\n    },\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80\n  },\n  regtest: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bcrt',\n    bip32: {\n      public: 0x043587cf,\n      private: 0x04358394\n    },\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef\n  },\n  testnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'tb',\n    bip32: {\n      public: 0x043587cf,\n      private: 0x04358394\n    },\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef\n  }\n};","'use strict';\n\nvar _ = require('lodash');\n\nfunction format(message, args) {\n  return message.replace('{0}', args[0]).replace('{1}', args[1]).replace('{2}', args[2]);\n}\n\nvar traverseNode = function traverseNode(parent, errorDefinition) {\n  var NodeError = function NodeError() {\n    if (_.isString(errorDefinition.message)) {\n      this.message = format(errorDefinition.message, arguments);\n    } else if (_.isFunction(errorDefinition.message)) {\n      this.message = errorDefinition.message.apply(null, arguments);\n    } else {\n      throw new Error('Invalid error definition for ' + errorDefinition.name);\n    }\n\n    this.stack = this.message + '\\n' + new Error().stack;\n  };\n\n  NodeError.prototype = Object.create(parent.prototype);\n  NodeError.prototype.name = parent.prototype.name + errorDefinition.name;\n  parent[errorDefinition.name] = NodeError;\n\n  if (errorDefinition.errors) {\n    childDefinitions(NodeError, errorDefinition.errors);\n  }\n\n  return NodeError;\n};\n/* jshint latedef: false */\n\n\nvar childDefinitions = function childDefinitions(parent, _childDefinitions) {\n  _.each(_childDefinitions, function (childDefinition) {\n    traverseNode(parent, childDefinition);\n  });\n};\n/* jshint latedef: true */\n\n\nvar traverseRoot = function traverseRoot(parent, errorsDefinition) {\n  childDefinitions(parent, errorsDefinition);\n  return parent;\n};\n\nvar bitcore = {};\n\nbitcore.Error = function () {\n  this.message = 'Internal error';\n  this.stack = this.message + '\\n' + new Error().stack;\n};\n\nbitcore.Error.prototype = Object.create(Error.prototype);\nbitcore.Error.prototype.name = 'bitcore.Error';\n\nvar data = require('./spec');\n\ntraverseRoot(bitcore.Error, data);\nmodule.exports = bitcore.Error;\n\nmodule.exports.extend = function (spec) {\n  return traverseNode(bitcore.Error, spec);\n};","'use strict';\n\nvar BN = require('./bn');\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar Signature = function Signature(r, s) {\n  if (!(this instanceof Signature)) {\n    return new Signature(r, s);\n  }\n\n  if (r instanceof BN) {\n    this.set({\n      r: r,\n      s: s\n    });\n  } else if (r) {\n    var obj = r;\n    this.set(obj);\n  }\n};\n/* jshint maxcomplexity: 7 */\n\n\nSignature.prototype.set = function (obj) {\n  this.r = obj.r || this.r || undefined;\n  this.s = obj.s || this.s || undefined;\n  this.i = typeof obj.i !== 'undefined' ? obj.i : this.i; //public key recovery parameter in range [0, 3]\n\n  this.compressed = typeof obj.compressed !== 'undefined' ? obj.compressed : this.compressed; //whether the recovered pubkey is compressed\n\n  this.nhashtype = obj.nhashtype || this.nhashtype || undefined;\n  return this;\n};\n\nSignature.fromCompact = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf), 'Argument is expected to be a Buffer');\n  var sig = new Signature();\n  var compressed = true;\n  var i = buf.slice(0, 1)[0] - 27 - 4;\n\n  if (i < 0) {\n    compressed = false;\n    i = i + 4;\n  }\n\n  var b2 = buf.slice(1, 33);\n  var b3 = buf.slice(33, 65);\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be 0, 1, 2, or 3'));\n  $.checkArgument(b2.length === 32, new Error('r must be 32 bytes'));\n  $.checkArgument(b3.length === 32, new Error('s must be 32 bytes'));\n  sig.compressed = compressed;\n  sig.i = i;\n  sig.r = BN.fromBuffer(b2);\n  sig.s = BN.fromBuffer(b3);\n  return sig;\n};\n\nSignature.fromDER = Signature.fromBuffer = function (buf, strict) {\n  var obj = Signature.parseDER(buf, strict);\n  var sig = new Signature();\n  sig.r = obj.r;\n  sig.s = obj.s;\n  return sig;\n}; // The format used in a tx\n\n\nSignature.fromTxFormat = function (buf) {\n  var nhashtype = buf.readUInt8(buf.length - 1);\n  var derbuf = buf.slice(0, buf.length - 1);\n  var sig = new Signature.fromDER(derbuf, false);\n  sig.nhashtype = nhashtype;\n  return sig;\n};\n\nSignature.fromString = function (str) {\n  var buf = new Buffer(str, 'hex');\n  return Signature.fromDER(buf);\n};\n/**\n * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n */\n\n\nSignature.parseDER = function (buf, strict) {\n  $.checkArgument(BufferUtil.isBuffer(buf), new Error('DER formatted signature should be a buffer'));\n\n  if (_.isUndefined(strict)) {\n    strict = true;\n  }\n\n  var header = buf[0];\n  $.checkArgument(header === 0x30, new Error('Header byte should be 0x30'));\n  var length = buf[1];\n  var buflength = buf.slice(2).length;\n  $.checkArgument(!strict || length === buflength, new Error('Length byte should length of what follows'));\n  length = length < buflength ? length : buflength;\n  var rheader = buf[2 + 0];\n  $.checkArgument(rheader === 0x02, new Error('Integer byte for r should be 0x02'));\n  var rlength = buf[2 + 1];\n  var rbuf = buf.slice(2 + 2, 2 + 2 + rlength);\n  var r = BN.fromBuffer(rbuf);\n  var rneg = buf[2 + 1 + 1] === 0x00 ? true : false;\n  $.checkArgument(rlength === rbuf.length, new Error('Length of r incorrect'));\n  var sheader = buf[2 + 2 + rlength + 0];\n  $.checkArgument(sheader === 0x02, new Error('Integer byte for s should be 0x02'));\n  var slength = buf[2 + 2 + rlength + 1];\n  var sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength);\n  var s = BN.fromBuffer(sbuf);\n  var sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00 ? true : false;\n  $.checkArgument(slength === sbuf.length, new Error('Length of s incorrect'));\n  var sumlength = 2 + 2 + rlength + 2 + slength;\n  $.checkArgument(length === sumlength - 2, new Error('Length of signature incorrect'));\n  var obj = {\n    header: header,\n    length: length,\n    rheader: rheader,\n    rlength: rlength,\n    rneg: rneg,\n    rbuf: rbuf,\n    r: r,\n    sheader: sheader,\n    slength: slength,\n    sneg: sneg,\n    sbuf: sbuf,\n    s: s\n  };\n  return obj;\n};\n\nSignature.prototype.toCompact = function (i, compressed) {\n  i = typeof i === 'number' ? i : this.i;\n  compressed = typeof compressed === 'boolean' ? compressed : this.compressed;\n\n  if (!(i === 0 || i === 1 || i === 2 || i === 3)) {\n    throw new Error('i must be equal to 0, 1, 2, or 3');\n  }\n\n  var val = i + 27 + 4;\n\n  if (compressed === false) {\n    val = val - 4;\n  }\n\n  var b1 = new Buffer([val]);\n  var b2 = this.r.toBuffer({\n    size: 32\n  });\n  var b3 = this.s.toBuffer({\n    size: 32\n  });\n  return Buffer.concat([b1, b2, b3]);\n};\n\nSignature.prototype.toBuffer = Signature.prototype.toDER = function () {\n  var rnbuf = this.r.toBuffer();\n  var snbuf = this.s.toBuffer();\n  var rneg = rnbuf[0] & 0x80 ? true : false;\n  var sneg = snbuf[0] & 0x80 ? true : false;\n  var rbuf = rneg ? Buffer.concat([new Buffer([0x00]), rnbuf]) : rnbuf;\n  var sbuf = sneg ? Buffer.concat([new Buffer([0x00]), snbuf]) : snbuf;\n  var rlength = rbuf.length;\n  var slength = sbuf.length;\n  var length = 2 + rlength + 2 + slength;\n  var rheader = 0x02;\n  var sheader = 0x02;\n  var header = 0x30;\n  var der = Buffer.concat([new Buffer([header, length, rheader, rlength]), rbuf, new Buffer([sheader, slength]), sbuf]);\n  return der;\n};\n\nSignature.prototype.toString = function () {\n  var buf = this.toDER();\n  return buf.toString('hex');\n};\n/**\n * This function is translated from bitcoind's IsDERSignature and is used in\n * the script interpreter.  This \"DER\" format actually includes an extra byte,\n * the nhashtype, at the end. It is really the tx format, not DER format.\n *\n * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n * Where R and S are not negative (their first byte has its highest bit not set), and not\n * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n * in which case a single 0 byte is necessary and even required).\n *\n * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n */\n\n\nSignature.isTxDER = function (buf) {\n  if (buf.length < 9) {\n    //  Non-canonical signature: too short\n    return false;\n  }\n\n  if (buf.length > 73) {\n    // Non-canonical signature: too long\n    return false;\n  }\n\n  if (buf[0] !== 0x30) {\n    //  Non-canonical signature: wrong type\n    return false;\n  }\n\n  if (buf[1] !== buf.length - 3) {\n    //  Non-canonical signature: wrong length marker\n    return false;\n  }\n\n  var nLenR = buf[3];\n\n  if (5 + nLenR >= buf.length) {\n    //  Non-canonical signature: S length misplaced\n    return false;\n  }\n\n  var nLenS = buf[5 + nLenR];\n\n  if (nLenR + nLenS + 7 !== buf.length) {\n    //  Non-canonical signature: R+S length mismatch\n    return false;\n  }\n\n  var R = buf.slice(4);\n\n  if (buf[4 - 2] !== 0x02) {\n    //  Non-canonical signature: R value type mismatch\n    return false;\n  }\n\n  if (nLenR === 0) {\n    //  Non-canonical signature: R length is zero\n    return false;\n  }\n\n  if (R[0] & 0x80) {\n    //  Non-canonical signature: R value negative\n    return false;\n  }\n\n  if (nLenR > 1 && R[0] === 0x00 && !(R[1] & 0x80)) {\n    //  Non-canonical signature: R value excessively padded\n    return false;\n  }\n\n  var S = buf.slice(6 + nLenR);\n\n  if (buf[6 + nLenR - 2] !== 0x02) {\n    //  Non-canonical signature: S value type mismatch\n    return false;\n  }\n\n  if (nLenS === 0) {\n    //  Non-canonical signature: S length is zero\n    return false;\n  }\n\n  if (S[0] & 0x80) {\n    //  Non-canonical signature: S value negative\n    return false;\n  }\n\n  if (nLenS > 1 && S[0] === 0x00 && !(S[1] & 0x80)) {\n    //  Non-canonical signature: S value excessively padded\n    return false;\n  }\n\n  return true;\n};\n/**\n * Compares to bitcoind's IsLowDERSignature\n * See also ECDSA signature algorithm which enforces this.\n * See also BIP 62, \"low S values in signatures\"\n */\n\n\nSignature.prototype.hasLowS = function () {\n  if (this.s.lt(new BN(1)) || this.s.gt(new BN('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * @returns true if the nhashtype is exactly equal to one of the standard options or combinations thereof.\n * Translated from bitcoind's IsDefinedHashtypeSignature\n */\n\n\nSignature.prototype.hasDefinedHashtype = function () {\n  if (!JSUtil.isNaturalNumber(this.nhashtype)) {\n    return false;\n  } // accept with or without Signature.SIGHASH_ANYONECANPAY by ignoring the bit\n\n\n  var temp = this.nhashtype & ~Signature.SIGHASH_ANYONECANPAY;\n\n  if (temp < Signature.SIGHASH_ALL || temp > Signature.SIGHASH_SINGLE) {\n    return false;\n  }\n\n  return true;\n};\n\nSignature.prototype.toTxFormat = function () {\n  var derbuf = this.toDER();\n  var buf = new Buffer(1);\n  buf.writeUInt8(this.nhashtype, 0);\n  return Buffer.concat([derbuf, buf]);\n};\n\nSignature.SIGHASH_ALL = 0x01;\nSignature.SIGHASH_NONE = 0x02;\nSignature.SIGHASH_SINGLE = 0x03;\nSignature.SIGHASH_ANYONECANPAY = 0x80;\nmodule.exports = Signature;","module.exports = require('./script');\nmodule.exports.Interpreter = require('./interpreter');","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = c >> 6 | 192;\n          res[p++] = c & 63 | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = c >> 18 | 240;\n          res[p++] = c >> 12 & 63 | 128;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        } else {\n          res[p++] = c >> 12 | 224;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (i = 0; i < msg.length; i += 2) {\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n      }\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) {\n      res[i] = msg[i] | 0;\n    }\n  }\n\n  return res;\n}\n\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    res += zero2(msg[i].toString(16));\n  }\n\n  return res;\n}\n\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.shr64_lo = shr64_lo;","var typeforce = require('typeforce');\n\nvar UINT31_MAX = Math.pow(2, 31) - 1;\n\nfunction UInt31(value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\n\nfunction BIP32Path(value) {\n  return typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/);\n}\n\nBIP32Path.toJSON = function () {\n  return 'BIP32 derivation path';\n};\n\nvar SATOSHI_MAX = 21 * 1e14;\n\nfunction Satoshi(value) {\n  return typeforce.UInt53(value) && value <= SATOSHI_MAX;\n} // external dependent types\n\n\nvar ECPoint = typeforce.quacksLike('Point'); // exposed, external API\n\nvar Network = typeforce.compile({\n  messagePrefix: typeforce.oneOf(typeforce.Buffer, typeforce.String),\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32\n  },\n  pubKeyHash: typeforce.UInt8,\n  scriptHash: typeforce.UInt8,\n  wif: typeforce.UInt8\n}); // extend typeforce types with ours\n\nvar types = {\n  BIP32Path: BIP32Path,\n  Buffer256bit: typeforce.BufferN(32),\n  ECPoint: ECPoint,\n  Hash160bit: typeforce.BufferN(20),\n  Hash256bit: typeforce.BufferN(32),\n  Network: Network,\n  Satoshi: Satoshi,\n  UInt31: UInt31\n};\n\nfor (var typeName in typeforce) {\n  types[typeName] = typeforce[typeName];\n}\n\nmodule.exports = types;","'use strict';\n\nvar elliptic = exports;\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.hmacDRBG = require('./elliptic/hmac-drbg');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves'); // Protocols\n\nelliptic.ec = require('./elliptic/ec');","'use strict';\n\nvar BN = require('./crypto/bn');\n\nvar Point = require('./crypto/point');\n\nvar Hash = require('./crypto/hash');\n\nvar JSUtil = require('./util/js');\n\nvar Network = require('./networks');\n\nvar _ = require('lodash');\n\nvar $ = require('./util/preconditions');\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\n\n\nfunction PublicKey(data, extra) {\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra); // validation\n\n\n  info.point.validate();\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Network.defaultNetwork\n  });\n  return this;\n}\n\n;\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\n\nPublicKey.prototype._classifyArgs = function (data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  }; // detect type of data\n\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof data === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Network.get(extra.network);\n  }\n\n  return info;\n};\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\n\n\nPublicKey._isPrivateKey = function (param) {\n  var PrivateKey = require('./privatekey');\n\n  return param instanceof PrivateKey;\n};\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\n\n\nPublicKey._isBuffer = function (param) {\n  return param instanceof Buffer || param instanceof Uint8Array;\n};\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\n\n\nPublicKey._transformPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\n\n\nPublicKey._transformDER = function (buf, strict) {\n  /* jshint maxstatements: 30 */\n\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n  strict = _.isUndefined(strict) ? true : strict;\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || !strict && (buf[0] === 0x06 || buf[0] === 0x07)) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n\n  return info;\n};\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\n\n\nPublicKey._transformX = function (odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\n\n\nPublicKey._transformObject = function (json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\n\n\nPublicKey.fromPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n\n  var info = PublicKey._transformPrivateKey(privkey);\n\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\n\n\nPublicKey.fromDER = PublicKey.fromBuffer = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n\n  var info = PublicKey._transformDER(buf, strict);\n\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\n\n\nPublicKey.fromPoint = function (point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\n\n\nPublicKey.fromString = function (str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n\n  var info = PublicKey._transformDER(buf);\n\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\n\n\nPublicKey.fromX = function (odd, x) {\n  var info = PublicKey._transformX(odd, x);\n\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\n\n\nPublicKey.getValidationError = function (data) {\n  var error;\n\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n};\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\n\n\nPublicKey.isValid = function (data) {\n  return !PublicKey.getValidationError(data);\n};\n/**\n * @returns {Object} A plain object of the PublicKey\n */\n\n\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\n\n\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function () {\n  var x = this.point.getX();\n  var y = this.point.getY();\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n  var prefix;\n\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\n\n\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\n\n\nPublicKey.prototype.toAddress = function (network) {\n  var Address = require('./address');\n\n  return Address.fromPublicKey(this, network || this.network);\n};\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\n\n\nPublicKey.prototype.toString = function () {\n  return this.toDER().toString('hex');\n};\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\n\n\nPublicKey.prototype.inspect = function () {\n  return '<PublicKey: ' + this.toString() + (this.compressed ? '' : ', uncompressed') + '>';\n};\n\nmodule.exports = PublicKey;","(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    // May be `new BN(bn)` ?\n    if (number !== null && typeof number === 'object' && Array.isArray(number.words)) {\n      return number;\n    }\n\n    this.sign = false;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (base === 'le' || base === 'be') {\n      endian = base;\n      base = 10;\n    }\n\n    if (number !== null) this._init(number || 0, base || 10, endian || 'be');\n  }\n\n  if (typeof module === 'object') module.exports = BN;else exports.BN = BN;\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      if (number < 0) {\n        this.sign = true;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      return;\n    } else if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') base = 16;\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') start++;\n    if (base === 16) this._parseHex(number, start);else this._parseBase(number, base, start);\n    if (number[0] === '-') this.sign = true;\n    this.strip();\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var off = 0;\n\n    if (endian === 'be') {\n      for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        var w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (var i = 0, j = 0; i < number.length; i += 3) {\n        var w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) r |= c - 49 + 0xa; // 'A' - 'F'\n      else if (c >= 17 && c <= 22) r |= c - 17 + 0xa; // '0' - '9'\n        else r |= c & 0xf;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // Scan 24-bit chunks and add them to the number\n\n\n    var off = 0;\n\n    for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n      var w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      var w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) r += c - 49 + 0xa; // 'A'\n      else if (c >= 17) r += c - 17 + 0xa; // '0' - '9'\n        else r += c;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      var word = parseBase(number, i, number.length, base);\n\n      for (var i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.sign = this.sign;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) this.sign = false;\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n  \n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n  \n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n  \n  */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n\n    if (base === 16 || base === 'hex') {\n      var out = '';\n      var off = 0;\n      var padding = padding | 0 || 1;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;else out = word + out;\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) out = carry.toString(16) + out;\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.sign) out = '-' + out;\n      return out;\n    } else if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      var out = '';\n      var c = this.clone();\n      c.sign = false;\n\n      while (c.cmpn(0) !== 0) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n        if (c.cmpn(0) !== 0) out = zeros[groupSize - r.length] + r + out;else out = r + out;\n      }\n\n      if (this.cmpn(0) === 0) out = '0' + out;\n      if (this.sign) out = '-' + out;\n      return out;\n    } else {\n      assert(false, 'Base should be between 2 and 36');\n    }\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toArray = function toArray() {\n    this.strip();\n    var res = new Array(this.byteLength());\n    res[0] = 0;\n    var q = this.clone();\n\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.ishrn(8); // Assume big-endian\n\n      res[res.length - i - 1] = b;\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) r++;\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var hi = 0;\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  }; // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.cmpn(0) === 0) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    if (this.cmpn(0) === 0) return this.clone();\n    var r = this.clone();\n    r.sign = !this.sign;\n    return r;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.ior = function ior(num) {\n    this.sign = this.sign || num.sign;\n\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);else return num.clone().ior(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iand = function iand(num) {\n    this.sign = this.sign && num.sign; // b = min-length(num, this)\n\n    var b;\n    if (this.length > num.length) b = num;else b = this;\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);else return num.clone().iand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.ixor = function ixor(num) {\n    this.sign = this.sign || num.sign; // a.length > b.length\n\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) for (; i < a.length; i++) {\n      this.words[i] = a.words[i];\n    }\n    this.length = a.length;\n    return this.strip();\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);else return num.clone().ixor(this);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    while (this.length <= off) {\n      this.words[this.length++] = 0;\n    }\n\n    if (val) this.words[off] = this.words[off] | 1 << wbit;else this.words[off] = this.words[off] & ~(1 << wbit);\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    // negative + positive\n    if (this.sign && !num.sign) {\n      this.sign = false;\n      var r = this.isub(num);\n      this.sign = !this.sign;\n      return this._normSign(); // positive + negative\n    } else if (!this.sign && num.sign) {\n      num.sign = false;\n      var r = this.isub(num);\n      num.sign = true;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      var r = a.words[i] + b.words[i] + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      var r = a.words[i] + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    if (num.sign && !this.sign) {\n      num.sign = false;\n      var res = this.sub(num);\n      num.sign = true;\n      return res;\n    } else if (!num.sign && this.sign) {\n      this.sign = false;\n      var res = num.sub(this);\n      this.sign = true;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);else return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.sign) {\n      num.sign = false;\n      var r = this.iadd(num);\n      num.sign = true;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.sign) {\n      this.sign = false;\n      this.iadd(num);\n      this.sign = true;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.sign = false;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a;\n    var b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      var r = a.words[i] - b.words[i] + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      var r = a.words[i] + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) for (; i < a.length; i++) {\n      this.words[i] = a.words[i];\n    }\n    this.length = Math.max(this.length, i);\n    if (a !== this) this.sign = true;\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n  /*\n  // NOTE: This could be potentionally used to generate loop-less multiplications\n  function _genCombMulTo(alen, blen) {\n    var len = alen + blen - 1;\n    var src = [\n      'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n          'mask = 0x3ffffff, shift = 0x4000000;',\n      'out.length = ' + len + ';'\n    ];\n    for (var k = 0; k < len; k++) {\n      var minJ = Math.max(0, k - alen + 1);\n      var maxJ = Math.min(k, blen - 1);\n  \n      for (var j = minJ; j <= maxJ; j++) {\n        var i = k - j;\n        var mul = 'a[' + i + '] * b[' + j + ']';\n  \n        if (j === minJ) {\n          src.push('w = ' + mul + ' + c;');\n          src.push('c = (w / shift) | 0;');\n        } else {\n          src.push('w += ' + mul + ';');\n          src.push('c += (w / shift) | 0;');\n        }\n        src.push('w &= mask;');\n      }\n      src.push('o[' + k + '] = w;');\n    }\n    src.push('if (c !== 0) {',\n             '  o[' + k + '] = c;',\n             '  out.length++;',\n             '}',\n             'return out;');\n  \n    return src.join('\\n');\n  }\n  */\n\n\n  BN.prototype._smallMulTo = function _smallMulTo(num, out) {\n    out.sign = num.sign !== this.sign;\n    out.length = this.length + num.length;\n    var carry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = this.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  };\n\n  BN.prototype._bigMulTo = function _bigMulTo(num, out) {\n    out.sign = num.sign !== this.sign;\n    out.length = this.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = this.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  };\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    if (this.length + num.length < 63) res = this._smallMulTo(num, out);else res = this._bigMulTo(num, out);\n    return res;\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n      return this;\n    }\n\n    var tlen = this.length;\n    var nlen = num.length;\n    this.sign = num.sign !== this.sign;\n    this.length = this.length + num.length;\n    this.words[this.length - 1] = 0;\n\n    for (var k = this.length - 2; k >= 0; k--) {\n      // Sum all words with the same `i + j = k` and accumulate `carry`,\n      // note that carry could be >= 0x3ffffff\n      var carry = 0;\n      var rword = 0;\n      var maxJ = Math.min(k, nlen - 1);\n\n      for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = this.words[i];\n        var b = num.words[j];\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        carry += r / 0x4000000 | 0;\n        lo += rword;\n        rword = lo & 0x3ffffff;\n        carry += lo >>> 26;\n      }\n\n      this.words[k] = rword;\n      this.words[k + 1] += carry;\n      carry = 0;\n    } // Propagate overflows\n\n\n    var carry = 0;\n\n    for (var i = 1; i < this.length; i++) {\n      var w = this.words[i] + carry;\n      this.words[i] = w & 0x3ffffff;\n      carry = w >>> 26;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number'); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = this.words[i] * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.mul(this);\n  }; // Shift-left in-place\n\n\n  BN.prototype.ishln = function ishln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = this.words[i] - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (var i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (var i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) h = (hint - hint % 26) / 26;else h = 0;\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i];\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    this.strip();\n    return this;\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      return false;\n    } // Check bit and return\n\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(!this.sign, 'imaskn works only with positive numbers');\n    if (r !== 0) s++;\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.sign) {\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.sign = false;\n        return this;\n      }\n\n      this.sign = false;\n      this.isubn(num);\n      this.sign = true;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) this.words[i + 1] = 1;else this.words[i + 1]++;\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.sign) {\n      this.sign = false;\n      this.iaddn(num);\n      this.sign = true;\n      return this;\n    }\n\n    this.words[0] -= num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n      this.words[i] += 0x4000000;\n      this.words[i + 1] -= 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.sign = false;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    // Bigger storage is needed\n    var len = num.length + shift;\n    var i;\n\n    if (this.words.length < len) {\n      var t = new Array(len);\n\n      for (var i = 0; i < this.length; i++) {\n        t[i] = this.words[i];\n      }\n\n      this.words = t;\n    } else {\n      i = this.length;\n    } // Zeroify rest\n\n\n    this.length = Math.max(this.length, len);\n\n    for (; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = this.words[i + shift] + carry;\n      var right = num.words[i] * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      var w = this.words[i + shift] + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = -this.words[i] + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.sign = true;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1];\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.shln(shift);\n      a.ishln(shift);\n      bhi = b.words[b.length - 1];\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (!diff.sign) {\n      a = diff;\n      if (q) q.words[m] = 1;\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1]; // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.sign) {\n        qj--;\n        a.sign = false;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (a.cmpn(0) !== 0) a.sign = !a.sign;\n      }\n\n      if (q) q.words[j] = qj;\n    }\n\n    if (q) q.strip();\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) a.ishrn(shift);\n    return {\n      div: q ? q : null,\n      mod: a\n    };\n  };\n\n  BN.prototype.divmod = function divmod(num, mode) {\n    assert(num.cmpn(0) !== 0);\n\n    if (this.sign && !num.sign) {\n      var res = this.neg().divmod(num, mode);\n      var div;\n      var mod;\n      if (mode !== 'mod') div = res.div.neg();\n      if (mode !== 'div') mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);\n      return {\n        div: div,\n        mod: mod\n      };\n    } else if (!this.sign && num.sign) {\n      var res = this.divmod(num.neg(), mode);\n      var div;\n      if (mode !== 'mod') div = res.div.neg();\n      return {\n        div: div,\n        mod: res.mod\n      };\n    } else if (this.sign && num.sign) {\n      return this.neg().divmod(num.neg(), mode);\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) return {\n      div: new BN(0),\n      mod: this\n    }; // Very short reduction\n\n    if (num.length === 1) {\n      if (mode === 'div') return {\n        div: this.divn(num.words[0]),\n        mod: null\n      };else if (mode === 'mod') return {\n        div: null,\n        mod: new BN(this.modn(num.words[0]))\n      };\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div').div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod').mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.cmpn(0) === 0) return dm.div;\n    var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n    var half = num.shrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + this.words[i]) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = this.words[i] + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(!p.sign);\n    assert(p.cmpn(0) !== 0);\n    var x = this;\n    var y = p.clone();\n    if (x.sign) x = x.mod(p);else x = x.clone(); // A * x + B * y = x\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.ishrn(1);\n      y.ishrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (x.cmpn(0) !== 0) {\n      while (x.isEven()) {\n        x.ishrn(1);\n\n        if (A.isEven() && B.isEven()) {\n          A.ishrn(1);\n          B.ishrn(1);\n        } else {\n          A.iadd(yp).ishrn(1);\n          B.isub(xp).ishrn(1);\n        }\n      }\n\n      while (y.isEven()) {\n        y.ishrn(1);\n\n        if (C.isEven() && D.isEven()) {\n          C.ishrn(1);\n          D.ishrn(1);\n        } else {\n          C.iadd(yp).ishrn(1);\n          D.isub(xp).ishrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.ishln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(!p.sign);\n    assert(p.cmpn(0) !== 0);\n    var a = this;\n    var b = p.clone();\n    if (a.sign) a = a.mod(p);else a = a.clone();\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      while (a.isEven()) {\n        a.ishrn(1);\n        if (x1.isEven()) x1.ishrn(1);else x1.iadd(delta).ishrn(1);\n      }\n\n      while (b.isEven()) {\n        b.ishrn(1);\n        if (x2.isEven()) x2.ishrn(1);else x2.iadd(delta).ishrn(1);\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    if (a.cmpn(1) === 0) return x1;else return x2;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.cmpn(0) === 0) return num.clone();\n    if (num.cmpn(0) === 0) return this.clone();\n    var a = this.clone();\n    var b = num.clone();\n    a.sign = false;\n    b.sign = false; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.ishrn(1);\n      b.ishrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.ishrn(1);\n      }\n\n      while (b.isEven()) {\n        b.ishrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.ishln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.mod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      for (var i = this.length; i < s + 1; i++) {\n        this.words[i] = 0;\n      }\n\n      this.words[s] |= q;\n      this.length = s + 1;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i];\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var sign = num < 0;\n    if (sign) num = -num;\n    if (this.sign && !sign) return -1;else if (!this.sign && sign) return 1;\n    num &= 0x3ffffff;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      var w = this.words[0];\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.sign) res = -res;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.sign && !num.sign) return -1;else if (!this.sign && num.sign) return 1;\n    var res = this.ucmp(num);\n    if (this.sign) return -res;else return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;else if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i];\n      var b = num.words[i];\n      if (a === b) continue;\n      if (a < b) res = -1;else if (a > b) res = 1;\n      break;\n    }\n\n    return res;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(!this.sign, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).ishln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.ishrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (var i = 10; i < input.length; i++) {\n      var next = input.words[i];\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    input.words[i - 10] = prev >>> 22;\n    input.length -= 9;\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var hi;\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i];\n      hi = w * 0x40;\n      lo += w * 0x3d1;\n      hi += lo / 0x4000000 | 0;\n      lo &= 0x3ffffff;\n      num.words[i] = lo;\n      lo = hi;\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) num.length--;\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = num.words[i] * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) num.words[num.length++] = carry;\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n    if (name === 'k256') prime = new K256();else if (name === 'p224') prime = new P224();else if (name === 'p192') prime = new P192();else if (name === 'p25519') prime = new P25519();else throw new Error('Unknown prime ' + name);\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(!a.sign, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert(!a.sign && !b.sign, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.mod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    var r = a.clone();\n    r.sign = !r.sign;\n    return r.iadd(this.m)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) res.isub(this.m);\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) res.isub(this.m);\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) res.iadd(this.m);\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) res.iadd(this.m);\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.shln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a);\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.cmpn(0) === 0) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).ishrn(2);\n      var r = this.pow(a, pow);\n      return r;\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n      s++;\n      q.ishrn(1);\n    }\n\n    assert(q.cmpn(0) !== 0);\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).ishrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).ishrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).ishln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.sign) {\n      inv.sign = false;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    var w = [];\n    if (num.cmpn(0) === 0) return new BN(1);\n    var q = num.clone();\n\n    while (q.cmpn(0) !== 0) {\n      w.push(q.andln(1));\n      q.ishrn(1);\n    } // Skip leading zeroes\n\n\n    var res = a;\n\n    for (var i = 0; i < w.length; i++, res = this.sqr(res)) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n        if (w[i] === 0) continue;\n        res = this.mul(res, q);\n      }\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    return num.clone();\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;\n    this.r = new BN(1).ishln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv.sign = true;\n    this.minv = this.minv.mod(this.r);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.shln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).ishrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).ishrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}","var createHash = require('create-hash');\n\nfunction ripemd160(buffer) {\n  return createHash('rmd160').update(buffer).digest();\n}\n\nfunction sha1(buffer) {\n  return createHash('sha1').update(buffer).digest();\n}\n\nfunction sha256(buffer) {\n  return createHash('sha256').update(buffer).digest();\n}\n\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\n\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\n\nmodule.exports = {\n  hash160: hash160,\n  hash256: hash256,\n  ripemd160: ripemd160,\n  sha1: sha1,\n  sha256: sha256\n};","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar BufferUtil = require('../util/buffer');\n\nvar BN = require('../crypto/bn');\n\nvar BufferReader = function BufferReader(buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf);\n  }\n\n  if (_.isUndefined(buf)) {\n    return;\n  }\n\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    });\n  } else if (_.isString(buf)) {\n    this.set({\n      buf: new Buffer(buf, 'hex')\n    });\n  } else if (_.isObject(buf)) {\n    var obj = buf;\n    this.set(obj);\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader');\n  }\n};\n\nBufferReader.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  this.pos = obj.pos || this.pos || 0;\n  return this;\n};\n\nBufferReader.prototype.eof = function () {\n  return this.pos >= this.buf.length;\n};\n\nBufferReader.prototype.finished = BufferReader.prototype.eof;\n\nBufferReader.prototype.read = function (len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length');\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return buf;\n};\n\nBufferReader.prototype.readAll = function () {\n  var buf = this.buf.slice(this.pos, this.buf.length);\n  this.pos = this.buf.length;\n  return buf;\n};\n\nBufferReader.prototype.readUInt8 = function () {\n  var val = this.buf.readUInt8(this.pos);\n  this.pos = this.pos + 1;\n  return val;\n};\n\nBufferReader.prototype.readUInt16BE = function () {\n  var val = this.buf.readUInt16BE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\n\nBufferReader.prototype.readUInt16LE = function () {\n  var val = this.buf.readUInt16LE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\n\nBufferReader.prototype.readUInt32BE = function () {\n  var val = this.buf.readUInt32BE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readUInt32LE = function () {\n  var val = this.buf.readUInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readUInt64BEBN = function () {\n  var buf = this.buf.slice(this.pos, this.pos + 8);\n  var bn = BN.fromBuffer(buf);\n  this.pos = this.pos + 8;\n  return bn;\n};\n\nBufferReader.prototype.readUInt64LEBN = function () {\n  var second = this.buf.readUInt32LE(this.pos);\n  var first = this.buf.readUInt32LE(this.pos + 4);\n  var combined = first * 0x100000000 + second; // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n\n  var bn;\n\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined);\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8);\n    bn = new BN(data, 10, 'le');\n  }\n\n  this.pos = this.pos + 8;\n  return bn;\n};\n\nBufferReader.prototype.readVarintNum = function () {\n  var first = this.readUInt8();\n\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE();\n\n    case 0xFE:\n      return this.readUInt32LE();\n\n    case 0xFF:\n      var bn = this.readUInt64LEBN();\n      var n = bn.toNumber();\n\n      if (n <= Math.pow(2, 53)) {\n        return n;\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN');\n      }\n\n      break;\n\n    default:\n      return first;\n  }\n};\n/**\n * reads a length prepended buffer\n */\n\n\nBufferReader.prototype.readVarLengthBuffer = function () {\n  var len = this.readVarintNum();\n  var buf = this.read(len);\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' + 'Expected to read: ' + len + ' and read ' + buf.length);\n  return buf;\n};\n\nBufferReader.prototype.readVarintBuf = function () {\n  var first = this.buf.readUInt8(this.pos);\n\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2);\n\n    case 0xFE:\n      return this.read(1 + 4);\n\n    case 0xFF:\n      return this.read(1 + 8);\n\n    default:\n      return this.read(1);\n  }\n};\n\nBufferReader.prototype.readVarintBN = function () {\n  var first = this.readUInt8();\n\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE());\n\n    case 0xFE:\n      return new BN(this.readUInt32LE());\n\n    case 0xFF:\n      return this.readUInt64LEBN();\n\n    default:\n      return new BN(first);\n  }\n};\n\nBufferReader.prototype.reverse = function () {\n  var buf = new Buffer(this.buf.length);\n\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i];\n  }\n\n  this.buf = buf;\n  return this;\n};\n\nBufferReader.prototype.readReverse = function (len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length;\n  }\n\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return BufferUtil.reverse(buf);\n};\n\nmodule.exports = BufferReader;","'use strict';\n\nvar buffer = require('buffer');\n\nvar Signature = require('../crypto/signature');\n\nvar Script = require('../script');\n\nvar Output = require('./output');\n\nvar BufferReader = require('../encoding/bufferreader');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar BN = require('../crypto/bn');\n\nvar Hash = require('../crypto/hash');\n\nvar ECDSA = require('../crypto/ecdsa');\n\nvar $ = require('../util/preconditions');\n\nvar _ = require('lodash');\n\nvar SIGHASH_SINGLE_BUG = '0000000000000000000000000000000000000000000000000000000000000001';\nvar BITS_64_ON = 'ffffffffffffffff';\n/**\n * Returns a buffer of length 32 bytes with the hash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n */\n\nvar sighash = function sighash(transaction, sighashType, inputNumber, subscript) {\n  var Transaction = require('./transaction');\n\n  var Input = require('./input');\n\n  var i; // Copy transaction\n\n  var txcopy = Transaction.shallowCopy(transaction); // Copy script\n\n  subscript = new Script(subscript);\n  subscript.removeCodeseparators();\n\n  for (i = 0; i < txcopy.inputs.length; i++) {\n    // Blank signatures for other inputs\n    txcopy.inputs[i] = new Input(txcopy.inputs[i]).setScript(Script.empty());\n  }\n\n  txcopy.inputs[inputNumber] = new Input(txcopy.inputs[inputNumber]).setScript(subscript);\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE || (sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // clear all sequenceNumbers\n    for (i = 0; i < txcopy.inputs.length; i++) {\n      if (i !== inputNumber) {\n        txcopy.inputs[i].sequenceNumber = 0;\n      }\n    }\n  }\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE) {\n    txcopy.outputs = [];\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // The SIGHASH_SINGLE bug.\n    // https://bitcointalk.org/index.php?topic=260595.0\n    if (inputNumber >= txcopy.outputs.length) {\n      return new Buffer(SIGHASH_SINGLE_BUG, 'hex');\n    }\n\n    txcopy.outputs.length = inputNumber + 1;\n\n    for (i = 0; i < inputNumber; i++) {\n      txcopy.outputs[i] = new Output({\n        satoshis: BN.fromBuffer(new buffer.Buffer(BITS_64_ON, 'hex')),\n        script: Script.empty()\n      });\n    }\n  }\n\n  if (sighashType & Signature.SIGHASH_ANYONECANPAY) {\n    txcopy.inputs = [txcopy.inputs[inputNumber]];\n  }\n\n  var buf = new BufferWriter().write(txcopy.toBuffer()).writeInt32LE(sighashType).toBuffer();\n  var ret = Hash.sha256sha256(buf);\n  ret = new BufferReader(ret).readReverse();\n  return ret;\n};\n/**\n * Create a signature\n *\n * @name Signing.sign\n * @param {Transaction} transaction\n * @param {PrivateKey} privateKey\n * @param {number} sighash\n * @param {number} inputIndex\n * @param {Script} subscript\n * @return {Signature}\n */\n\n\nfunction sign(transaction, privateKey, sighashType, inputIndex, subscript) {\n  var hashbuf = sighash(transaction, sighashType, inputIndex, subscript);\n  var sig = ECDSA.sign(hashbuf, privateKey, 'little').set({\n    nhashtype: sighashType\n  });\n  return sig;\n}\n/**\n * Verify a signature\n *\n * @name Signing.verify\n * @param {Transaction} transaction\n * @param {Signature} signature\n * @param {PublicKey} publicKey\n * @param {number} inputIndex\n * @param {Script} subscript\n * @return {boolean}\n */\n\n\nfunction verify(transaction, signature, publicKey, inputIndex, subscript) {\n  $.checkArgument(!_.isUndefined(transaction));\n  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype));\n  var hashbuf = sighash(transaction, signature.nhashtype, inputIndex, subscript);\n  return ECDSA.verify(hashbuf, signature, publicKey, 'little');\n}\n/**\n * @namespace Signing\n */\n\n\nmodule.exports = {\n  sighash: sighash,\n  sign: sign,\n  verify: verify\n};","'use strict';\n\nvar _ = require('lodash');\n\nvar BN = require('../crypto/bn');\n\nvar buffer = require('buffer');\n\nvar bufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Script = require('../script');\n\nvar $ = require('../util/preconditions');\n\nvar errors = require('../errors');\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n  }\n});\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._satoshis;\n  },\n  set: function set(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(JSUtil.isNaturalNumber(num), 'Output satoshis is not a natural number');\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n\n    $.checkState(JSUtil.isNaturalNumber(this._satoshis), 'Output satoshis is not a natural number');\n  }\n});\n\nOutput.prototype.invalidSatoshis = function () {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function (data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function (buffer) {\n  this._scriptBuffer = buffer;\n\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function (script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n\n  return this;\n};\n\nOutput.prototype.inspect = function () {\n  var scriptStr;\n\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function (br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;","var BN = require('bn.js');\n\nvar EC = require('elliptic').ec;\n\nvar secp256k1 = new EC('secp256k1');\n\nvar deterministicGenerateK = require('./rfc6979');\n\nvar ZERO32 = Buffer.alloc(32, 0);\nvar EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nvar EC_P = Buffer.from('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f', 'hex');\nvar n = secp256k1.curve.n;\nvar nDiv2 = n.shrn(1);\nvar G = secp256k1.curve.g;\nvar THROW_BAD_PRIVATE = 'Expected Private';\nvar THROW_BAD_POINT = 'Expected Point';\nvar THROW_BAD_TWEAK = 'Expected Tweak';\nvar THROW_BAD_HASH = 'Expected Hash';\nvar THROW_BAD_SIGNATURE = 'Expected Signature';\n\nfunction isScalar(x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isOrderScalar(x) {\n  if (!isScalar(x)) return false;\n  return x.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\nfunction isPoint(p) {\n  if (!Buffer.isBuffer(p)) return false;\n  if (p.length < 33) return false;\n  var t = p[0];\n  var x = p.slice(1, 33);\n  if (x.compare(ZERO32) === 0) return false;\n  if (x.compare(EC_P) >= 0) return false;\n  if ((t === 0x02 || t === 0x03) && p.length === 33) return true;\n  var y = p.slice(33);\n  if (y.compare(ZERO32) === 0) return false;\n  if (y.compare(EC_P) >= 0) return false;\n  if (t === 0x04 && p.length === 65) return true;\n  return false;\n}\n\nfunction __isPointCompressed(p) {\n  return p[0] !== 0x04;\n}\n\nfunction isPointCompressed(p) {\n  if (!isPoint(p)) return false;\n  return __isPointCompressed(p);\n}\n\nfunction isPrivate(x) {\n  if (!isScalar(x)) return false;\n  return x.compare(ZERO32) > 0 && // > 0\n  x.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\nfunction isSignature(value) {\n  var r = value.slice(0, 32);\n  var s = value.slice(32, 64);\n  return Buffer.isBuffer(value) && value.length === 64 && r.compare(EC_GROUP_ORDER) < 0 && s.compare(EC_GROUP_ORDER) < 0;\n}\n\nfunction assumeCompression(value, pubkey) {\n  if (value === undefined && pubkey !== undefined) return __isPointCompressed(pubkey);\n  if (value === undefined) return true;\n  return value;\n}\n\nfunction fromBuffer(d) {\n  return new BN(d);\n}\n\nfunction toBuffer(d) {\n  return d.toArrayLike(Buffer, 'be', 32);\n}\n\nfunction decodeFrom(P) {\n  return secp256k1.curve.decodePoint(P);\n}\n\nfunction getEncoded(P, compressed) {\n  return Buffer.from(P._encode(compressed));\n}\n\nfunction pointAdd(pA, pB, __compressed) {\n  if (!isPoint(pA)) throw new TypeError(THROW_BAD_POINT);\n  if (!isPoint(pB)) throw new TypeError(THROW_BAD_POINT);\n  var a = decodeFrom(pA);\n  var b = decodeFrom(pB);\n  var pp = a.add(b);\n  if (pp.isInfinity()) return null;\n  var compressed = assumeCompression(__compressed, pA);\n  return getEncoded(pp, compressed);\n}\n\nfunction pointAddScalar(p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT);\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);\n  var compressed = assumeCompression(__compressed, p);\n  var pp = decodeFrom(p);\n  if (tweak.compare(ZERO32) === 0) return getEncoded(pp, compressed);\n  var tt = fromBuffer(tweak);\n  var qq = G.mul(tt);\n  var uu = pp.add(qq);\n  if (uu.isInfinity()) return null;\n  return getEncoded(uu, compressed);\n}\n\nfunction pointCompress(p, compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT);\n  var pp = decodeFrom(p);\n  if (pp.isInfinity()) throw new TypeError(THROW_BAD_POINT);\n  return getEncoded(pp, compressed);\n}\n\nfunction pointFromScalar(d, __compressed) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE);\n  var dd = fromBuffer(d);\n  var pp = G.mul(dd);\n  if (pp.isInfinity()) return null;\n  var compressed = assumeCompression(__compressed);\n  return getEncoded(pp, compressed);\n}\n\nfunction pointMultiply(p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT);\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);\n  var compressed = assumeCompression(__compressed, p);\n  var pp = decodeFrom(p);\n  var tt = fromBuffer(tweak);\n  var qq = pp.mul(tt);\n  if (qq.isInfinity()) return null;\n  return getEncoded(qq, compressed);\n}\n\nfunction privateAdd(d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE);\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);\n  var dd = fromBuffer(d);\n  var tt = fromBuffer(tweak);\n  var dt = toBuffer(dd.add(tt).umod(n));\n  if (!isPrivate(dt)) return null;\n  return dt;\n}\n\nfunction privateSub(d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE);\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK);\n  var dd = fromBuffer(d);\n  var tt = fromBuffer(tweak);\n  var dt = toBuffer(dd.sub(tt).umod(n));\n  if (!isPrivate(dt)) return null;\n  return dt;\n}\n\nfunction sign(hash, x) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH);\n  if (!isPrivate(x)) throw new TypeError(THROW_BAD_PRIVATE);\n  var d = fromBuffer(x);\n  var e = fromBuffer(hash);\n  var r, s;\n  deterministicGenerateK(hash, x, function (k) {\n    var kI = fromBuffer(k);\n    var Q = G.mul(kI);\n    if (Q.isInfinity()) return false;\n    r = Q.x.umod(n);\n    if (r.isZero() === 0) return false;\n    s = kI.invm(n).mul(e.add(d.mul(r))).umod(n);\n    if (s.isZero() === 0) return false;\n    return true;\n  }, isPrivate); // enforce low S values, see bip62: 'low s values in signatures'\n\n  if (s.cmp(nDiv2) > 0) {\n    s = n.sub(s);\n  }\n\n  var buffer = Buffer.allocUnsafe(64);\n  toBuffer(r).copy(buffer, 0);\n  toBuffer(s).copy(buffer, 32);\n  return buffer;\n}\n\nfunction verify(hash, q, signature) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH);\n  if (!isPoint(q)) throw new TypeError(THROW_BAD_POINT); // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (1, isSignature enforces '< n - 1')\n\n  if (!isSignature(signature)) throw new TypeError(THROW_BAD_SIGNATURE);\n  var Q = decodeFrom(q);\n  var r = fromBuffer(signature.slice(0, 32));\n  var s = fromBuffer(signature.slice(32, 64)); // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (2, enforces '> 0')\n\n  if (r.gtn(0) <= 0\n  /* || r.compareTo(n) >= 0 */\n  ) return false;\n  if (s.gtn(0) <= 0\n  /* || s.compareTo(n) >= 0 */\n  ) return false; // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n\n  var e = fromBuffer(hash); // Compute s^-1\n\n  var sInv = s.invm(n); // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n\n  var u1 = e.mul(sInv).umod(n);\n  var u2 = r.mul(sInv).umod(n); // 1.4.5 Compute R = (xR, yR)\n  //               R = u1G + u2Q\n\n  var R = G.mulAdd(u1, Q, u2); // 1.4.5 (cont.) Enforce R is not at infinity\n\n  if (R.isInfinity()) return false; // 1.4.6 Convert the field element R.x to an integer\n\n  var xR = R.x; // 1.4.7 Set v = xR mod n\n\n  var v = xR.umod(n); // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n\n  return v.eq(r);\n}\n\nmodule.exports = {\n  isPoint: isPoint,\n  isPointCompressed: isPointCompressed,\n  isPrivate: isPrivate,\n  pointAdd: pointAdd,\n  pointAddScalar: pointAddScalar,\n  pointCompress: pointCompress,\n  pointFromScalar: pointFromScalar,\n  pointMultiply: pointMultiply,\n  privateAdd: privateAdd,\n  privateSub: privateSub,\n  sign: sign,\n  verify: verify\n};","'use strict'; // limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n\nvar MAX_BYTES = 65536; // Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\n\nvar MAX_UINT32 = 4294967295;\n\nfunction oldBrowser() {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11');\n}\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar crypto = global.crypto || global.msCrypto;\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes;\n} else {\n  module.exports = oldBrowser;\n}\n\nfunction randomBytes(size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes');\n  var bytes = Buffer.allocUnsafe(size);\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));\n      }\n    } else {\n      crypto.getRandomValues(bytes);\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n\n  return bytes;\n}","function prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = f.call(this);\n      this[name] = value;\n      return value;\n    },\n    set: function set(value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: value,\n        writable: true\n      });\n    }\n  });\n}\n\nfunction value(f) {\n  var value;\n  return function () {\n    if (value !== undefined) return value;\n    value = f();\n    return value;\n  };\n}\n\nmodule.exports = {\n  prop: prop,\n  value: value\n};","'use strict';\n\nvar _ = require('lodash');\n\nvar BufferUtil = require('./util/buffer');\n\nvar JSUtil = require('./util/js');\n\nvar networks = [];\nvar networkMaps = {};\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\n\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\n\n\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n\n    var containsArg = function containsArg(key) {\n      return networks[index][key] === arg;\n    };\n\n    for (var index in networks) {\n      if (_.any(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n\n    return undefined;\n  }\n\n  return networkMaps[arg];\n}\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\n\n\nfunction addNetwork(data) {\n  var network = new Network();\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n\n  _.each(network, function (value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n  return network;\n}\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\n\n\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x1cb8,\n  privatekey: 0x80,\n  scripthash: 0x1cbd,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  zaddr: 0x169a,\n  zkey: 0xab36,\n  networkMagic: 0xf91bacab,\n  port: 8233,\n  dnsSeeds: [//    'seed.bitcoin.sipa.be',\n    //    'dnsseed.bluematt.me',\n    //    'dnsseed.bitcoin.dashjr.org',\n    //    'seed.bitcoinstats.com',\n    //    'seed.bitnodes.io',\n    //    'bitseed.xf2.org'\n  ]\n});\n/**\n * @instance\n * @member Networks#livenet\n */\n\nvar livenet = get('livenet');\naddNetwork({\n  name: 'testnet',\n  alias: 'regtest',\n  pubkeyhash: 0x1d25,\n  privatekey: 0xef,\n  scripthash: 0x1cba,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  zaddr: 0x16b6,\n  zkey: 0xac08\n});\n/**\n * @instance\n * @member Networks#testnet\n */\n\nvar testnet = get('testnet'); // Add configurable values for testnet/regtest\n\nvar TESTNET = {\n  PORT: 18233,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xf99f24b6),\n  DNS_SEEDS: ['dnsseed.testnet.z.cash']\n};\n\nfor (var key in TESTNET) {\n  if (!_.isObject(TESTNET[key])) {\n    networkMaps[TESTNET[key]] = testnet;\n  }\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xaae83f5f),\n  DNS_SEEDS: []\n};\n\nfor (var key in REGTEST) {\n  if (!_.isObject(REGTEST[key])) {\n    networkMaps[REGTEST[key]] = testnet;\n  }\n}\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function get() {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT;\n    } else {\n      return TESTNET.PORT;\n    }\n  }\n});\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function get() {\n    if (this.regtestEnabled) {\n      return REGTEST.NETWORK_MAGIC;\n    } else {\n      return TESTNET.NETWORK_MAGIC;\n    }\n  }\n});\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function get() {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS;\n    } else {\n      return TESTNET.DNS_SEEDS;\n    }\n  }\n});\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\n\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\n\n\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n/**\n * @namespace Networks\n */\n\n\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('./util/preconditions');\n\nvar errors = require('./errors');\n\nvar Base58Check = require('./encoding/base58check');\n\nvar Networks = require('./networks');\n\nvar Hash = require('./crypto/hash');\n\nvar JSUtil = require('./util/js');\n\nvar PublicKey = require('./publickey');\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\n\n\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type); // set defaults if not set\n\n\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n  return this;\n}\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\n\n\nAddress.prototype._classifyArguments = function (data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof data === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n/** @static */\n\n\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\n\nAddress.PayToScriptHash = 'scripthash';\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\n\nAddress._transformHash = function (hash) {\n  var info = {};\n\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n\n  info.hashBuffer = hash;\n  return info;\n};\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\n\n\nAddress._transformObject = function (data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\n\n\nAddress._classifyFromVersion = function (buffer) {\n  var version = {};\n  var prefix = buffer[0] * 256 + buffer[1];\n  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\n\n\nAddress._transformBuffer = function (buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n\n  if (buffer.length !== 2 + 20) {\n    throw new TypeError('Address buffers must be exactly 22 bytes.');\n  }\n\n  network = Networks.get(network);\n\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (!bufferVersion.network || network && network !== bufferVersion.network) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || type && type !== bufferVersion.type) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(2);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\n\n\nAddress._transformPublicKey = function (pubkey) {\n  var info = {};\n\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\n\n\nAddress._transformScript = function (script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n\n  return info;\n};\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\n\n\nAddress.createMultisig = function (publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\n\n\nAddress._transformString = function (data, network, type) {\n  if (typeof data !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n\n  var info = Address._transformBuffer(addressBuffer, network, type);\n\n  return info;\n};\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.fromPublicKey = function (data, network) {\n  var info = Address._transformPublicKey(data);\n\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.fromPublicKeyHash = function (hash, network) {\n  var info = Address._transformHash(hash);\n\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.fromScriptHash = function (hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n\n  var info = Address._transformHash(hash);\n\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.payingTo = function (script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.fromScript = function (script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n\n  var info = Address._transformScript(script, network);\n\n  return new Address(info.hashBuffer, network, info.type);\n};\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.fromBuffer = function (buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\n\n\nAddress.fromString = function (str, network, type) {\n  var info = Address._transformString(str, network, type);\n\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\n\n\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(JSUtil.isHexa(obj.hash), 'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.');\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\n\n\nAddress.getValidationError = function (data, network, type) {\n  var error;\n\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n};\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\n\n\nAddress.isValid = function (data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\n\n\nAddress.prototype.isPayToPublicKeyHash = function () {\n  return this.type === Address.PayToPublicKeyHash;\n};\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\n\n\nAddress.prototype.isPayToScriptHash = function () {\n  return this.type === Address.PayToScriptHash;\n};\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\n\n\nAddress.prototype.toBuffer = function () {\n  var version = new Buffer(this.network[this.type].toString(16), 'hex');\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n/**\n * @returns {Object} A plain object with the address information\n */\n\n\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\n\n\nAddress.prototype.toString = function () {\n  return Base58Check.encode(this.toBuffer());\n};\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\n\n\nAddress.prototype.inspect = function () {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');","'use strict';\n\nvar BN = require('./bn');\n\nvar BufferUtil = require('../util/buffer');\n\nvar ec = require('elliptic').curves.secp256k1;\n\nvar ecPoint = ec.curve.point.bind(ec.curve);\nvar ecPointFromX = ec.curve.pointFromX.bind(ec.curve);\n/**\n *\n * Instantiate a valid secp256k1 Point from the X and Y coordinates.\n *\n * @param {BN|String} x - The X coordinate\n * @param {BN|String} y - The Y coordinate\n * @link https://github.com/indutny/elliptic\n * @augments elliptic.curve.point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n * @constructor\n */\n\nvar Point = function Point(x, y, isRed) {\n  var point = ecPoint(x, y, isRed);\n  point.validate();\n  return point;\n};\n\nPoint.prototype = Object.getPrototypeOf(ec.curve.point());\n/**\n *\n * Instantiate a valid secp256k1 Point from only the X coordinate\n *\n * @param {boolean} odd - If the Y coordinate is odd\n * @param {BN|String} x - The X coordinate\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n */\n\nPoint.fromX = function fromX(odd, x) {\n  var point = ecPointFromX(odd, x);\n  point.validate();\n  return point;\n};\n/**\n *\n * Will return a secp256k1 ECDSA base point.\n *\n * @link https://en.bitcoin.it/wiki/Secp256k1\n * @returns {Point} An instance of the base point.\n */\n\n\nPoint.getG = function getG() {\n  return ec.curve.g;\n};\n/**\n *\n * Will return the max of range of valid private keys as governed by the secp256k1 ECDSA standard.\n *\n * @link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys\n * @returns {BN} A BN instance of the number of points on the curve\n */\n\n\nPoint.getN = function getN() {\n  return new BN(ec.curve.n.toArray());\n};\n\nPoint.prototype._getX = Point.prototype.getX;\n/**\n *\n * Will return the X coordinate of the Point\n *\n * @returns {BN} A BN instance of the X coordinate\n */\n\nPoint.prototype.getX = function getX() {\n  return new BN(this._getX().toArray());\n};\n\nPoint.prototype._getY = Point.prototype.getY;\n/**\n *\n * Will return the Y coordinate of the Point\n *\n * @returns {BN} A BN instance of the Y coordinate\n */\n\nPoint.prototype.getY = function getY() {\n  return new BN(this._getY().toArray());\n};\n/**\n *\n * Will determine if the point is valid\n *\n * @link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n * @param {Point} An instance of Point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of the same Point\n */\n\n\nPoint.prototype.validate = function validate() {\n  if (this.isInfinity()) {\n    throw new Error('Point cannot be equal to Infinity');\n  }\n\n  if (this.getX().cmp(BN.Zero) === 0 || this.getY().cmp(BN.Zero) === 0) {\n    throw new Error('Invalid x,y value for curve, cannot equal 0.');\n  }\n\n  var p2 = ecPointFromX(this.getY().isOdd(), this.getX());\n\n  if (p2.y.cmp(this.y) !== 0) {\n    throw new Error('Invalid y value for curve.');\n  }\n\n  var xValidRange = this.getX().gt(BN.Minus1) && this.getX().lt(Point.getN());\n  var yValidRange = this.getY().gt(BN.Minus1) && this.getY().lt(Point.getN());\n\n  if (!xValidRange || !yValidRange) {\n    throw new Error('Point does not lie on the curve');\n  } //todo: needs test case\n\n\n  if (!this.mul(Point.getN()).isInfinity()) {\n    throw new Error('Point times N must be infinity');\n  }\n\n  return this;\n};\n\nPoint.pointToCompressed = function pointToCompressed(point) {\n  var xbuf = point.getX().toBuffer({\n    size: 32\n  });\n  var ybuf = point.getY().toBuffer({\n    size: 32\n  });\n  var prefix;\n  var odd = ybuf[ybuf.length - 1] % 2;\n\n  if (odd) {\n    prefix = new Buffer([0x03]);\n  } else {\n    prefix = new Buffer([0x02]);\n  }\n\n  return BufferUtil.concat([prefix, xbuf]);\n};\n\nmodule.exports = Point;","var hash = exports;\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac'); // Proxy hash functions to the main object\n\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;","'use strict';\n\nvar utils = require('./utils');\n\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) {\n      this._update(msg, i, i + this._delta32);\n    }\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) {\n    res[i] = 0;\n  } // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) {\n      res[i++] = 0;\n    }\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) {\n      res[i++] = 0;\n    }\n  }\n\n  return res;\n};","'use strict';\n\nvar createHash = require('create-hash');\n\nvar bs58checkBase = require('./base'); // SHA256(SHA256(buffer))\n\n\nfunction sha256x2(buffer) {\n  var tmp = createHash('sha256').update(buffer).digest();\n  return createHash('sha256').update(tmp).digest();\n}\n\nmodule.exports = bs58checkBase(sha256x2);","var asn1 = exports;\nasn1.bignum = require('bn.js');\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');","var base = exports;\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');","'use strict';\n\nvar _ = require('lodash');\n\nvar Base58 = require('./base58');\n\nvar buffer = require('buffer');\n\nvar sha256sha256 = require('../crypto/hash').sha256sha256;\n\nvar Base58Check = function Base58Check(obj) {\n  if (!(this instanceof Base58Check)) return new Base58Check(obj);\n\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj;\n    this.fromBuffer(buf);\n  } else if (typeof obj === 'string') {\n    var str = obj;\n    this.fromString(str);\n  } else if (obj) {\n    this.set(obj);\n  }\n};\n\nBase58Check.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  return this;\n};\n\nBase58Check.validChecksum = function validChecksum(data, checksum) {\n  if (_.isString(data)) {\n    data = new buffer.Buffer(Base58.decode(data));\n  }\n\n  if (_.isString(checksum)) {\n    checksum = new buffer.Buffer(Base58.decode(checksum));\n  }\n\n  if (!checksum) {\n    checksum = data.slice(-4);\n    data = data.slice(0, -4);\n  }\n\n  return Base58Check.checksum(data).toString('hex') === checksum.toString('hex');\n};\n\nBase58Check.decode = function (s) {\n  if (typeof s !== 'string') throw new Error('Input must be a string');\n  var buf = new Buffer(Base58.decode(s));\n  if (buf.length < 4) throw new Error(\"Input string too short\");\n  var data = buf.slice(0, -4);\n  var csum = buf.slice(-4);\n  var hash = sha256sha256(data);\n  var hash4 = hash.slice(0, 4);\n  if (csum.toString('hex') !== hash4.toString('hex')) throw new Error(\"Checksum mismatch\");\n  return data;\n};\n\nBase58Check.checksum = function (buffer) {\n  return sha256sha256(buffer).slice(0, 4);\n};\n\nBase58Check.encode = function (buf) {\n  if (!Buffer.isBuffer(buf)) throw new Error('Input must be a buffer');\n  var checkedBuf = new Buffer(buf.length + 4);\n  var hash = Base58Check.checksum(buf);\n  buf.copy(checkedBuf);\n  hash.copy(checkedBuf, buf.length);\n  return Base58.encode(checkedBuf);\n};\n\nBase58Check.prototype.fromBuffer = function (buf) {\n  this.buf = buf;\n  return this;\n};\n\nBase58Check.prototype.fromString = function (str) {\n  var buf = Base58Check.decode(str);\n  this.buf = buf;\n  return this;\n};\n\nBase58Check.prototype.toBuffer = function () {\n  return this.buf;\n};\n\nBase58Check.prototype.toString = function () {\n  return Base58Check.encode(this.buf);\n};\n\nmodule.exports = Base58Check;","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../../util/preconditions');\n\nvar errors = require('../../errors');\n\nvar BufferWriter = require('../../encoding/bufferwriter');\n\nvar buffer = require('buffer');\n\nvar BufferUtil = require('../../util/buffer');\n\nvar JSUtil = require('../../util/js');\n\nvar Script = require('../../script');\n\nvar Sighash = require('../sighash');\n\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\n\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    if (this.isNull()) {\n      return null;\n    }\n\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n\n    return this._script;\n  }\n});\n\nInput.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function (params) {\n  var prevTxId;\n\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n\n  this.output = params.output ? params.output instanceof Output ? params.output : new Output(params.output) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ? _.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum : params.sequenceNumber;\n\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex')\n  }; // add human readable form if input contains valid script\n\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n\n  return obj;\n};\n\nInput.fromBufferReader = function (br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE(); // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n\n  return input;\n};\n\nInput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function (script) {\n  this._script = null;\n\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n\n  return this;\n};\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\n\n\nInput.prototype.getSignatures = function () {\n  throw new errors.AbstractMethodInvoked('Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' + ' for input: ' + JSON.stringify(this));\n};\n\nInput.prototype.isFullySigned = function () {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function () {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function () {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function () {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(transaction, signature.signature, signature.publicKey, signature.inputIndex, this.output.script);\n};\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\n\n\nInput.prototype.isNull = function () {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' && this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function () {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar inherits = require('inherits');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n\nvar errors = require('../errors');\n\nvar Signature = require('../crypto/signature');\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\n\n\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\n\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function (arg) {\n  this._checkObjectArgs(arg);\n\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = arg.signature instanceof Signature ? arg.signature : BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) : Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function (arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature || BufferUtil.isBuffer(arg.signature) || JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) || JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\n\n\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\n\n\nTransactionSignature.fromObject = function (object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\n\n\nfunction encode(input) {\n  if (input instanceof Array) {\n    var output = [];\n\n    for (var i = 0; i < input.length; i++) {\n      output.push(encode(input[i]));\n    }\n\n    var buf = Buffer.concat(output);\n    return Buffer.concat([encodeLength(buf.length, 192), buf]);\n  } else {\n    var inputBuf = toBuffer(input);\n    return inputBuf.length === 1 && inputBuf[0] < 128 ? inputBuf : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n  }\n}\n\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\n\nfunction safeParseInt(v, base) {\n  if (v.slice(0, 2) === '00') {\n    throw new Error('invalid RLP: extra zeros');\n  }\n\n  return parseInt(v, base);\n}\n\nfunction encodeLength(len, offset) {\n  if (len < 56) {\n    return Buffer.from([len + offset]);\n  } else {\n    var hexLength = intToHex(len);\n    var lLength = hexLength.length / 2;\n    var firstByte = intToHex(offset + 55 + lLength);\n    return Buffer.from(firstByte + hexLength, 'hex');\n  }\n}\n\nfunction decode(input, stream) {\n  if (stream === void 0) {\n    stream = false;\n  }\n\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n\n  var decoded = _decode(inputBuffer);\n\n  if (stream) {\n    return decoded;\n  }\n\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder');\n  }\n\n  return decoded.data;\n}\n\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\n\nfunction getLength(input) {\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n  var firstByte = inputBuffer[0];\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length;\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f;\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6;\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf;\n  } else {\n    // a list  over 55 bytes long\n    var llength = firstByte - 0xf6;\n    var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n    return llength + length;\n  }\n}\n\nexports.getLength = getLength;\n/** Decode an input with RLP */\n\nfunction _decode(input) {\n  var length, llength, data, innerRemainder, d;\n  var decoded = [];\n  var firstByte = input[0];\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1)\n    };\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f; // set 0x80 null to 0\n\n    if (firstByte === 0x80) {\n      data = Buffer.from([]);\n    } else {\n      data = input.slice(1, length);\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length)\n    };\n  } else if (firstByte <= 0xbf) {\n    llength = firstByte - 0xb6;\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n    data = input.slice(llength, length + llength);\n\n    if (data.length < length) {\n      throw new Error('invalid RLP');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength)\n    };\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf;\n    innerRemainder = input.slice(1, length);\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length)\n    };\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6;\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n    var totalLength = llength + length;\n\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data');\n    }\n\n    innerRemainder = input.slice(llength, totalLength);\n\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length');\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength)\n    };\n  }\n}\n/** Check if a string is prefixed by 0x */\n\n\nfunction isHexPrefixed(str) {\n  return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\n\n\nfunction stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\n\n\nfunction intToHex(integer) {\n  var hex = integer.toString(16);\n  return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\n\n\nfunction padToEven(a) {\n  return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\n\n\nfunction intToBuffer(integer) {\n  var hex = intToHex(integer);\n  return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\n\n\nfunction toBuffer(v) {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n      } else {\n        return Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      if (!v) {\n        return Buffer.from([]);\n      } else {\n        return intToBuffer(v);\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([]);\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v);\n    } else if (BN.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n}","'use strict';\n\nvar CID = require('cids');\n\nvar multihashes = require('multihashes');\n\nmodule.exports = cidFromHash;\n\nfunction cidFromHash(codec, rawhash, options) {\n  options = options || {};\n  var hashAlg = options.hashAlg || 'keccak-256';\n  var version = typeof options.version === 'undefined' ? 1 : options.version;\n  var multihash = multihashes.encode(rawhash, hashAlg);\n  return new CID(version, codec, multihash);\n}","'use strict';\n\nvar waterfall = require('async/waterfall');\n\nvar createIsLink = require('../util/createIsLink');\n\nvar createUtil = require('../util/createUtil');\n\nmodule.exports = createResolver;\n\nfunction createResolver(multicodec, EthObjClass, mapFromEthObject) {\n  var util = createUtil(multicodec, EthObjClass);\n  var resolver = {\n    multicodec: multicodec,\n    defaultHashAlg: 'keccak-256',\n    resolve: resolve,\n    tree: tree,\n    isLink: createIsLink(resolve),\n    _resolveFromEthObject: resolveFromEthObject,\n    _treeFromEthObject: treeFromEthObject,\n    _mapFromEthObject: mapFromEthObject\n  };\n  return {\n    resolver: resolver,\n    util: util\n    /*\n     * tree: returns a flattened array with paths: values of the project. options\n     * are option (i.e. nestness)\n     */\n\n  };\n\n  function tree(binaryBlob, options, callback) {\n    // parse arguments\n    if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    waterfall([function (cb) {\n      return util.deserialize(binaryBlob, cb);\n    }, function (ethObj, cb) {\n      return treeFromEthObject(ethObj, options, cb);\n    }], callback);\n  }\n\n  function treeFromEthObject(ethObj, options, callback) {\n    waterfall([function (cb) {\n      return mapFromEthObject(ethObj, options, cb);\n    }, function (tuples, cb) {\n      return cb(null, tuples.map(function (tuple) {\n        return tuple.path;\n      }));\n    }], callback);\n  }\n  /*\n   * resolve: receives a path and a binary blob and returns the value on path,\n   * throw if not possible. `binaryBlob`` is an Ethereum binary block.\n   */\n\n\n  function resolve(binaryBlob, path, callback) {\n    waterfall([function (cb) {\n      return util.deserialize(binaryBlob, cb);\n    }, function (ethObj, cb) {\n      return resolveFromEthObject(ethObj, path, cb);\n    }], callback);\n  }\n\n  function resolveFromEthObject(ethObj, path, callback) {\n    // root\n    if (!path || path === '/') {\n      var result = {\n        value: ethObj,\n        remainderPath: ''\n      };\n      return callback(null, result);\n    } // check tree results\n\n\n    mapFromEthObject(ethObj, {}, function (err, paths) {\n      if (err) return callback(err); // parse path\n\n      var pathParts = path.split('/'); // find potential matches\n\n      var matches = paths.filter(function (child) {\n        return child.path === path.slice(0, child.path.length);\n      }); // only match whole path chunks\n\n      matches = matches.filter(function (child) {\n        return child.path.split('/').every(function (part, index) {\n          return part === pathParts[index];\n        });\n      }); // take longest match\n\n      var sortedMatches = matches.sort(function (a, b) {\n        return b.path.length - a.path.length;\n      });\n      var treeResult = sortedMatches[0];\n\n      if (!treeResult) {\n        var _err = new Error('Path not found (\"' + path + '\").');\n\n        return callback(_err);\n      } // slice off remaining path (after match and following slash)\n\n\n      var remainderPath = path.slice(treeResult.path.length + 1);\n      var result = {\n        value: treeResult.value,\n        remainderPath: remainderPath\n      };\n      return callback(null, result);\n    });\n  }\n}","'use strict';\n\nvar curve = exports;\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');","'use strict';\n\nvar SmartBuffer = require('smart-buffer').SmartBuffer;\n\nvar multihashes = require('multihashes/src/constants');\n\nvar multicodecs = require('multicodec/src/base-table');\n\nvar multihash = require('multihashes');\n\nvar CID = require('cids');\n\nexports = module.exports;\nexports.SHA1_LENGTH = multihashes.defaultLengths[multihashes.names.sha1];\n\nexports.find = function (buf, byte) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] === byte) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nexports.parsePersonLine = function (line) {\n  var matched = line.match(/^(([^<]+)\\s)?\\s?<([^>]+)>\\s?(\\d+\\s[+\\-\\d]+)?$/);\n\n  if (matched === null) {\n    return null;\n  }\n\n  return {\n    name: matched[2],\n    email: matched[3],\n    date: matched[4]\n  };\n};\n\nexports.serializePersonLine = function (node) {\n  var parts = [];\n\n  if (node.name) {\n    parts.push(node.name);\n  }\n\n  parts.push('<' + node.email + '>');\n\n  if (node.date) {\n    parts.push(node.date);\n  }\n\n  return parts.join(' ');\n};\n\nexports.shaToCid = function (buf) {\n  var mhashBuf = new SmartBuffer();\n  mhashBuf.writeUInt8(1);\n  mhashBuf.writeBuffer(multicodecs['git-raw']);\n  mhashBuf.writeUInt8(multihashes.names.sha1);\n  mhashBuf.writeUInt8(exports.SHA1_LENGTH);\n  mhashBuf.writeBuffer(buf);\n  return mhashBuf.toBuffer();\n};\n\nexports.cidToSha = function (cidBuf) {\n  var mh = multihash.decode(new CID(cidBuf).multihash);\n\n  if (mh.name !== 'sha1') {\n    return null;\n  }\n\n  return mh.digest;\n};","\"use strict\";\n\nvar _classCallCheck = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\"); // The default Buffer size if one is not provided.\n\n\nvar DEFAULT_SMARTBUFFER_SIZE = 4096; // The default string encoding to use for reading/writing strings.\n\nvar DEFAULT_SMARTBUFFER_ENCODING = 'utf8';\n\nvar SmartBuffer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new SmartBuffer instance.\n   *\n   * @param options { SmartBufferOptions } The SmartBufferOptions to apply to this instance.\n   */\n  function SmartBuffer(options) {\n    _classCallCheck(this, SmartBuffer);\n\n    this.length = 0;\n    this._encoding = DEFAULT_SMARTBUFFER_ENCODING;\n    this._writeOffset = 0;\n    this._readOffset = 0;\n\n    if (SmartBuffer.isSmartBufferOptions(options)) {\n      // Checks for encoding\n      if (options.encoding) {\n        utils_1.checkEncoding(options.encoding);\n        this._encoding = options.encoding;\n      } // Checks for initial size length\n\n\n      if (options.size) {\n        if (utils_1.isFiniteInteger(options.size) && options.size > 0) {\n          this._buff = Buffer.allocUnsafe(options.size);\n        } else {\n          throw new Error(utils_1.ERRORS.INVALID_SMARTBUFFER_SIZE);\n        } // Check for initial Buffer\n\n      } else if (options.buff) {\n        if (options.buff instanceof Buffer) {\n          this._buff = options.buff;\n          this.length = options.buff.length;\n        } else {\n          throw new Error(utils_1.ERRORS.INVALID_SMARTBUFFER_BUFFER);\n        }\n      } else {\n        this._buff = Buffer.allocUnsafe(DEFAULT_SMARTBUFFER_SIZE);\n      }\n    } else {\n      // If something was passed but it's not a SmartBufferOptions object\n      if (typeof options !== 'undefined') {\n        throw new Error(utils_1.ERRORS.INVALID_SMARTBUFFER_OBJECT);\n      } // Otherwise default to sane options\n\n\n      this._buff = Buffer.allocUnsafe(DEFAULT_SMARTBUFFER_SIZE);\n    }\n  }\n  /**\n   * Creates a new SmartBuffer instance with the provided internal Buffer size and optional encoding.\n   *\n   * @param size { Number } The size of the internal Buffer.\n   * @param encoding { String } The BufferEncoding to use for strings.\n   *\n   * @return { SmartBuffer }\n   */\n\n\n  _createClass(SmartBuffer, [{\n    key: \"readInt8\",\n    // Signed integers\n\n    /**\n     * Reads an Int8 value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n    value: function readInt8(offset) {\n      return this._readNumberValue(Buffer.prototype.readInt8, 1, offset);\n    }\n    /**\n     * Reads an Int16BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readInt16BE\",\n    value: function readInt16BE(offset) {\n      return this._readNumberValue(Buffer.prototype.readInt16BE, 2, offset);\n    }\n    /**\n     * Reads an Int16LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readInt16LE\",\n    value: function readInt16LE(offset) {\n      return this._readNumberValue(Buffer.prototype.readInt16LE, 2, offset);\n    }\n    /**\n     * Reads an Int32BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readInt32BE\",\n    value: function readInt32BE(offset) {\n      return this._readNumberValue(Buffer.prototype.readInt32BE, 4, offset);\n    }\n    /**\n     * Reads an Int32LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readInt32LE\",\n    value: function readInt32LE(offset) {\n      return this._readNumberValue(Buffer.prototype.readInt32LE, 4, offset);\n    }\n    /**\n     * Writes an Int8 value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeInt8\",\n    value: function writeInt8(value, offset) {\n      this._writeNumberValue(Buffer.prototype.writeInt8, 1, value, offset);\n\n      return this;\n    }\n    /**\n     * Inserts an Int8 value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertInt8\",\n    value: function insertInt8(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeInt8, 1, value, offset);\n    }\n    /**\n     * Writes an Int16BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeInt16BE\",\n    value: function writeInt16BE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeInt16BE, 2, value, offset);\n    }\n    /**\n     * Inserts an Int16BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertInt16BE\",\n    value: function insertInt16BE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeInt16BE, 2, value, offset);\n    }\n    /**\n     * Writes an Int16LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeInt16LE\",\n    value: function writeInt16LE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeInt16LE, 2, value, offset);\n    }\n    /**\n     * Inserts an Int16LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertInt16LE\",\n    value: function insertInt16LE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeInt16LE, 2, value, offset);\n    }\n    /**\n     * Writes an Int32BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeInt32BE\",\n    value: function writeInt32BE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeInt32BE, 4, value, offset);\n    }\n    /**\n     * Inserts an Int32BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertInt32BE\",\n    value: function insertInt32BE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeInt32BE, 4, value, offset);\n    }\n    /**\n     * Writes an Int32LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeInt32LE\",\n    value: function writeInt32LE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeInt32LE, 4, value, offset);\n    }\n    /**\n     * Inserts an Int32LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertInt32LE\",\n    value: function insertInt32LE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeInt32LE, 4, value, offset);\n    } // Unsigned Integers\n\n    /**\n     * Reads an UInt8 value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readUInt8\",\n    value: function readUInt8(offset) {\n      return this._readNumberValue(Buffer.prototype.readUInt8, 1, offset);\n    }\n    /**\n     * Reads an UInt16BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readUInt16BE\",\n    value: function readUInt16BE(offset) {\n      return this._readNumberValue(Buffer.prototype.readUInt16BE, 2, offset);\n    }\n    /**\n     * Reads an UInt16LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readUInt16LE\",\n    value: function readUInt16LE(offset) {\n      return this._readNumberValue(Buffer.prototype.readUInt16LE, 2, offset);\n    }\n    /**\n     * Reads an UInt32BE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readUInt32BE\",\n    value: function readUInt32BE(offset) {\n      return this._readNumberValue(Buffer.prototype.readUInt32BE, 4, offset);\n    }\n    /**\n     * Reads an UInt32LE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readUInt32LE\",\n    value: function readUInt32LE(offset) {\n      return this._readNumberValue(Buffer.prototype.readUInt32LE, 4, offset);\n    }\n    /**\n     * Writes an UInt8 value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeUInt8\",\n    value: function writeUInt8(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeUInt8, 1, value, offset);\n    }\n    /**\n     * Inserts an UInt8 value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertUInt8\",\n    value: function insertUInt8(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeUInt8, 1, value, offset);\n    }\n    /**\n     * Writes an UInt16BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeUInt16BE\",\n    value: function writeUInt16BE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeUInt16BE, 2, value, offset);\n    }\n    /**\n     * Inserts an UInt16BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertUInt16BE\",\n    value: function insertUInt16BE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeUInt16BE, 2, value, offset);\n    }\n    /**\n     * Writes an UInt16LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeUInt16LE\",\n    value: function writeUInt16LE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeUInt16LE, 2, value, offset);\n    }\n    /**\n     * Inserts an UInt16LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertUInt16LE\",\n    value: function insertUInt16LE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeUInt16LE, 2, value, offset);\n    }\n    /**\n     * Writes an UInt32BE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeUInt32BE\",\n    value: function writeUInt32BE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeUInt32BE, 4, value, offset);\n    }\n    /**\n     * Inserts an UInt32BE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertUInt32BE\",\n    value: function insertUInt32BE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeUInt32BE, 4, value, offset);\n    }\n    /**\n     * Writes an UInt32LE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeUInt32LE\",\n    value: function writeUInt32LE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeUInt32LE, 4, value, offset);\n    }\n    /**\n     * Inserts an UInt32LE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertUInt32LE\",\n    value: function insertUInt32LE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeUInt32LE, 4, value, offset);\n    } // Floating Point\n\n    /**\n     * Reads an FloatBE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readFloatBE\",\n    value: function readFloatBE(offset) {\n      return this._readNumberValue(Buffer.prototype.readFloatBE, 4, offset);\n    }\n    /**\n     * Reads an FloatLE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readFloatLE\",\n    value: function readFloatLE(offset) {\n      return this._readNumberValue(Buffer.prototype.readFloatLE, 4, offset);\n    }\n    /**\n     * Writes a FloatBE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeFloatBE\",\n    value: function writeFloatBE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeFloatBE, 4, value, offset);\n    }\n    /**\n     * Inserts a FloatBE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertFloatBE\",\n    value: function insertFloatBE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeFloatBE, 4, value, offset);\n    }\n    /**\n     * Writes a FloatLE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeFloatLE\",\n    value: function writeFloatLE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeFloatLE, 4, value, offset);\n    }\n    /**\n     * Inserts a FloatLE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertFloatLE\",\n    value: function insertFloatLE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeFloatLE, 4, value, offset);\n    } // Double Floating Point\n\n    /**\n     * Reads an DoublEBE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readDoubleBE\",\n    value: function readDoubleBE(offset) {\n      return this._readNumberValue(Buffer.prototype.readDoubleBE, 8, offset);\n    }\n    /**\n     * Reads an DoubleLE value from the current read position or an optionally provided offset.\n     *\n     * @param offset { Number } The offset to read data from (optional)\n     * @return { Number }\n     */\n\n  }, {\n    key: \"readDoubleLE\",\n    value: function readDoubleLE(offset) {\n      return this._readNumberValue(Buffer.prototype.readDoubleLE, 8, offset);\n    }\n    /**\n     * Writes a DoubleBE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeDoubleBE\",\n    value: function writeDoubleBE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeDoubleBE, 8, value, offset);\n    }\n    /**\n     * Inserts a DoubleBE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertDoubleBE\",\n    value: function insertDoubleBE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeDoubleBE, 8, value, offset);\n    }\n    /**\n     * Writes a DoubleLE value to the current write position (or at optional offset).\n     *\n     * @param value { Number } The value to write.\n     * @param offset { Number } The offset to write the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeDoubleLE\",\n    value: function writeDoubleLE(value, offset) {\n      return this._writeNumberValue(Buffer.prototype.writeDoubleLE, 8, value, offset);\n    }\n    /**\n     * Inserts a DoubleLE value at the given offset value.\n     *\n     * @param value { Number } The value to insert.\n     * @param offset { Number } The offset to insert the value at.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertDoubleLE\",\n    value: function insertDoubleLE(value, offset) {\n      return this._insertNumberValue(Buffer.prototype.writeDoubleLE, 8, value, offset);\n    } // Strings\n\n    /**\n     * Reads a String from the current read position.\n     *\n     * @param arg1 { Number | String } The number of bytes to read as a String, or the BufferEncoding to use for\n     *             the string (Defaults to instance level encoding).\n     * @param encoding { String } The BufferEncoding to use for the string (Defaults to instance level encoding).\n     *\n     * @return { String }\n     */\n\n  }, {\n    key: \"readString\",\n    value: function readString(arg1, encoding) {\n      var lengthVal; // Length provided\n\n      if (typeof arg1 === 'number') {\n        utils_1.checkLengthValue(arg1);\n        lengthVal = Math.min(arg1, this.length - this._readOffset);\n      } else {\n        encoding = arg1;\n        lengthVal = this.length - this._readOffset;\n      } // Check encoding\n\n\n      if (typeof encoding !== 'undefined') {\n        utils_1.checkEncoding(encoding);\n      }\n\n      var value = this._buff.slice(this._readOffset, this._readOffset + lengthVal).toString(encoding || this._encoding);\n\n      this._readOffset += lengthVal;\n      return value;\n    }\n    /**\n     * Inserts a String\n     *\n     * @param value { String } The String value to insert.\n     * @param offset { Number } The offset to insert the string at.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertString\",\n    value: function insertString(value, offset, encoding) {\n      utils_1.checkOffsetValue(offset);\n      return this._handleString(value, true, offset, encoding);\n    }\n    /**\n     * Writes a String\n     *\n     * @param value { String } The String value to write.\n     * @param arg2 { Number | String } The offset to write the string at, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeString\",\n    value: function writeString(value, arg2, encoding) {\n      return this._handleString(value, false, arg2, encoding);\n    }\n    /**\n     * Reads a null-terminated String from the current read position.\n     *\n     * @param encoding { String } The BufferEncoding to use for the string (Defaults to instance level encoding).\n     *\n     * @return { String }\n     */\n\n  }, {\n    key: \"readStringNT\",\n    value: function readStringNT(encoding) {\n      if (typeof encoding !== 'undefined') {\n        utils_1.checkEncoding(encoding);\n      } // Set null character position to the end SmartBuffer instance.\n\n\n      var nullPos = this.length; // Find next null character (if one is not found, default from above is used)\n\n      for (var i = this._readOffset; i < this.length; i++) {\n        if (this._buff[i] === 0x00) {\n          nullPos = i;\n          break;\n        }\n      } // Read string value\n\n\n      var value = this._buff.slice(this._readOffset, nullPos); // Increment internal Buffer read offset\n\n\n      this._readOffset = nullPos + 1;\n      return value.toString(encoding || this._encoding);\n    }\n    /**\n     * Inserts a null-terminated String.\n     *\n     * @param value { String } The String value to write.\n     * @param arg2 { Number | String } The offset to write the string to, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertStringNT\",\n    value: function insertStringNT(value, offset, encoding) {\n      utils_1.checkOffsetValue(offset); // Write Values\n\n      this.insertString(value, offset, encoding);\n      this.insertUInt8(0x00, offset + value.length);\n      return this;\n    }\n    /**\n     * Writes a null-terminated String.\n     *\n     * @param value { String } The String value to write.\n     * @param arg2 { Number | String } The offset to write the string to, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeStringNT\",\n    value: function writeStringNT(value, arg2, encoding) {\n      // Write Values\n      this.writeString(value, arg2, encoding);\n      this.writeUInt8(0x00, typeof arg2 === 'number' ? arg2 + value.length : this.writeOffset);\n      return this;\n    } // Buffers\n\n    /**\n     * Reads a Buffer from the internal read position.\n     *\n     * @param length { Number } The length of data to read as a Buffer.\n     *\n     * @return { Buffer }\n     */\n\n  }, {\n    key: \"readBuffer\",\n    value: function readBuffer(length) {\n      if (typeof length !== 'undefined') {\n        utils_1.checkLengthValue(length);\n      }\n\n      var lengthVal = typeof length === 'number' ? length : this.length;\n      var endPoint = Math.min(this.length, this._readOffset + lengthVal); // Read buffer value\n\n      var value = this._buff.slice(this._readOffset, endPoint); // Increment internal Buffer read offset\n\n\n      this._readOffset = endPoint;\n      return value;\n    }\n    /**\n     * Writes a Buffer to the current write position.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertBuffer\",\n    value: function insertBuffer(value, offset) {\n      utils_1.checkOffsetValue(offset);\n      return this._handleBuffer(value, true, offset);\n    }\n    /**\n     * Writes a Buffer to the current write position.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeBuffer\",\n    value: function writeBuffer(value, offset) {\n      return this._handleBuffer(value, false, offset);\n    }\n    /**\n     * Reads a null-terminated Buffer from the current read poisiton.\n     *\n     * @return { Buffer }\n     */\n\n  }, {\n    key: \"readBufferNT\",\n    value: function readBufferNT() {\n      // Set null character position to the end SmartBuffer instance.\n      var nullPos = this.length; // Find next null character (if one is not found, default from above is used)\n\n      for (var i = this._readOffset; i < this.length; i++) {\n        if (this._buff[i] === 0x00) {\n          nullPos = i;\n          break;\n        }\n      } // Read value\n\n\n      var value = this._buff.slice(this._readOffset, nullPos); // Increment internal Buffer read offset\n\n\n      this._readOffset = nullPos + 1;\n      return value;\n    }\n    /**\n     * Inserts a null-terminated Buffer.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"insertBufferNT\",\n    value: function insertBufferNT(value, offset) {\n      utils_1.checkOffsetValue(offset); // Write Values\n\n      this.insertBuffer(value, offset);\n      this.insertUInt8(0x00, offset + value.length);\n      return this;\n    }\n    /**\n     * Writes a null-terminated Buffer.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     *\n     * @return this\n     */\n\n  }, {\n    key: \"writeBufferNT\",\n    value: function writeBufferNT(value, offset) {\n      // Checks for valid numberic value;\n      if (typeof offset !== 'undefined') {\n        utils_1.checkOffsetValue(offset);\n      } // Write Values\n\n\n      this.writeBuffer(value, offset);\n      this.writeUInt8(0x00, typeof offset === 'number' ? offset + value.length : this._writeOffset);\n      return this;\n    }\n    /**\n     * Clears the SmartBuffer instance to its original empty state.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._writeOffset = 0;\n      this._readOffset = 0;\n      this.length = 0;\n      return this;\n    }\n    /**\n     * Gets the remaining data left to be read from the SmartBuffer instance.\n     *\n     * @return { Number }\n     */\n\n  }, {\n    key: \"remaining\",\n    value: function remaining() {\n      return this.length - this._readOffset;\n    }\n    /**\n     * Gets the current read offset value of the SmartBuffer instance.\n     *\n     * @return { Number }\n     */\n\n  }, {\n    key: \"toBuffer\",\n\n    /**\n     * Gets the value of the internal managed Buffer (Includes managed data only)\n     *\n     * @param { Buffer }\n     */\n    value: function toBuffer() {\n      return this._buff.slice(0, this.length);\n    }\n    /**\n     * Gets the String value of the internal managed Buffer\n     *\n     * @param encoding { String } The BufferEncoding to display the Buffer as (defaults to instance level encoding).\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString(encoding) {\n      var encodingVal = typeof encoding === 'string' ? encoding : this._encoding; // Check for invalid encoding.\n\n      utils_1.checkEncoding(encodingVal);\n      return this._buff.toString(encodingVal, 0, this.length);\n    }\n    /**\n     * Destroys the SmartBuffer instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      return this;\n    }\n    /**\n     * Handles inserting and writing strings.\n     *\n     * @param value { String } The String value to insert.\n     * @param isInsert { Boolean } True if inserting a string, false if writing.\n     * @param arg2 { Number | String } The offset to insert the string at, or the BufferEncoding to use.\n     * @param encoding { String } The BufferEncoding to use for writing strings (defaults to instance encoding).\n     */\n\n  }, {\n    key: \"_handleString\",\n    value: function _handleString(value, isInsert, arg3, encoding) {\n      var offsetVal = this._writeOffset;\n      var encodingVal = this._encoding; // Check for offset\n\n      if (typeof arg3 === 'number') {\n        offsetVal = arg3; // Check for encoding\n      } else if (typeof arg3 === 'string') {\n        utils_1.checkEncoding(arg3);\n        encodingVal = arg3;\n      } // Check for encoding (third param)\n\n\n      if (typeof encoding === 'string') {\n        utils_1.checkEncoding(encoding);\n        encodingVal = encoding;\n      } // Calculate bytelength of string.\n\n\n      var byteLength = Buffer.byteLength(value, encodingVal); // Ensure there is enough internal Buffer capacity.\n\n      if (isInsert) {\n        this.ensureInsertable(byteLength, offsetVal);\n      } else {\n        this._ensureWriteable(byteLength, offsetVal);\n      } // Write value\n\n\n      this._buff.write(value, offsetVal, byteLength, encodingVal); // Increment internal Buffer write offset;\n\n\n      if (isInsert) {\n        this._writeOffset += byteLength;\n      } else {\n        // If an offset was given, check to see if we wrote beyond the current writeOffset.\n        if (typeof arg3 === 'number') {\n          this._writeOffset = Math.max(this._writeOffset, offsetVal + byteLength);\n        } else {\n          // If no offset was given, we wrote to the end of the SmartBuffer so increment writeOffset.\n          this._writeOffset += byteLength;\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Handles writing or insert of a Buffer.\n     *\n     * @param value { Buffer } The Buffer to write.\n     * @param offset { Number } The offset to write the Buffer to.\n     */\n\n  }, {\n    key: \"_handleBuffer\",\n    value: function _handleBuffer(value, isInsert, offset) {\n      var offsetVal = typeof offset === 'number' ? offset : this._writeOffset; // Ensure there is enough internal Buffer capacity.\n\n      if (isInsert) {\n        this.ensureInsertable(value.length, offsetVal);\n      } else {\n        this._ensureWriteable(value.length, offsetVal);\n      } // Write buffer value\n\n\n      value.copy(this._buff, offsetVal); // Increment internal Buffer write offset;\n\n      if (isInsert) {\n        this._writeOffset += value.length;\n      } else {\n        // If an offset was given, check to see if we wrote beyond the current writeOffset.\n        if (typeof offset === 'number') {\n          this._writeOffset = Math.max(this._writeOffset, offsetVal + value.length);\n        } else {\n          // If no offset was given, we wrote to the end of the SmartBuffer so increment writeOffset.\n          this._writeOffset += value.length;\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to read data.\n     *\n     * @param length { Number } The length of the data that needs to be read.\n     * @param offset { Number } The offset of the data that needs to be read.\n     */\n\n  }, {\n    key: \"ensureReadable\",\n    value: function ensureReadable(length, offset) {\n      // Offset value defaults to managed read offset.\n      var offsetVal = this._readOffset; // If an offset was provided, use it.\n\n      if (typeof offset !== 'undefined') {\n        // Checks for valid numberic value;\n        utils_1.checkOffsetValue(offset); // Overide with custom offset.\n\n        offsetVal = offset;\n      } // Checks if offset is below zero, or the offset+length offset is beyond the total length of the managed data.\n\n\n      if (offsetVal < 0 || offsetVal + length > this.length) {\n        throw new Error(utils_1.ERRORS.INVALID_READ_BEYOND_BOUNDS);\n      }\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to insert data.\n     *\n     * @param dataLength { Number } The length of the data that needs to be written.\n     * @param offset { Number } The offset of the data to be written.\n     */\n\n  }, {\n    key: \"ensureInsertable\",\n    value: function ensureInsertable(dataLength, offset) {\n      // Checks for valid numberic value;\n      utils_1.checkOffsetValue(offset); // Ensure there is enough internal Buffer capacity.\n\n      this._ensureCapacity(this.length + dataLength); // If an offset was provided and its not the very end of the buffer, copy data into appropriate location in regards to the offset.\n\n\n      if (offset < this.length) {\n        this._buff.copy(this._buff, offset + dataLength, offset, this._buff.length);\n      } // Adjust tracked smart buffer length\n\n\n      if (offset + dataLength > this.length) {\n        this.length = offset + dataLength;\n      } else {\n        this.length += dataLength;\n      }\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to write data.\n     *\n     * @param dataLength { Number } The length of the data that needs to be written.\n     * @param offset { Number } The offset of the data to be written (defaults to writeOffset).\n     */\n\n  }, {\n    key: \"_ensureWriteable\",\n    value: function _ensureWriteable(dataLength, offset) {\n      var offsetVal = typeof offset === 'number' ? offset : this._writeOffset; // Ensure enough capacity to write data.\n\n      this._ensureCapacity(offsetVal + dataLength); // Adjust SmartBuffer length (if offset + length is larger than managed length, adjust length)\n\n\n      if (offsetVal + dataLength > this.length) {\n        this.length = offsetVal + dataLength;\n      }\n    }\n    /**\n     * Ensures that the internal Buffer is large enough to write at least the given amount of data.\n     *\n     * @param minLength { Number } The minimum length of the data needs to be written.\n     */\n\n  }, {\n    key: \"_ensureCapacity\",\n    value: function _ensureCapacity(minLength) {\n      var oldLength = this._buff.length;\n\n      if (minLength > oldLength) {\n        var data = this._buff;\n        var newLength = oldLength * 3 / 2 + 1;\n\n        if (newLength < minLength) {\n          newLength = minLength;\n        }\n\n        this._buff = Buffer.allocUnsafe(newLength);\n        data.copy(this._buff, 0, 0, oldLength);\n      }\n    }\n    /**\n     * Reads a numeric number value using the provided function.\n     *\n     * @param func { Function(offset: number) => number } The function to read data on the internal Buffer with.\n     * @param byteSize { Number } The number of bytes read.\n     * @param offset { Number } The offset to read from (optional). When this is not provided, the managed readOffset is used instead.\n     *\n     * @param { Number }\n     */\n\n  }, {\n    key: \"_readNumberValue\",\n    value: function _readNumberValue(func, byteSize, offset) {\n      this.ensureReadable(byteSize, offset); // Call Buffer.readXXXX();\n\n      var value = func.call(this._buff, typeof offset === 'number' ? offset : this._readOffset); // Adjust internal read offset if an optional read offset was not provided.\n\n      if (typeof offset === 'undefined') {\n        this._readOffset += byteSize;\n      }\n\n      return value;\n    }\n    /**\n     * Inserts a numeric number value based on the given offset and value.\n     *\n     * @param func { Function(offset: number, offset?) => number} The function to write data on the internal Buffer with.\n     * @param byteSize { Number } The number of bytes written.\n     * @param value { Number } The number value to write.\n     * @param offset { Number } the offset to write the number at (REQUIRED).\n     *\n     */\n\n  }, {\n    key: \"_insertNumberValue\",\n    value: function _insertNumberValue(func, byteSize, value, offset) {\n      // Check for invalid offset values.\n      utils_1.checkOffsetValue(offset); // Ensure there is enough internal Buffer capacity. (raw offset is passed)\n\n      this.ensureInsertable(byteSize, offset); // Call buffer.writeXXXX();\n\n      func.call(this._buff, value, offset); // Adjusts internally managed write offset.\n\n      this._writeOffset += byteSize;\n      return this;\n    }\n    /**\n     * Writes a numeric number value based on the given offset and value.\n     *\n     * @param func { Function(offset: number, offset?) => number} The function to write data on the internal Buffer with.\n     * @param byteSize { Number } The number of bytes written.\n     * @param value { Number } The number value to write.\n     * @param offset { Number } the offset to write the number at (REQUIRED).\n     *\n     */\n\n  }, {\n    key: \"_writeNumberValue\",\n    value: function _writeNumberValue(func, byteSize, value, offset) {\n      // If an offset was provided, validate it.\n      if (typeof offset === 'number') {\n        // Check if we're writing beyond the bounds of the managed data.\n        if (offset < 0) {\n          throw new Error(utils_1.ERRORS.INVALID_WRITE_BEYOND_BOUNDS);\n        }\n\n        utils_1.checkOffsetValue(offset);\n      } // Default to writeOffset if no offset value was given.\n\n\n      var offsetVal = typeof offset === 'number' ? offset : this._writeOffset; // Ensure there is enough internal Buffer capacity. (raw offset is passed)\n\n      this._ensureWriteable(byteSize, offsetVal);\n\n      func.call(this._buff, value, offsetVal); // If an offset was given, check to see if we wrote beyond the current writeOffset.\n\n      if (typeof offset === 'number') {\n        this._writeOffset = Math.max(this._writeOffset, offsetVal + byteSize);\n      } else {\n        // If no numeric offset was given, we wrote to the end of the SmartBuffer so increment writeOffset.\n        this._writeOffset += byteSize;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"readOffset\",\n    get: function get() {\n      return this._readOffset;\n    }\n    /**\n     * Sets the read offset value of the SmartBuffer instance.\n     *\n     * @param offset { Number } - The offset value to set.\n     */\n    ,\n    set: function set(offset) {\n      utils_1.checkOffsetValue(offset); // Check for bounds.\n\n      utils_1.checkTargetOffset(offset, this);\n      this._readOffset = offset;\n    }\n    /**\n     * Gets the current write offset value of the SmartBuffer instance.\n     *\n     * @return { Number }\n     */\n\n  }, {\n    key: \"writeOffset\",\n    get: function get() {\n      return this._writeOffset;\n    }\n    /**\n     * Sets the write offset value of the SmartBuffer instance.\n     *\n     * @param offset { Number } - The offset value to set.\n     */\n    ,\n    set: function set(offset) {\n      utils_1.checkOffsetValue(offset); // Check for bounds.\n\n      utils_1.checkTargetOffset(offset, this);\n      this._writeOffset = offset;\n    }\n    /**\n     * Gets the currently set string encoding of the SmartBuffer instance.\n     *\n     * @return { BufferEncoding } The string Buffer encoding currently set.\n     */\n\n  }, {\n    key: \"encoding\",\n    get: function get() {\n      return this._encoding;\n    }\n    /**\n     * Sets the string encoding of the SmartBuffer instance.\n     *\n     * @param encoding { BufferEncoding } The string Buffer encoding to set.\n     */\n    ,\n    set: function set(encoding) {\n      utils_1.checkEncoding(encoding);\n      this._encoding = encoding;\n    }\n    /**\n     * Gets the underlying internal Buffer. (This includes unmanaged data in the Buffer)\n     *\n     * @return { Buffer } The Buffer value.\n     */\n\n  }, {\n    key: \"internalBuffer\",\n    get: function get() {\n      return this._buff;\n    }\n  }], [{\n    key: \"fromSize\",\n    value: function fromSize(size, encoding) {\n      return new this({\n        size: size,\n        encoding: encoding\n      });\n    }\n    /**\n     * Creates a new SmartBuffer instance with the provided Buffer and optional encoding.\n     *\n     * @param buffer { Buffer } The Buffer to use as the internal Buffer value.\n     * @param encoding { String } The BufferEncoding to use for strings.\n     *\n     * @return { SmartBuffer }\n     */\n\n  }, {\n    key: \"fromBuffer\",\n    value: function fromBuffer(buff, encoding) {\n      return new this({\n        buff: buff,\n        encoding: encoding\n      });\n    }\n    /**\n     * Creates a new SmartBuffer instance with the provided SmartBufferOptions options.\n     *\n     * @param options { SmartBufferOptions } The options to use when creating the SmartBuffer instance.\n     */\n\n  }, {\n    key: \"fromOptions\",\n    value: function fromOptions(options) {\n      return new this(options);\n    }\n    /**\n     * Type checking function that determines if an object is a SmartBufferOptions object.\n     */\n\n  }, {\n    key: \"isSmartBufferOptions\",\n    value: function isSmartBufferOptions(options) {\n      var castOptions = options;\n      return castOptions && (castOptions.encoding !== undefined || castOptions.size !== undefined || castOptions.buff !== undefined);\n    }\n  }]);\n\n  return SmartBuffer;\n}();\n\nexports.SmartBuffer = SmartBuffer;","var asn1 = require('./asn1');\n\nvar aesid = require('./aesid.json');\n\nvar fixProc = require('./fixProc');\n\nvar ciphers = require('browserify-aes');\n\nvar compat = require('pbkdf2');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = parseKeys;\n\nfunction parseKeys(buffer) {\n  var password;\n\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase;\n    buffer = buffer.key;\n  }\n\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  }\n\n  var stripped = fixProc(buffer, password);\n  var type = stripped.tag;\n  var data = stripped.data;\n  var subtype, ndata;\n\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n    // falls through\n\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der');\n      }\n\n      subtype = ndata.algorithm.algorithm.join('.');\n\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey;\n          return {\n            type: 'ec',\n            data: ndata\n          };\n\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          };\n\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n\n      throw new Error('unknown key type ' + type);\n\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der');\n      data = decrypt(data, password);\n    // falls through\n\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der');\n      subtype = ndata.algorithm.algorithm.join('.');\n\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          };\n\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          };\n\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n\n      throw new Error('unknown key type ' + type);\n\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der');\n\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der');\n\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      };\n\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der');\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      };\n\n    default:\n      throw new Error('unknown key type ' + type);\n  }\n}\n\nparseKeys.signature = asn1.signature;\n\nfunction decrypt(data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt;\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n  var iv = data.algorithm.decrypt.cipher.iv;\n  var cipherText = data.subjectPrivateKey;\n  var keylen = parseInt(algo.split('-')[1], 10) / 8;\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n  var cipher = ciphers.createDecipheriv(algo, key, iv);\n  var out = [];\n  out.push(cipher.update(cipherText));\n  out.push(cipher.final());\n  return Buffer.concat(out);\n}","'use strict';\n\nvar curve = exports;\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');","'use strict';\n\nvar _ = require('lodash');\n\nvar Address = require('./address');\n\nvar Base58Check = require('./encoding/base58check');\n\nvar BN = require('./crypto/bn');\n\nvar JSUtil = require('./util/js');\n\nvar Networks = require('./networks');\n\nvar Point = require('./crypto/point');\n\nvar PublicKey = require('./publickey');\n\nvar Random = require('./crypto/random');\n\nvar $ = require('./util/preconditions');\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\n\n\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n\n  /* jshint maxcomplexity: 8 */\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network); // validation\n\n\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0) {\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n\n  if (typeof info.network === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n  return this;\n}\n\n;\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\n\nPrivateKey.prototype._classifyArguments = function (data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  }; // detect type of data\n\n  if (_.isUndefined(data) || _.isNull(data)) {\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n    info = PrivateKey._transformBuffer(data, network);\n  } else if (data.bn && data.network) {\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof data === 'string') {\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n\n  return info;\n};\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\n\n\nPrivateKey._getRandomBN = function () {\n  var condition;\n  var bn;\n\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n\n  return bn;\n};\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\n\n\nPrivateKey._transformBuffer = function (buf, network) {\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n  return info;\n};\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\n\n\nPrivateKey._transformBNBuffer = function (buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\n\n\nPrivateKey._transformWIF = function (str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\n\n\nPrivateKey.fromBuffer = function (arg, network) {\n  return new PrivateKey(arg, network);\n};\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\n\n\nPrivateKey._transformObject = function (json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\n\n\nPrivateKey.fromString = PrivateKey.fromWIF = function (str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\n\n\nPrivateKey.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\n\n\nPrivateKey.fromRandom = function (network) {\n  var bn = PrivateKey._getRandomBN();\n\n  return new PrivateKey(bn, network);\n};\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\n\nPrivateKey.getValidationError = function (data, network) {\n  var error;\n\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n};\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\n\n\nPrivateKey.isValid = function (data, network) {\n  if (!data) {\n    return false;\n  }\n\n  return !PrivateKey.getValidationError(data, network);\n};\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\n\n\nPrivateKey.prototype.toString = function () {\n  return this.toBuffer().toString('hex');\n};\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\n\n\nPrivateKey.prototype.toWIF = function () {\n  var network = this.network;\n  var compressed = this.compressed;\n  var buf;\n\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]), this.bn.toBuffer({\n      size: 32\n    }), new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]), this.bn.toBuffer({\n      size: 32\n    })]);\n  }\n\n  return Base58Check.encode(buf);\n};\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\n\n\nPrivateKey.prototype.toBigNumber = function () {\n  return this.bn;\n};\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\n\n\nPrivateKey.prototype.toBuffer = function () {\n  return this.bn.toBuffer();\n};\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\n\n\nPrivateKey.prototype.toPublicKey = function () {\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n\n  return this._pubkey;\n};\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\n\n\nPrivateKey.prototype.toAddress = function (network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n/**\n * @returns {Object} A plain object representation\n */\n\n\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\n\n\nPrivateKey.prototype.inspect = function () {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;","'use strict';\n\nvar _ = require('lodash');\n\nvar bs58 = require('bs58');\n\nvar buffer = require('buffer');\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('');\n\nvar Base58 = function Base58(obj) {\n  /* jshint maxcomplexity: 8 */\n  if (!(this instanceof Base58)) {\n    return new Base58(obj);\n  }\n\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj;\n    this.fromBuffer(buf);\n  } else if (typeof obj === 'string') {\n    var str = obj;\n    this.fromString(str);\n  } else if (obj) {\n    this.set(obj);\n  }\n};\n\nBase58.validCharacters = function validCharacters(chars) {\n  if (buffer.Buffer.isBuffer(chars)) {\n    chars = chars.toString();\n  }\n\n  return _.all(_.map(chars, function (char) {\n    return _.contains(ALPHABET, char);\n  }));\n};\n\nBase58.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  return this;\n};\n\nBase58.encode = function (buf) {\n  if (!buffer.Buffer.isBuffer(buf)) {\n    throw new Error('Input should be a buffer');\n  }\n\n  return bs58.encode(buf);\n};\n\nBase58.decode = function (str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string');\n  }\n\n  return new Buffer(bs58.decode(str));\n};\n\nBase58.prototype.fromBuffer = function (buf) {\n  this.buf = buf;\n  return this;\n};\n\nBase58.prototype.fromString = function (str) {\n  var buf = Base58.decode(str);\n  this.buf = buf;\n  return this;\n};\n\nBase58.prototype.toBuffer = function () {\n  return this.buf;\n};\n\nBase58.prototype.toString = function () {\n  return Base58.encode(this.buf);\n};\n\nmodule.exports = Base58;","module.exports = require('./transaction');\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\nmodule.exports.Sighash = require('./sighash');","'use strict';\n\nfunction Random() {}\n/* secure random bytes that sometimes throws an error due to lack of entropy */\n\n\nRandom.getRandomBuffer = function (size) {\n  if (process.browser) return Random.getRandomBufferBrowser(size);else return Random.getRandomBufferNode(size);\n};\n\nRandom.getRandomBufferNode = function (size) {\n  var crypto = require('crypto');\n\n  return crypto.randomBytes(size);\n};\n\nRandom.getRandomBufferBrowser = function (size) {\n  if (!window.crypto && !window.msCrypto) throw new Error('window.crypto not available');\n  if (window.crypto && window.crypto.getRandomValues) var crypto = window.crypto;else if (window.msCrypto && window.msCrypto.getRandomValues) //internet explorer\n    var crypto = window.msCrypto;else throw new Error('window.crypto.getRandomValues not available');\n  var bbuf = new Uint8Array(size);\n  crypto.getRandomValues(bbuf);\n  var buf = new Buffer(bbuf);\n  return buf;\n};\n/* insecure random bytes, but it never fails */\n\n\nRandom.getPseudoRandomBuffer = function (size) {\n  var b32 = 0x100000000;\n  var b = new Buffer(size);\n  var r;\n\n  for (var i = 0; i <= size; i++) {\n    var j = Math.floor(i / 4);\n    var k = i - j * 4;\n\n    if (k === 0) {\n      r = Math.random() * b32;\n      b[i] = r & 0xff;\n    } else {\n      b[i] = (r = r >>> 8) & 0xff;\n    }\n  }\n\n  return b;\n};\n\nmodule.exports = Random;","'use strict';\n\nvar _ = require('lodash');\n\nvar BN = require('../crypto/bn');\n\nvar BufferUtil = require('../util/buffer');\n\nvar BufferReader = require('../encoding/bufferreader');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Hash = require('../crypto/hash');\n\nvar JSUtil = require('../util/js');\n\nvar $ = require('../util/preconditions');\n\nvar GENESIS_BITS = 0x2003ffff;\n/**\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\n * the properties of the BlockHeader\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {BlockHeader} - An instance of block header\n * @constructor\n */\n\nvar BlockHeader = function BlockHeader(arg) {\n  if (!(this instanceof BlockHeader)) {\n    return new BlockHeader(arg);\n  }\n\n  var info = BlockHeader._from(arg);\n\n  this.version = info.version;\n  this.prevHash = info.prevHash;\n  this.merkleRoot = info.merkleRoot;\n  this.reserved = info.reserved;\n  this.time = info.time;\n  this.timestamp = info.time;\n  this.bits = info.bits;\n  this.nonce = info.nonce;\n  this.solution = info.solution;\n\n  if (info.hash) {\n    $.checkState(this.hash === info.hash, 'Argument object hash property does not match block hash.');\n  }\n\n  return this;\n};\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block header data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\n\n\nBlockHeader._from = function _from(arg) {\n  var info = {};\n\n  if (BufferUtil.isBuffer(arg)) {\n    info = BlockHeader._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    info = BlockHeader._fromObject(arg);\n  } else {\n    throw new TypeError('Unrecognized argument for BlockHeader');\n  }\n\n  return info;\n};\n/**\n * @param {Object} - A JSON string\n * @returns {Object} - An object representing block header data\n * @private\n */\n\n\nBlockHeader._fromObject = function _fromObject(data) {\n  $.checkArgument(data, 'data is required');\n  var prevHash = data.prevHash;\n  var merkleRoot = data.merkleRoot;\n  var reserved = data.reserved;\n  var nonce = data.nonce;\n  var solution = data.solution;\n\n  if (_.isString(data.prevHash)) {\n    prevHash = BufferUtil.reverse(new Buffer(data.prevHash, 'hex'));\n  }\n\n  if (_.isString(data.merkleRoot)) {\n    merkleRoot = BufferUtil.reverse(new Buffer(data.merkleRoot, 'hex'));\n  }\n\n  if (_.isString(data.reserved)) {\n    reserved = BufferUtil.reverse(new Buffer(data.reserved, 'hex'));\n  }\n\n  if (_.isString(data.nonce)) {\n    nonce = BufferUtil.reverse(new Buffer(data.nonce, 'hex'));\n  }\n\n  if (_.isString(data.solution)) {\n    solution = new Buffer(data.solution, 'hex');\n  }\n\n  var info = {\n    hash: data.hash,\n    version: data.version,\n    prevHash: prevHash,\n    merkleRoot: merkleRoot,\n    reserved: reserved,\n    time: data.time,\n    timestamp: data.time,\n    bits: data.bits,\n    nonce: nonce,\n    solution: solution\n  };\n  return info;\n};\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {BlockHeader} - An instance of block header\n */\n\n\nBlockHeader.fromObject = function fromObject(obj) {\n  var info = BlockHeader._fromObject(obj);\n\n  return new BlockHeader(info);\n};\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {BlockHeader} - An instance of block header\n */\n\n\nBlockHeader.fromRawBlock = function fromRawBlock(data) {\n  if (!BufferUtil.isBuffer(data)) {\n    data = new Buffer(data, 'binary');\n  }\n\n  var br = BufferReader(data);\n  br.pos = BlockHeader.Constants.START_OF_HEADER;\n\n  var info = BlockHeader._fromBufferReader(br);\n\n  return new BlockHeader(info);\n};\n/**\n * @param {Buffer} - A buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\n\n\nBlockHeader.fromBuffer = function fromBuffer(buf) {\n  var info = BlockHeader._fromBufferReader(BufferReader(buf));\n\n  return new BlockHeader(info);\n};\n/**\n * @param {string} - A hex encoded buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\n\n\nBlockHeader.fromString = function fromString(str) {\n  var buf = new Buffer(str, 'hex');\n  return BlockHeader.fromBuffer(buf);\n};\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {Object} - An object representing block header data\n * @private\n */\n\n\nBlockHeader._fromBufferReader = function _fromBufferReader(br) {\n  var info = {};\n  info.version = br.readUInt32LE();\n  info.prevHash = br.read(32);\n  info.merkleRoot = br.read(32);\n  info.reserved = br.read(32);\n  info.time = br.readUInt32LE();\n  info.bits = br.readUInt32LE();\n  info.nonce = br.read(32);\n  var lenSolution = br.readVarintNum();\n  info.solution = br.read(lenSolution);\n  return info;\n};\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {BlockHeader} - An instance of block header\n */\n\n\nBlockHeader.fromBufferReader = function fromBufferReader(br) {\n  var info = BlockHeader._fromBufferReader(br);\n\n  return new BlockHeader(info);\n};\n/**\n * @returns {Object} - A plain object of the BlockHeader\n */\n\n\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hash,\n    version: this.version,\n    prevHash: BufferUtil.reverse(this.prevHash).toString('hex'),\n    merkleRoot: BufferUtil.reverse(this.merkleRoot).toString('hex'),\n    reserved: BufferUtil.reverse(this.reserved).toString('hex'),\n    time: this.time,\n    bits: this.bits,\n    nonce: BufferUtil.reverse(this.nonce).toString('hex'),\n    solution: this.solution.toString('hex')\n  };\n};\n/**\n * @returns {Buffer} - A Buffer of the BlockHeader\n */\n\n\nBlockHeader.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n/**\n * @returns {string} - A hex encoded string of the BlockHeader\n */\n\n\nBlockHeader.prototype.toString = function toString() {\n  return this.toBuffer().toString('hex');\n};\n/**\n * @param {BufferWriter} - An existing instance BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\n */\n\n\nBlockHeader.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n\n  bw.writeUInt32LE(this.version);\n  bw.write(this.prevHash);\n  bw.write(this.merkleRoot);\n  bw.write(this.reserved);\n  bw.writeUInt32LE(this.time);\n  bw.writeUInt32LE(this.bits);\n  bw.write(this.nonce);\n  bw.writeVarintNum(this.solution.length);\n  bw.write(this.solution);\n  return bw;\n};\n/**\n * Returns the target difficulty for this block\n * @param {Number} bits\n * @returns {BN} An instance of BN with the decoded difficulty bits\n */\n\n\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty(bits) {\n  bits = bits || this.bits;\n  var target = new BN(bits & 0xffffff);\n  var mov = 8 * ((bits >>> 24) - 3);\n\n  while (mov-- > 0) {\n    target = target.mul(new BN(2));\n  }\n\n  return target;\n};\n/**\n * @link https://en.bitcoin.it/wiki/Difficulty\n * @return {Number}\n */\n\n\nBlockHeader.prototype.getDifficulty = function getDifficulty() {\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)));\n  var currentTargetBN = this.getTargetDifficulty();\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10);\n  var decimalPos = difficultyString.length - 8;\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos);\n  return parseFloat(difficultyString);\n};\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\n\n\nBlockHeader.prototype._getHash = function hash() {\n  var buf = this.toBuffer();\n  return Hash.sha256sha256(buf);\n};\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function get() {\n    if (!this._id) {\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex');\n    }\n\n    return this._id;\n  },\n  set: _.noop\n};\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty);\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty);\n/**\n * @returns {Boolean} - If timestamp is not too far in the future\n */\n\nBlockHeader.prototype.validTimestamp = function validTimestamp() {\n  var currentTime = Math.round(new Date().getTime() / 1000);\n\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\n */\n\n\nBlockHeader.prototype.validProofOfWork = function validProofOfWork() {\n  var pow = new BN(this.id, 'hex');\n  var target = this.getTargetDifficulty();\n\n  if (pow.cmp(target) > 0) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * @returns {string} - A string formatted for the console\n */\n\n\nBlockHeader.prototype.inspect = function inspect() {\n  return '<BlockHeader ' + this.id + '>';\n};\n\nBlockHeader.Constants = {\n  START_OF_HEADER: 8,\n  // Start buffer position in raw block data\n  MAX_TIME_OFFSET: 2 * 60 * 60,\n  // The max a timestamp can be in the future\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\n};\nmodule.exports = BlockHeader;","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar createKeccakHash = require('keccak');\n\nvar secp256k1 = require('secp256k1');\n\nvar assert = require('assert');\n\nvar rlp = require('rlp');\n\nvar BN = require('bn.js');\n\nvar createHash = require('create-hash');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nObject.assign(exports, require('ethjs-util'));\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\n\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\n\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nexports.SHA3_NULL_S = exports.KECCAK256_NULL_S;\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\n\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\nexports.SHA3_NULL = exports.KECCAK256_NULL;\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\nexports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\n\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\nexports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\nexports.SHA3_RLP_S = exports.KECCAK256_RLP_S;\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\n\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\nexports.SHA3_RLP = exports.KECCAK256_RLP;\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\n\nexports.BN = BN;\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\n\nexports.rlp = rlp;\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\n\nexports.secp256k1 = secp256k1;\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\n\n\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\n\n\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\n\n\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\n\n\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\n\n\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n};\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\n\n\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\n\n\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n  return createKeccakHash('keccak' + bits).update(a).digest();\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n/**\n * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the SHA-3 width\n * @return {Buffer}\n */\n\n\nexports.sha3 = exports.keccak;\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\n\n\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\n\n\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\n\n\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\n\n\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n\n  assert(pubKey.length === 64); // Only take the lower 160bits of the hash\n\n  return exports.keccak(pubKey).slice(-20);\n};\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\n\n\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey); // skip the type flag and use the X, Y points\n\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\n\n\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n\n  return publicKey;\n};\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @return {Object}\n */\n\n\nexports.ecsign = function (msgHash, privateKey) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = sig.recovery + 27;\n  return ret;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\n\n\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {Buffer} publicKey\n */\n\n\nexports.ecrecover = function (msgHash, v, r, s) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = v - 27;\n\n  if (recovery !== 0 && recovery !== 1) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {String} sig\n */\n\n\nexports.toRpcSig = function (v, r, s) {\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (v !== 27 && v !== 28) {\n    throw new Error('Invalid recovery id');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053\n\n\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\n\n\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig); // NOTE: with potential introduction of chainId this might need to be updated\n\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64]; // support both versions of `eth_sign` responses\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\n\n\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\n\n\nexports.isValidAddress = function (address) {\n  return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\n\n\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\n\n\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\n\n\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\n\n\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  } // Only take the lower 160bits of the hash\n\n\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\n\n\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @return {Boolean}\n */\n\n\nexports.isValidSignature = function (v, r, s, homestead) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (v !== 27 && v !== 28) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n\n      return obj;\n    }\n\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","'use strict';\n\nvar util = require('./util');\n/**\n * @callback ResolveCallback\n * @param {?Error} error - Error if path can't be resolved\n * @param {Object} result - Result of the path it it was resolved successfully\n * @param {*} result.value - Value the path resolves to\n * @param {string} result.remainderPath - If the path resolves half-way to a\n *   link, then the `remainderPath` is the part after the link that can be used\n *   for further resolving.\n */\n\n/**\n * Resolves a path in a Bitcoin block.\n *\n * Returns the value or a link and the partial mising path. This way the\n * IPLD Resolver can fetch the link and continue to resolve.\n *\n * @param {Buffer} binaryBlob - Binary representation of a Bitcoin block\n * @param {string} [path='/'] - Path that should be resolved\n * @param {ResolveCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nvar resolve = function resolve(binaryBlob, path, callback) {\n  if (typeof path === 'function') {\n    callback = path;\n    path = undefined;\n  }\n\n  util.deserialize(binaryBlob, function (err, dagNode) {\n    if (err) {\n      return callback(err);\n    } // Return the deserialized block if no path is given\n\n\n    if (!path) {\n      return callback(null, {\n        value: dagNode,\n        remainderPath: ''\n      });\n    }\n\n    var pathArray = path.split('/');\n    var value = resolveField(dagNode, pathArray[0]);\n\n    if (value === null) {\n      return callback(new Error('No such path'), null);\n    }\n\n    var remainderPath = pathArray.slice(1).join('/'); // It is a link, hence it may have a remainder\n\n    if (value['/'] !== undefined) {\n      return callback(null, {\n        value: value,\n        remainderPath: remainderPath\n      });\n    } else {\n      if (remainderPath.length > 0) {\n        return callback(new Error('No such path'), null);\n      } else {\n        return callback(null, {\n          value: value,\n          remainderPath: ''\n        });\n      }\n    }\n  });\n};\n/**\n * @callback TreeCallback\n * @param {?Error} error - Error if paths can't be retreived\n * @param {string[] | Object.<string, *>[]} result - The result depends on\n *   `options.values`, whether it returns only the paths, or the paths with\n *   the corresponding values\n */\n\n/**\n * Return all available paths of a block.\n *\n * @param {Buffer} binaryBlob - Binary representation of a Bitcoin block\n * @param {Object} [options] - Possible options\n * @param {boolean} [options.values=false] - Retun only the paths by default.\n *   If it is `true` also return the values\n * @param {TreeCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nvar tree = function tree(binaryBlob, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  util.deserialize(binaryBlob, function (err, dagNode) {\n    if (err) {\n      return callback(err);\n    }\n\n    var paths = ['version', 'timestamp', 'difficulty', 'nonce', 'parent', 'tx'];\n\n    if (options.values === true) {\n      var pathValues = {};\n\n      for (var _i = 0; _i < paths.length; _i++) {\n        var path = paths[_i];\n        pathValues[path] = resolveField(dagNode, path);\n      }\n\n      return callback(null, pathValues);\n    } else {\n      return callback(null, paths);\n    }\n  });\n}; // Return top-level fields. Returns `null` if field doesn't exist\n\n\nvar resolveField = function resolveField(dagNode, field) {\n  switch (field) {\n    case 'version':\n      return dagNode.version;\n\n    case 'timestamp':\n      return dagNode.timestamp;\n\n    case 'difficulty':\n      return dagNode.bits;\n\n    case 'nonce':\n      return dagNode.nonce;\n\n    case 'parent':\n      return {\n        '/': util.hashToCid(dagNode.prevHash)\n      };\n\n    case 'tx':\n      return {\n        '/': util.hashToCid(dagNode.merkleRoot)\n      };\n\n    default:\n      return null;\n  }\n};\n\nmodule.exports = {\n  multicodec: 'bitcoin-block',\n  defaultHashAlg: 'dbl-sha2-256',\n  resolve: resolve,\n  tree: tree\n};","var hash = exports;\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac'); // Proxy hash functions to the main object\n\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;","var types = {\n  Array: function (_Array) {\n    function Array(_x) {\n      return _Array.apply(this, arguments);\n    }\n\n    Array.toString = function () {\n      return _Array.toString();\n    };\n\n    return Array;\n  }(function (value) {\n    return value !== null && value !== undefined && value.constructor === Array;\n  }),\n  Boolean: function Boolean(value) {\n    return typeof value === 'boolean';\n  },\n  Function: function Function(value) {\n    return typeof value === 'function';\n  },\n  Nil: function Nil(value) {\n    return value === undefined || value === null;\n  },\n  Number: function Number(value) {\n    return typeof value === 'number';\n  },\n  Object: function Object(value) {\n    return typeof value === 'object';\n  },\n  String: function String(value) {\n    return typeof value === 'string';\n  },\n  '': function _() {\n    return true;\n  } // TODO: deprecate\n\n};\ntypes.Null = types.Nil;\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t;\n  }.bind(null, typeName);\n}\n\nmodule.exports = types;","var Buffer = require('safe-buffer').Buffer;\n\nvar bcrypto = require('./crypto');\n\nvar bscript = require('./script');\n\nvar bufferutils = require('./bufferutils');\n\nvar opcodes = require('bitcoin-ops');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar varuint = require('varuint-bitcoin');\n\nfunction varSliceSize(someScript) {\n  var length = someScript.length;\n  return varuint.encodingLength(length) + length;\n}\n\nfunction vectorSize(someVector) {\n  var length = someVector.length;\n  return varuint.encodingLength(length) + someVector.reduce(function (sum, witness) {\n    return sum + varSliceSize(witness);\n  }, 0);\n}\n\nfunction Transaction() {\n  this.version = 1;\n  this.locktime = 0;\n  this.ins = [];\n  this.outs = [];\n}\n\nTransaction.DEFAULT_SEQUENCE = 0xffffffff;\nTransaction.SIGHASH_ALL = 0x01;\nTransaction.SIGHASH_NONE = 0x02;\nTransaction.SIGHASH_SINGLE = 0x03;\nTransaction.SIGHASH_ANYONECANPAY = 0x80;\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00;\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01;\nvar EMPTY_SCRIPT = Buffer.allocUnsafe(0);\nvar EMPTY_WITNESS = [];\nvar ZERO = Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex');\nvar ONE = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex');\nvar VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\nvar BLANK_OUTPUT = {\n  script: EMPTY_SCRIPT,\n  valueBuffer: VALUE_UINT64_MAX\n};\n\nTransaction.fromBuffer = function (buffer, __noStrict) {\n  var offset = 0;\n\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n\n  function readUInt32() {\n    var i = buffer.readUInt32LE(offset);\n    offset += 4;\n    return i;\n  }\n\n  function readInt32() {\n    var i = buffer.readInt32LE(offset);\n    offset += 4;\n    return i;\n  }\n\n  function readUInt64() {\n    var i = bufferutils.readUInt64LE(buffer, offset);\n    offset += 8;\n    return i;\n  }\n\n  function readVarInt() {\n    var vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n\n  function readVector() {\n    var count = readVarInt();\n    var vector = [];\n\n    for (var i = 0; i < count; i++) {\n      vector.push(readVarSlice());\n    }\n\n    return vector;\n  }\n\n  var tx = new Transaction();\n  tx.version = readInt32();\n  var marker = buffer.readUInt8(offset);\n  var flag = buffer.readUInt8(offset + 1);\n  var hasWitnesses = false;\n\n  if (marker === Transaction.ADVANCED_TRANSACTION_MARKER && flag === Transaction.ADVANCED_TRANSACTION_FLAG) {\n    offset += 2;\n    hasWitnesses = true;\n  }\n\n  var vinLen = readVarInt();\n\n  for (var i = 0; i < vinLen; ++i) {\n    tx.ins.push({\n      hash: readSlice(32),\n      index: readUInt32(),\n      script: readVarSlice(),\n      sequence: readUInt32(),\n      witness: EMPTY_WITNESS\n    });\n  }\n\n  var voutLen = readVarInt();\n\n  for (i = 0; i < voutLen; ++i) {\n    tx.outs.push({\n      value: readUInt64(),\n      script: readVarSlice()\n    });\n  }\n\n  if (hasWitnesses) {\n    for (i = 0; i < vinLen; ++i) {\n      tx.ins[i].witness = readVector();\n    } // was this pointless?\n\n\n    if (!tx.hasWitnesses()) throw new Error('Transaction has superfluous witness data');\n  }\n\n  tx.locktime = readUInt32();\n  if (__noStrict) return tx;\n  if (offset !== buffer.length) throw new Error('Transaction has unexpected data');\n  return tx;\n};\n\nTransaction.fromHex = function (hex) {\n  return Transaction.fromBuffer(Buffer.from(hex, 'hex'));\n};\n\nTransaction.isCoinbaseHash = function (buffer) {\n  typeforce(types.Hash256bit, buffer);\n\n  for (var i = 0; i < 32; ++i) {\n    if (buffer[i] !== 0) return false;\n  }\n\n  return true;\n};\n\nTransaction.prototype.isCoinbase = function () {\n  return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash);\n};\n\nTransaction.prototype.addInput = function (hash, index, sequence, scriptSig) {\n  typeforce(types.tuple(types.Hash256bit, types.UInt32, types.maybe(types.UInt32), types.maybe(types.Buffer)), arguments);\n\n  if (types.Null(sequence)) {\n    sequence = Transaction.DEFAULT_SEQUENCE;\n  } // Add the input and return the input's index\n\n\n  return this.ins.push({\n    hash: hash,\n    index: index,\n    script: scriptSig || EMPTY_SCRIPT,\n    sequence: sequence,\n    witness: EMPTY_WITNESS\n  }) - 1;\n};\n\nTransaction.prototype.addOutput = function (scriptPubKey, value) {\n  typeforce(types.tuple(types.Buffer, types.Satoshi), arguments); // Add the output and return the output's index\n\n  return this.outs.push({\n    script: scriptPubKey,\n    value: value\n  }) - 1;\n};\n\nTransaction.prototype.hasWitnesses = function () {\n  return this.ins.some(function (x) {\n    return x.witness.length !== 0;\n  });\n};\n\nTransaction.prototype.weight = function () {\n  var base = this.__byteLength(false);\n\n  var total = this.__byteLength(true);\n\n  return base * 3 + total;\n};\n\nTransaction.prototype.virtualSize = function () {\n  return Math.ceil(this.weight() / 4);\n};\n\nTransaction.prototype.byteLength = function () {\n  return this.__byteLength(true);\n};\n\nTransaction.prototype.__byteLength = function (__allowWitness) {\n  var hasWitnesses = __allowWitness && this.hasWitnesses();\n\n  return (hasWitnesses ? 10 : 8) + varuint.encodingLength(this.ins.length) + varuint.encodingLength(this.outs.length) + this.ins.reduce(function (sum, input) {\n    return sum + 40 + varSliceSize(input.script);\n  }, 0) + this.outs.reduce(function (sum, output) {\n    return sum + 8 + varSliceSize(output.script);\n  }, 0) + (hasWitnesses ? this.ins.reduce(function (sum, input) {\n    return sum + vectorSize(input.witness);\n  }, 0) : 0);\n};\n\nTransaction.prototype.clone = function () {\n  var newTx = new Transaction();\n  newTx.version = this.version;\n  newTx.locktime = this.locktime;\n  newTx.ins = this.ins.map(function (txIn) {\n    return {\n      hash: txIn.hash,\n      index: txIn.index,\n      script: txIn.script,\n      sequence: txIn.sequence,\n      witness: txIn.witness\n    };\n  });\n  newTx.outs = this.outs.map(function (txOut) {\n    return {\n      script: txOut.script,\n      value: txOut.value\n    };\n  });\n  return newTx;\n};\n/**\n * Hash transaction for signing a specific input.\n *\n * Bitcoin uses a different hash for each signed transaction input.\n * This method copies the transaction, makes the necessary changes based on the\n * hashType, and then hashes the result.\n * This hash can then be used to sign the provided transaction input.\n */\n\n\nTransaction.prototype.hashForSignature = function (inIndex, prevOutScript, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer,\n  /* types.UInt8 */\n  types.Number), arguments); // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n\n  if (inIndex >= this.ins.length) return ONE; // ignore OP_CODESEPARATOR\n\n  var ourScript = bscript.compile(bscript.decompile(prevOutScript).filter(function (x) {\n    return x !== opcodes.OP_CODESEPARATOR;\n  }));\n  var txTmp = this.clone(); // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n\n  if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n    txTmp.outs = []; // ignore sequence numbers (except at inIndex)\n\n    txTmp.ins.forEach(function (input, i) {\n      if (i === inIndex) return;\n      input.sequence = 0;\n    }); // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n  } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n    if (inIndex >= this.outs.length) return ONE; // truncate outputs after\n\n    txTmp.outs.length = inIndex + 1; // \"blank\" outputs before\n\n    for (var i = 0; i < inIndex; i++) {\n      txTmp.outs[i] = BLANK_OUTPUT;\n    } // ignore sequence numbers (except at inIndex)\n\n\n    txTmp.ins.forEach(function (input, y) {\n      if (y === inIndex) return;\n      input.sequence = 0;\n    });\n  } // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n\n\n  if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n    txTmp.ins = [txTmp.ins[inIndex]];\n    txTmp.ins[0].script = ourScript; // SIGHASH_ALL: only ignore input scripts\n  } else {\n    // \"blank\" others input scripts\n    txTmp.ins.forEach(function (input) {\n      input.script = EMPTY_SCRIPT;\n    });\n    txTmp.ins[inIndex].script = ourScript;\n  } // serialize and hash\n\n\n  var buffer = Buffer.allocUnsafe(txTmp.__byteLength(false) + 4);\n  buffer.writeInt32LE(hashType, buffer.length - 4);\n\n  txTmp.__toBuffer(buffer, 0, false);\n\n  return bcrypto.hash256(buffer);\n};\n\nTransaction.prototype.hashForWitnessV0 = function (inIndex, prevOutScript, value, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32), arguments);\n  var tbuffer, toffset;\n\n  function writeSlice(slice) {\n    toffset += slice.copy(tbuffer, toffset);\n  }\n\n  function writeUInt32(i) {\n    toffset = tbuffer.writeUInt32LE(i, toffset);\n  }\n\n  function writeUInt64(i) {\n    toffset = bufferutils.writeUInt64LE(tbuffer, i, toffset);\n  }\n\n  function writeVarInt(i) {\n    varuint.encode(i, tbuffer, toffset);\n    toffset += varuint.encode.bytes;\n  }\n\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n\n  var hashOutputs = ZERO;\n  var hashPrevouts = ZERO;\n  var hashSequence = ZERO;\n\n  if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n    tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n    toffset = 0;\n    this.ins.forEach(function (txIn) {\n      writeSlice(txIn.hash);\n      writeUInt32(txIn.index);\n    });\n    hashPrevouts = bcrypto.hash256(tbuffer);\n  }\n\n  if (!(hashType & Transaction.SIGHASH_ANYONECANPAY) && (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n    tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n    toffset = 0;\n    this.ins.forEach(function (txIn) {\n      writeUInt32(txIn.sequence);\n    });\n    hashSequence = bcrypto.hash256(tbuffer);\n  }\n\n  if ((hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n    var txOutsSize = this.outs.reduce(function (sum, output) {\n      return sum + 8 + varSliceSize(output.script);\n    }, 0);\n    tbuffer = Buffer.allocUnsafe(txOutsSize);\n    toffset = 0;\n    this.outs.forEach(function (out) {\n      writeUInt64(out.value);\n      writeVarSlice(out.script);\n    });\n    hashOutputs = bcrypto.hash256(tbuffer);\n  } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE && inIndex < this.outs.length) {\n    var output = this.outs[inIndex];\n    tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n    toffset = 0;\n    writeUInt64(output.value);\n    writeVarSlice(output.script);\n    hashOutputs = bcrypto.hash256(tbuffer);\n  }\n\n  tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n  toffset = 0;\n  var input = this.ins[inIndex];\n  writeUInt32(this.version);\n  writeSlice(hashPrevouts);\n  writeSlice(hashSequence);\n  writeSlice(input.hash);\n  writeUInt32(input.index);\n  writeVarSlice(prevOutScript);\n  writeUInt64(value);\n  writeUInt32(input.sequence);\n  writeSlice(hashOutputs);\n  writeUInt32(this.locktime);\n  writeUInt32(hashType);\n  return bcrypto.hash256(tbuffer);\n};\n\nTransaction.prototype.getHash = function () {\n  return bcrypto.hash256(this.__toBuffer(undefined, undefined, false));\n};\n\nTransaction.prototype.getId = function () {\n  // transaction hash's are displayed in reverse order\n  return this.getHash().reverse().toString('hex');\n};\n\nTransaction.prototype.toBuffer = function (buffer, initialOffset) {\n  return this.__toBuffer(buffer, initialOffset, true);\n};\n\nTransaction.prototype.__toBuffer = function (buffer, initialOffset, __allowWitness) {\n  if (!buffer) buffer = Buffer.allocUnsafe(this.__byteLength(__allowWitness));\n  var offset = initialOffset || 0;\n\n  function writeSlice(slice) {\n    offset += slice.copy(buffer, offset);\n  }\n\n  function writeUInt8(i) {\n    offset = buffer.writeUInt8(i, offset);\n  }\n\n  function writeUInt32(i) {\n    offset = buffer.writeUInt32LE(i, offset);\n  }\n\n  function writeInt32(i) {\n    offset = buffer.writeInt32LE(i, offset);\n  }\n\n  function writeUInt64(i) {\n    offset = bufferutils.writeUInt64LE(buffer, i, offset);\n  }\n\n  function writeVarInt(i) {\n    varuint.encode(i, buffer, offset);\n    offset += varuint.encode.bytes;\n  }\n\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n\n  writeInt32(this.version);\n\n  var hasWitnesses = __allowWitness && this.hasWitnesses();\n\n  if (hasWitnesses) {\n    writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n    writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n  }\n\n  writeVarInt(this.ins.length);\n  this.ins.forEach(function (txIn) {\n    writeSlice(txIn.hash);\n    writeUInt32(txIn.index);\n    writeVarSlice(txIn.script);\n    writeUInt32(txIn.sequence);\n  });\n  writeVarInt(this.outs.length);\n  this.outs.forEach(function (txOut) {\n    if (!txOut.valueBuffer) {\n      writeUInt64(txOut.value);\n    } else {\n      writeSlice(txOut.valueBuffer);\n    }\n\n    writeVarSlice(txOut.script);\n  });\n\n  if (hasWitnesses) {\n    this.ins.forEach(function (input) {\n      writeVector(input.witness);\n    });\n  }\n\n  writeUInt32(this.locktime); // avoid slicing unless necessary\n\n  if (initialOffset !== undefined) return buffer.slice(initialOffset, offset);\n  return buffer;\n};\n\nTransaction.prototype.toHex = function () {\n  return this.toBuffer().toString('hex');\n};\n\nTransaction.prototype.setInputScript = function (index, scriptSig) {\n  typeforce(types.tuple(types.Number, types.Buffer), arguments);\n  this.ins[index].script = scriptSig;\n};\n\nTransaction.prototype.setWitness = function (index, witness) {\n  typeforce(types.tuple(types.Number, [types.Buffer]), arguments);\n  this.ins[index].witness = witness;\n};\n\nmodule.exports = Transaction;","'use strict';\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'; // pre-compute lookup table\n\nvar ALPHABET_MAP = {};\n\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre) {\n  var b = pre >> 25;\n  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;\n}\n\nfunction prefixChk(prefix) {\n  var chk = 1;\n\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')');\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 0x1f;\n  }\n\n  return chk;\n}\n\nfunction encode(prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');\n  prefix = prefix.toLowerCase(); // determine chk mod\n\n  var chk = prefixChk(prefix);\n  var result = prefix + '1';\n\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if (x >> 5 !== 0) throw new Error('Non 5-bit word');\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = chk >> (5 - i) * 5 & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result;\n}\n\nfunction decode(str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) throw new TypeError(str + ' too short');\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit'); // don't allow mixed case\n\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str);\n  str = lowered;\n  var split = str.lastIndexOf('1');\n  if (split === -1) throw new Error('No separator character for ' + str);\n  if (split === 0) throw new Error('Missing prefix for ' + str);\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) throw new Error('Data too short');\n  var chk = prefixChk(prefix);\n  var words = [];\n\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) throw new Error('Unknown character ' + c);\n    chk = polymodStep(chk) ^ v; // not in the checksum?\n\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str);\n  return {\n    prefix: prefix,\n    words: words\n  };\n}\n\nfunction convert(data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n  var result = [];\n\n  for (var i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding');\n    if (value << outBits - bits & maxV) throw new Error('Non-zero padding');\n  }\n\n  return result;\n}\n\nfunction toWords(bytes) {\n  return convert(bytes, 8, 5, true);\n}\n\nfunction fromWords(words) {\n  return convert(words, 5, 8, false);\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n};","var embed = require('./embed');\n\nvar p2ms = require('./p2ms');\n\nvar p2pk = require('./p2pk');\n\nvar p2pkh = require('./p2pkh');\n\nvar p2sh = require('./p2sh');\n\nvar p2wpkh = require('./p2wpkh');\n\nvar p2wsh = require('./p2wsh');\n\nmodule.exports = {\n  embed: embed,\n  p2ms: p2ms,\n  p2pk: p2pk,\n  p2pkh: p2pkh,\n  p2sh: p2sh,\n  p2wpkh: p2wpkh,\n  p2wsh: p2wsh // TODO\n  // witness commitment\n\n};","module.exports = {\n  input: require('./input'),\n  output: require('./output')\n};","module.exports = {\n  input: require('./input'),\n  output: require('./output')\n};","module.exports = {\n  input: require('./input'),\n  output: require('./output')\n};","'use strict';\n\nvar util = require('./util');\n/**\n * @callback ResolveCallback\n * @param {?Error} error - Error if path can't be resolved\n * @param {Object} result - Result of the path it it was resolved successfully\n * @param {*} result.value - Value the path resolves to\n * @param {string} result.remainderPath - If the path resolves half-way to a\n *   link, then the `remainderPath` is the part after the link that can be used\n *   for further resolving.\n */\n\n/**\n * Resolves a path in a Zcash block.\n *\n * Returns the value or a link and the partial mising path. This way the\n * IPLD Resolver can fetch the link and continue to resolve.\n *\n * @param {Buffer} binaryBlob - Binary representation of a Zcash block\n * @param {string} [path='/'] - Path that should be resolved\n * @param {ResolveCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nvar resolve = function resolve(binaryBlob, path, callback) {\n  if (typeof path === 'function') {\n    callback = path;\n    path = undefined;\n  }\n\n  util.deserialize(binaryBlob, function (err, dagNode) {\n    if (err) {\n      return callback(err);\n    } // Return the deserialized block if no path is given\n\n\n    if (!path) {\n      return callback(null, {\n        value: dagNode,\n        remainderPath: ''\n      });\n    }\n\n    var pathArray = path.split('/');\n    var value = resolveField(dagNode, pathArray[0]);\n\n    if (value === null) {\n      return callback(new Error('No such path'), null);\n    }\n\n    var remainderPath = pathArray.slice(1).join('/'); // It is a link, hence it may have a remainder\n\n    if (value['/'] !== undefined) {\n      return callback(null, {\n        value: value,\n        remainderPath: remainderPath\n      });\n    } else {\n      if (remainderPath.length > 0) {\n        return callback(new Error('No such path'), null);\n      } else {\n        return callback(null, {\n          value: value,\n          remainderPath: ''\n        });\n      }\n    }\n  });\n};\n/**\n * @callback TreeCallback\n * @param {?Error} error - Error if paths can't be retreived\n * @param {string[] | Object.<string, *>[]} result - The result depends on\n *   `options.values`, whether it returns only the paths, or the paths with\n *   the corresponding values\n */\n\n/**\n * Return all available paths of a block.\n *\n * @param {Buffer} binaryBlob - Binary representation of a Zcash block\n * @param {Object} [options] - Possible options\n * @param {boolean} [options.values=false] - Retun only the paths by default.\n *   If it is `true` also return the values\n * @param {TreeCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nvar tree = function tree(binaryBlob, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  util.deserialize(binaryBlob, function (err, dagNode) {\n    if (err) {\n      return callback(err);\n    }\n\n    var paths = ['version', 'timestamp', 'difficulty', 'nonce', 'solution', 'reserved', 'parent', 'tx'];\n\n    if (options.values === true) {\n      var pathValues = {};\n\n      for (var _i = 0; _i < paths.length; _i++) {\n        var path = paths[_i];\n        pathValues[path] = resolveField(dagNode, path);\n      }\n\n      return callback(null, pathValues);\n    } else {\n      return callback(null, paths);\n    }\n  });\n}; // Return top-level fields. Returns `null` if field doesn't exist\n\n\nvar resolveField = function resolveField(header, field) {\n  switch (field) {\n    case 'version':\n      return header.version;\n\n    case 'timestamp':\n      return header.time;\n\n    case 'difficulty':\n      return header.bits;\n\n    case 'nonce':\n      return header.nonce;\n\n    case 'solution':\n      return header.solution;\n\n    case 'reserved':\n      return header.reserved;\n\n    case 'parent':\n      return {\n        '/': util.hashToCid(header.prevHash)\n      };\n\n    case 'tx':\n      return {\n        '/': util.hashToCid(header.merkleRoot)\n      };\n\n    default:\n      return null;\n  }\n};\n\nmodule.exports = {\n  multicodec: 'zcash-block',\n  defaultHashAlg: 'dbl-sha2-256',\n  resolve: resolve,\n  tree: tree\n};","'use strict';\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes');\nexports.createHash = exports.Hash = require('create-hash');\nexports.createHmac = exports.Hmac = require('create-hmac');\n\nvar algos = require('browserify-sign/algos');\n\nvar algoKeys = Object.keys(algos);\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys);\n\nexports.getHashes = function () {\n  return hashes;\n};\n\nvar p = require('pbkdf2');\n\nexports.pbkdf2 = p.pbkdf2;\nexports.pbkdf2Sync = p.pbkdf2Sync;\n\nvar aes = require('browserify-cipher');\n\nexports.Cipher = aes.Cipher;\nexports.createCipher = aes.createCipher;\nexports.Cipheriv = aes.Cipheriv;\nexports.createCipheriv = aes.createCipheriv;\nexports.Decipher = aes.Decipher;\nexports.createDecipher = aes.createDecipher;\nexports.Decipheriv = aes.Decipheriv;\nexports.createDecipheriv = aes.createDecipheriv;\nexports.getCiphers = aes.getCiphers;\nexports.listCiphers = aes.listCiphers;\n\nvar dh = require('diffie-hellman');\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup;\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;\nexports.getDiffieHellman = dh.getDiffieHellman;\nexports.createDiffieHellman = dh.createDiffieHellman;\nexports.DiffieHellman = dh.DiffieHellman;\n\nvar sign = require('browserify-sign');\n\nexports.createSign = sign.createSign;\nexports.Sign = sign.Sign;\nexports.createVerify = sign.createVerify;\nexports.Verify = sign.Verify;\nexports.createECDH = require('create-ecdh');\n\nvar publicEncrypt = require('public-encrypt');\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt;\nexports.privateEncrypt = publicEncrypt.privateEncrypt;\nexports.publicDecrypt = publicEncrypt.publicDecrypt;\nexports.privateDecrypt = publicEncrypt.privateDecrypt; // the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill');\n\nexports.randomFill = rf.randomFill;\nexports.randomFillSync = rf.randomFillSync;\n\nexports.createCredentials = function () {\n  throw new Error(['sorry, createCredentials is not implemented yet', 'we accept pull requests', 'https://github.com/crypto-browserify/crypto-browserify'].join('\\n'));\n};\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n};","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');","var bn = require('bn.js');\n\nvar randomBytes = require('randombytes');\n\nmodule.exports = crt;\n\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus)).redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder: r.invm(priv.modulus)\n  };\n}\n\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\n\ncrt.getr = getr;\n\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n\n  while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n\n  return r;\n}","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('./util/preconditions');\n\nvar BufferUtil = require('./util/buffer');\n\nvar JSUtil = require('./util/js');\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof num + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n  return this;\n}\n\nOpcode.fromBuffer = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function (num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function (str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function () {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function () {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function () {\n  return this.num;\n};\n\nOpcode.prototype.toString = function () {\n  var str = Opcode.reverseMap[this.num];\n\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n\n  return str;\n};\n\nOpcode.smallInt = function (n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n  OP_WITHIN: 165,\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n} // Easier access to opcodes\n\n\n_.extend(Opcode, Opcode.map);\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\n\n\nOpcode.isSmallIntOp = function (opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n\n  return opcode === Opcode.map.OP_0 || opcode >= Opcode.map.OP_1 && opcode <= Opcode.map.OP_16;\n};\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\n\n\nOpcode.prototype.inspect = function () {\n  return '<Opcode: ' + this.toString() + ', hex: ' + this.toHex() + ', decimal: ' + this.num + '>';\n};\n\nmodule.exports = Opcode;","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar buffer = require('buffer');\n\nvar compare = Buffer.compare || require('buffer-compare');\n\nvar errors = require('../errors');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar BufferReader = require('../encoding/bufferreader');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Hash = require('../crypto/hash');\n\nvar Signature = require('../crypto/signature');\n\nvar Sighash = require('./sighash');\n\nvar Address = require('../address');\n\nvar UnspentOutput = require('./unspentoutput');\n\nvar Input = require('./input');\n\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\n\nvar Output = require('./output');\n\nvar Script = require('../script');\n\nvar PrivateKey = require('../privatekey');\n\nvar BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\n\n\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000; // Minimum amount for an output for it not to be considered a dust output\n\nTransaction.DUST_AMOUNT = 546; // Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\n\nTransaction.FEE_SECURITY_MARGIN = 15; // max amount of satoshis in circulation\n\nTransaction.MAX_MONEY = 21000000 * 1e8; // nlocktime limit to be considered block height rather than a timestamp\n\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8; // Max value for an unsigned 32 bit value\n\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295; // Value used for fee estimation (satoshis per kilobyte)\n\nTransaction.FEE_PER_KB = 10000; // Safe upper bound for change address script size in bytes\n\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\n\nTransaction.shallowCopy = function (transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\n\nioProperty.get = function () {\n  return this._getOutputAmount();\n};\n\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\n\nTransaction.prototype._getHash = function () {\n  return Hash.sha256sha256(this.toBuffer());\n};\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\n\n\nTransaction.prototype.serialize = function (unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function () {\n  return this.toBuffer().toString('hex');\n};\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\n\n\nTransaction.prototype.checkedSerialize = function (opts) {\n  var serializationError = this.getSerializationError(opts);\n\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' + 'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function () {\n  var invalid = false;\n\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n\n  return invalid;\n};\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\n\n\nTransaction.prototype.getSerializationError = function (opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n\n  var unspentError;\n\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError || this._hasDustOutputs(opts) || this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function (opts, unspent) {\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different('Unspent value is ' + unspent + ' but specified fee is ' + this._fee);\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing('Fee is too large and no change address was provided');\n      }\n\n      return new errors.Transaction.FeeError.TooLarge('expected less than ' + maximumFee + ' but got ' + unspent);\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall('expected more than ' + minimumFee + ' but got ' + unspent);\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function () {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function (opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n\n  var index, output;\n\n  for (index in this.outputs) {\n    output = this.outputs[index];\n\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function (opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function () {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function () {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function (writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n\n  _.each(this.inputs, function (input) {\n    input.toBufferWriter(writer);\n  });\n\n  writer.writeVarintNum(this.outputs.length);\n\n  _.each(this.outputs, function (output) {\n    output.toBufferWriter(writer);\n  });\n\n  writer.writeUInt32LE(this.nLockTime);\n\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n\n    _.each(this.joinSplits, function (jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function (buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function (reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n\n  sizeTxOuts = reader.readVarintNum();\n\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n\n  this.nLockTime = reader.readUInt32LE();\n\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function (input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function (output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function (joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n\n  _.each(transaction.inputs, function (input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n\n    var script = new Script(input.output.script);\n    var txin;\n\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(input, input.publicKeys, input.threshold, input.signatures);\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n\n    self.addInput(txin);\n  });\n\n  _.each(transaction.outputs, function (output) {\n    self.addOutput(new Output(output));\n  });\n\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function (joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n\n  this._checkConsistency(arg);\n\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function (arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() === this._changeScript.toString());\n  }\n\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\n\n\nTransaction.prototype.lockUntilDate = function (time) {\n  $.checkArgument(time);\n\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\n\n\nTransaction.prototype.lockUntilBlockHeight = function (height) {\n  $.checkArgument(_.isNumber(height));\n\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = height;\n  return this;\n};\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\n\n\nTransaction.prototype.getLockTime = function () {\n  if (!this.nLockTime) {\n    return null;\n  }\n\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function (string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function () {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\n\n\nTransaction.prototype.from = function (utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n\n    _.each(utxo, function (utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n\n    return this;\n  }\n\n  var exists = _.any(this.inputs, function (input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n\n  if (exists) {\n    return this;\n  }\n\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function (utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function (utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length, 'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\n\n\nTransaction.prototype.addInput = function (input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n\n  return this.uncheckedAddInput(input);\n};\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\n\n\nTransaction.prototype.uncheckedAddInput = function (input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n\n  this._updateChangeOutput();\n\n  return this;\n};\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\n\n\nTransaction.prototype.hasAllUtxoInfo = function () {\n  return _.all(this.inputs.map(function (input) {\n    return !!input.output;\n  }));\n};\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.fee = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n\n  this._updateChangeOutput();\n\n  return this;\n};\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.feePerKb = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n\n  this._updateChangeOutput();\n\n  return this;\n};\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.change = function (address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n\n  this._updateChangeOutput();\n\n  return this;\n};\n/**\n * @return {Output} change output, if it exists\n */\n\n\nTransaction.prototype.getChangeOutput = function () {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n\n  return null;\n};\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.to = function (address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n\n    _.each(address, function (to) {\n      self.to(to.address, to.satoshis);\n    });\n\n    return this;\n  }\n\n  $.checkArgument(JSUtil.isNaturalNumber(amount), 'Amount is expected to be a positive integer');\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.addData = function (value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.addOutput = function (output) {\n  $.checkArgumentType(output, Output, 'output');\n\n  this._addOutput(output);\n\n  this._updateChangeOutput();\n\n  return this;\n};\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.clearOutputs = function () {\n  this.outputs = [];\n\n  this._clearSignatures();\n\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n\n  this._updateChangeOutput();\n\n  return this;\n};\n\nTransaction.prototype._addOutput = function (output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\n\n\nTransaction.prototype._getOutputAmount = function () {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n\n    _.each(this.outputs, function (output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n\n  return this._outputAmount;\n};\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\n\n\nTransaction.prototype._getInputAmount = function () {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n\n    _.each(this.inputs, function (input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function () {\n  if (!this._changeScript) {\n    return;\n  }\n\n  this._clearSignatures();\n\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n\n  var available = this._getUnspentValue();\n\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\n\n\nTransaction.prototype.getFee = function () {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  } // if no change output is set, fees should equal all the unspent amount\n\n\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n\n  return this._estimateFee();\n};\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\n\n\nTransaction.prototype._estimateFee = function () {\n  var estimatedSize = this._estimateSize();\n\n  var available = this._getUnspentValue();\n\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function () {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function () {\n  _.each(this.inputs, function (input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function (size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function () {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n\n  _.each(this.inputs, function (input) {\n    result += input._estimateSize();\n  });\n\n  _.each(this.outputs, function (output) {\n    result += output.script.toBuffer().length + 9;\n  });\n\n  return result;\n};\n\nTransaction.prototype._removeOutput = function (index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function (index) {\n  this._removeOutput(index);\n\n  this._updateChangeOutput();\n};\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\n\n\nTransaction.prototype.sort = function () {\n  this.sortInputs(function (inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function (first, second) {\n      return compare(first.prevTxId, second.prevTxId) || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function (outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function (first, second) {\n      return first.satoshis - second.satoshis || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\n\n\nTransaction.prototype.shuffleOutputs = function () {\n  return this.sortOutputs(_.shuffle);\n};\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\n\n\nTransaction.prototype.sortOutputs = function (sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\n\n\nTransaction.prototype.sortInputs = function (sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n\n  this._clearSignatures();\n\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function (newOutputs) {\n  var isInvalidSorting = this.outputs.length !== newOutputs.length || _.difference(this.outputs, newOutputs).length !== 0;\n\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function (txId, outputIndex) {\n  var index;\n\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function (input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n\n  this._updateChangeOutput();\n};\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.sign = function (privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function (privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n\n    return this;\n  }\n\n  _.each(this.getSignatures(privateKey, sigtype), function (signature) {\n    self.applySignature(signature);\n  });\n\n  return this;\n};\n\nTransaction.prototype.getSignatures = function (privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function (signature) {\n      results.push(signature);\n    });\n  });\n\n  return results;\n};\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\n\n\nTransaction.prototype.applySignature = function (signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function () {\n  _.each(this.inputs, function (input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature('Unrecognized script kind, or not enough information to execute script.' + 'This usually happens when creating a transaction from a serialized transaction');\n    }\n  });\n\n  return _.all(_.map(this.inputs, function (input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function (signature) {\n  var self = this;\n\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature('Unrecognized script kind, or not enough information to execute script.' + 'This usually happens when creating a transaction from a serialized transaction');\n  }\n\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\n\n\nTransaction.prototype.verifySignature = function (sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\n\n\nTransaction.prototype.verify = function () {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  } // Check for negative or overflow output values\n\n\n  var valueoutbn = new BN(0);\n\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  } // Size limits\n\n\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  } // Check for duplicate inputs\n\n\n  var txinmap = {};\n\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\n\n\nTransaction.prototype.isCoinbase = function () {\n  return this.inputs.length === 1 && this.inputs[0].isNull();\n};\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\n\n\nTransaction.prototype.isRBF = function () {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\n\n\nTransaction.prototype.enableRBF = function () {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = Transaction;","module.exports = require('./input');\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');","'use strict';\n\nvar _ = require('lodash');\n\nvar errors = require('./errors');\n\nvar $ = require('./util/preconditions');\n\nvar UNITS = {\n  'BTC': [1e8, 8],\n  'mBTC': [1e5, 5],\n  'uBTC': [1e2, 2],\n  'bits': [1e2, 2],\n  'satoshis': [1, 0]\n};\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTC}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTC/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTC(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTC);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btc = new Unit(1.3, Unit.bits).BTC;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\n\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  } // convert fiat to BTC\n\n\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n\n    amount = amount / code;\n    code = Unit.BTC;\n  }\n\n  this._value = this._from(amount, code);\n  var self = this;\n\n  var defineAccesor = function defineAccesor(key) {\n    Object.defineProperty(self, key, {\n      get: function get() {\n        return self.to(key);\n      },\n      enumerable: true\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function (key) {\n  Unit[key] = key;\n});\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\n\nUnit.fromObject = function fromObject(data) {\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n/**\n * Returns a Unit instance created from an amount in BTC\n *\n * @param {Number} amount - The amount in BTC\n * @returns {Unit} A Unit instance\n */\n\n\nUnit.fromBTC = function (amount) {\n  return new Unit(amount, Unit.BTC);\n};\n/**\n * Returns a Unit instance created from an amount in mBTC\n *\n * @param {Number} amount - The amount in mBTC\n * @returns {Unit} A Unit instance\n */\n\n\nUnit.fromMillis = Unit.fromMilis = function (amount) {\n  return new Unit(amount, Unit.mBTC);\n};\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\n\n\nUnit.fromMicros = Unit.fromBits = function (amount) {\n  return new Unit(amount, Unit.bits);\n};\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\n\n\nUnit.fromSatoshis = function (amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTC/fiat\n * @returns {Unit} A Unit instance\n */\n\n\nUnit.fromFiat = function (amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function (amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\n\n\nUnit.prototype.to = function (code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n\n    return parseFloat((this.BTC * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n/**\n * Returns the value represented in BTC\n *\n * @returns {Number} The value converted to BTC\n */\n\n\nUnit.prototype.toBTC = function () {\n  return this.to(Unit.BTC);\n};\n/**\n * Returns the value represented in mBTC\n *\n * @returns {Number} The value converted to mBTC\n */\n\n\nUnit.prototype.toMillis = Unit.prototype.toMilis = function () {\n  return this.to(Unit.mBTC);\n};\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\n\n\nUnit.prototype.toMicros = Unit.prototype.toBits = function () {\n  return this.to(Unit.bits);\n};\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\n\n\nUnit.prototype.toSatoshis = function () {\n  return this.to(Unit.satoshis);\n};\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTC/currency\n * @returns {Number} The value converted to satoshis\n */\n\n\nUnit.prototype.atRate = function (rate) {\n  return this.to(rate);\n};\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\n\n\nUnit.prototype.toString = function () {\n  return this.satoshis + ' satoshis';\n};\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\n\n\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTC,\n    code: Unit.BTC\n  };\n};\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\n\n\nUnit.prototype.inspect = function () {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;","'use strict';\n\nmodule.exports = {\n  _cache: {},\n  _count: 0,\n  _eraseIndex: 0,\n  _usedList: {},\n  _usedIndex: {},\n  _CACHE_SIZE: 5000,\n  get: function get(xkey, number, hardened) {\n    hardened = !!hardened;\n    var key = xkey + '/' + number + '/' + hardened;\n\n    if (this._cache[key]) {\n      this._cacheHit(key);\n\n      return this._cache[key];\n    }\n  },\n  set: function set(xkey, number, hardened, derived) {\n    hardened = !!hardened;\n    var key = xkey + '/' + number + '/' + hardened;\n    this._cache[key] = derived;\n\n    this._cacheHit(key);\n  },\n  _cacheHit: function _cacheHit(key) {\n    if (this._usedIndex[key]) {\n      delete this._usedList[this._usedIndex[key]];\n    }\n\n    this._usedList[this._count] = key;\n    this._usedIndex[key] = this._count;\n    this._count++;\n\n    this._cacheRemove();\n  },\n  _cacheRemove: function _cacheRemove() {\n    while (this._eraseIndex < this._count - this._CACHE_SIZE) {\n      if (this._usedList[this._eraseIndex]) {\n        var removeKey = this._usedList[this._eraseIndex];\n        delete this._usedIndex[removeKey];\n        delete this._cache[removeKey];\n      }\n\n      delete this._usedList[this._eraseIndex];\n      this._eraseIndex++;\n    }\n  }\n};","'use strict';\n\nvar each = require('async/each');\n\nvar waterfall = require('async/waterfall');\n\nvar asyncify = require('async/asyncify');\n\nvar rlp = require('rlp');\n\nvar EthTrieNode = require('merkle-patricia-tree/trieNode');\n\nvar cidFromHash = require('./cidFromHash'); // const createBaseTrieResolver = require('./createBaseTrieResolver.js')\n\n\nvar createResolver = require('./createResolver');\n\nvar isExternalLink = require('./isExternalLink');\n\nvar createUtil = require('./createUtil');\n\nvar createIsLink = require('./createIsLink');\n\nvar cidFromEthObj = require('./cidFromEthObj');\n\nmodule.exports = createTrieResolver;\n\nfunction createTrieResolver(multicodec, leafResolver) {\n  var baseTrie = createResolver(multicodec, EthTrieNode, mapFromEthObj);\n  baseTrie.util.deserialize = asyncify(function (serialized) {\n    var rawNode = rlp.decode(serialized);\n    var trieNode = new EthTrieNode(rawNode);\n    return trieNode;\n  });\n  return baseTrie; // create map using both baseTrie and leafResolver\n\n  function mapFromEthObj(trieNode, options, callback) {\n    // expand from merkle-patricia-tree using leafResolver\n    mapFromBaseTrie(trieNode, options, function (err, basePaths) {\n      if (err) return callback(err);\n      if (!leafResolver) return callback(null, basePaths); // expand children\n\n      var paths = basePaths.slice();\n      var leafTerminatingPaths = basePaths.filter(function (child) {\n        return Buffer.isBuffer(child.value);\n      });\n      each(leafTerminatingPaths, function (child, cb) {\n        return waterfall([function (cb) {\n          return leafResolver.util.deserialize(child.value, cb);\n        }, function (ethObj, cb) {\n          return leafResolver.resolver._mapFromEthObject(ethObj, options, cb);\n        }], function (err, grandChildren) {\n          if (err) return cb(err); // add prefix to grandchildren\n\n          grandChildren.forEach(function (grandChild) {\n            paths.push({\n              path: child.path + '/' + grandChild.path,\n              value: grandChild.value\n            });\n          });\n          cb();\n        });\n      }, function (err) {\n        if (err) return callback(err);\n        callback(null, paths);\n      });\n    });\n  } // create map from merkle-patricia-tree nodes\n\n\n  function mapFromBaseTrie(trieNode, options, callback) {\n    var paths = [];\n\n    if (trieNode.type === 'leaf') {\n      // leaf nodes resolve to their actual value\n      paths.push({\n        path: nibbleToPath(trieNode.getKey()),\n        value: trieNode.getValue()\n      });\n    }\n\n    each(trieNode.getChildren(), function (childData, next) {\n      var key = nibbleToPath(childData[0]);\n      var value = childData[1];\n\n      if (EthTrieNode.isRawNode(value)) {\n        // inline child root\n        var childNode = new EthTrieNode(value);\n        paths.push({\n          path: key,\n          value: childNode\n        }); // inline child non-leaf subpaths\n\n        mapFromBaseTrie(childNode, options, function (err, subtree) {\n          if (err) return next(err);\n          subtree.forEach(function (path) {\n            path.path = key + '/' + path.path;\n          });\n          paths = paths.concat(subtree);\n          next();\n        });\n      } else {\n        // other nodes link by hash\n        var link = {\n          '/': cidFromHash(multicodec, value).toBaseEncodedString()\n        };\n        paths.push({\n          path: key,\n          value: link\n        });\n        next();\n      }\n    }, function (err) {\n      if (err) return callback(err);\n      callback(null, paths);\n    });\n  }\n}\n\nfunction nibbleToPath(data) {\n  return data.map(function (num) {\n    return num.toString(16);\n  }).join('/');\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (coll, iteratee, callback) {\n  var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;\n  eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);\n};\n\nvar _isArrayLike = require('lodash/isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _breakLoop = require('./internal/breakLoop');\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nvar _eachOfLimit = require('./eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _doLimit = require('./internal/doLimit');\n\nvar _doLimit2 = _interopRequireDefault(_doLimit);\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // eachOf implementation optimized for array-likes\n\n\nfunction eachOfArrayLike(coll, iteratee, callback) {\n  callback = (0, _once2.default)(callback || _noop2.default);\n  var index = 0,\n      completed = 0,\n      length = coll.length;\n\n  if (length === 0) {\n    callback(null);\n  }\n\n  function iteratorCallback(err, value) {\n    if (err) {\n      callback(err);\n    } else if (++completed === length || value === _breakLoop2.default) {\n      callback(null);\n    }\n  }\n\n  for (; index < length; index++) {\n    iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));\n  }\n} // a generic version of eachOf which can handle array, object, and iterator cases.\n\n\nvar eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, Infinity);\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\n\nmodule.exports = exports['default'];","'use strict';\n\nvar BitcoinjsBlock = require('bitcoinjs-lib').Block;\n\nvar CID = require('cids');\n\nvar multihashes = require('multihashes');\n\nvar multihashing = require('multihashing-async');\n\nvar waterfall = require('async/waterfall');\n\nvar BITCOIN_BLOCK_HEADER_SIZE = 80;\n/**\n * @callback SerializeCallback\n * @param {?Error} error - Error if serialization failed\n * @param {?Buffer} binaryBlob - Binary Bitcoin block if serialization was\n *   successful\n */\n\n/**\n * Serialize internal representation into a binary Bitcoin block.\n *\n * @param {BitcoinBlock} dagNode - Internal representation of a Bitcoin block\n * @param {SerializeCallback} callback - Callback that handles the\n *   return value\n * @returns {void}\n */\n\nvar serialize = function serialize(dagNode, callback) {\n  var err = null;\n  var binaryBlob;\n\n  try {\n    binaryBlob = dagNode.toBuffer(true);\n  } catch (serializeError) {\n    err = serializeError;\n  } finally {\n    callback(err, binaryBlob);\n  }\n};\n/**\n * @callback DeserializeCallback\n * @param {?Error} error - Error if deserialization failed\n * @param {?BitcoinBlock} dagNode - Internal representation of a Bitcoin block\n *   if deserialization was successful\n */\n\n/**\n * Deserialize Bitcoin block into the internal representation,\n *\n * @param {Buffer} binaryBlob - Binary representation of a Bitcoin block\n * @param {DeserializeCallback} callback - Callback that handles the\n *   return value\n * @returns {void}\n */\n\n\nvar deserialize = function deserialize(binaryBlob, callback) {\n  if (binaryBlob.length !== BITCOIN_BLOCK_HEADER_SIZE) {\n    var err = new Error(\"Bitcoin block header needs to be \".concat(BITCOIN_BLOCK_HEADER_SIZE, \" bytes\"));\n    return callback(err);\n  }\n\n  var dagNode = BitcoinjsBlock.fromBuffer(binaryBlob);\n  callback(null, dagNode);\n};\n/**\n * @callback CidCallback\n * @param {?Error} error - Error if getting the CID failed\n * @param {?CID} cid - CID if call was successful\n */\n\n/**\n * Get the CID of the DAG-Node.\n *\n * @param {BitcoinBlock} dagNode - Internal representation of a Bitcoin block\n * @param {Object} [options] - Options to create the CID\n * @param {number} [options.version=1] - CID version number\n * @param {string} [options.hashAlg='dbl-sha2-256'] - Hashing algorithm\n * @param {CidCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nvar cid = function cid(dagNode, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {}; // avoid deadly embrace between resolver and util\n\n  var hashAlg = options.hashAlg || require('./resolver').defaultHashAlg;\n\n  var version = typeof options.version === 'undefined' ? 1 : options.version;\n  waterfall([function (cb) {\n    try {\n      multihashing(dagNode.toBuffer(true), hashAlg, cb);\n    } catch (err) {\n      cb(err);\n    }\n  }, function (mh, cb) {\n    return cb(null, new CID(version, 'bitcoin-block', mh));\n  }], callback);\n}; // Convert a Bitcoin hash (as Buffer) to a CID\n\n\nvar hashToCid = function hashToCid(hash) {\n  // avoid deadly embrace between resolver and util\n  var defaultHashAlg = require('./resolver').defaultHashAlg;\n\n  var multihash = multihashes.encode(hash, defaultHashAlg);\n  var cidVersion = 1;\n  var cid = new CID(cidVersion, 'bitcoin-block', multihash);\n  return cid;\n};\n\nmodule.exports = {\n  hashToCid: hashToCid,\n  BITCOIN_BLOCK_HEADER_SIZE: BITCOIN_BLOCK_HEADER_SIZE,\n  // Public API\n  cid: cid,\n  deserialize: deserialize,\n  serialize: serialize\n};","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++) {\n      res[i] = msg[i] | 0;\n    }\n\n    return res;\n  }\n\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0) msg = '0' + msg;\n\n    for (var i = 0; i < msg.length; i += 2) {\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi) res.push(hi, lo);else res.push(lo);\n    }\n  }\n\n  return res;\n}\n\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    res += zero2(msg[i].toString(16));\n  }\n\n  return res;\n}\n\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex') return toHex(arr);else return arr;\n};","var r;\n\nmodule.exports = function rand(len) {\n  if (!r) r = new Rand(null);\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\n\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n}; // Emulate crypto API using randy\n\n\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes) return this.rand.getBytes(n);\n  var res = new Uint8Array(n);\n\n  for (var i = 0; i < res.length; i++) {\n    res[i] = this.rand.getByte();\n  }\n\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    }; // Safari's WebWorkers do not have `crypto`\n\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function () {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n\n    if (typeof crypto.randomBytes !== 'function') throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {}\n}","'use strict';\n\nvar utils = require('../utils');\n\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;\n}\n\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;\n}\n\nexports.g1_256 = g1_256;","'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar shaCommon = require('./common');\n\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\nvar BlockHash = common.BlockHash;\nvar sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i++) {\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n  }\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  assert(this.k.length === W.length);\n\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};","'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = common.BlockHash;\nvar sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W; // 32 x 32bit words\n\n  for (var i = 0; i < 32; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14]; // i - 7\n\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32]; // i - 16\n\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  assert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2); // 34\n\n  var c2_hi = rotr64_hi(xl, xh, 7); // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2); // 34\n\n  var c2_lo = rotr64_lo(xl, xh, 7); // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9); // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9); // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29); // 61\n\n  var c2_hi = shr64_hi(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29); // 61\n\n  var c2_lo = shr64_lo(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}","var native = require('./native');\n\nfunction getTypeName(fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1];\n}\n\nfunction getValueTypeName(value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor);\n}\n\nfunction getValue(value) {\n  if (native.Function(value)) return '';\n  if (native.String(value)) return JSON.stringify(value);\n  if (value && native.Object(value)) return '';\n  return value;\n}\n\nfunction captureStackTrace(e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t);\n  }\n}\n\nfunction tfJSON(type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type);\n  if (native.Array(type)) return 'Array';\n  if (type && native.Object(type)) return 'Object';\n  return type !== undefined ? type : '';\n}\n\nfunction tfErrorString(type, value, valueTypeName) {\n  var valueJson = getValue(value);\n  return 'Expected ' + tfJSON(type) + ', got' + (valueTypeName !== '' ? ' ' + valueTypeName : '') + (valueJson !== '' ? ' ' + valueJson : '');\n}\n\nfunction TfTypeError(type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value);\n  this.message = tfErrorString(type, value, valueTypeName);\n  captureStackTrace(this, TfTypeError);\n  this.__type = type;\n  this.__value = value;\n  this.__valueTypeName = valueTypeName;\n}\n\nTfTypeError.prototype = Object.create(Error.prototype);\nTfTypeError.prototype.constructor = TfTypeError;\n\nfunction tfPropertyErrorString(type, label, name, value, valueTypeName) {\n  var description = '\" of type ';\n  if (label === 'key') description = '\" with key type ';\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName);\n}\n\nfunction TfPropertyTypeError(type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value);\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName);\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"';\n  }\n\n  captureStackTrace(this, TfTypeError);\n  this.__label = label;\n  this.__property = property;\n  this.__type = type;\n  this.__value = value;\n  this.__valueTypeName = valueTypeName;\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype);\nTfPropertyTypeError.prototype.constructor = TfTypeError;\n\nfunction tfCustomError(expected, actual) {\n  return new TfTypeError(expected, {}, actual);\n}\n\nfunction tfSubError(e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property;\n    e = new TfPropertyTypeError(e.__type, property, e.__label, e.__value, e.__valueTypeName); // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(e.__type, property, label, e.__value, e.__valueTypeName);\n  }\n\n  captureStackTrace(e);\n  return e;\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n};","var Buffer = require('safe-buffer').Buffer;\n\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  var length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0) throw new Error('Non-minimally encoded script number');\n    }\n  } // 40-bit\n\n\n  if (length === 5) {\n    var a = buffer.readUInt32LE(0);\n    var b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  } // 32-bit / 24-bit / 16-bit / 8-bit\n\n\n  var result = 0;\n\n  for (var i = 0; i < length; ++i) {\n    result |= buffer[i] << 8 * i;\n  }\n\n  if (buffer[length - 1] & 0x80) return -(result & ~(0x80 << 8 * (length - 1)));\n  return result;\n}\n\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff ? 5 : i > 0x7fffff ? 4 : i > 0x7fff ? 3 : i > 0x7f ? 2 : i > 0x00 ? 1 : 0;\n}\n\nfunction encode(number) {\n  var value = Math.abs(number);\n  var size = scriptNumSize(value);\n  var buffer = Buffer.allocUnsafe(size);\n  var negative = number < 0;\n\n  for (var i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n\n  return buffer;\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode\n};","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer; // Number.MAX_SAFE_INTEGER\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\nfunction checkUInt53(n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range');\n}\n\nfunction encode(number, buffer, offset) {\n  checkUInt53(number);\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(number));\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0; // 8 bit\n\n  if (number < 0xfd) {\n    buffer.writeUInt8(number, offset);\n    encode.bytes = 1; // 16 bit\n  } else if (number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(number, offset + 1);\n    encode.bytes = 3; // 32 bit\n  } else if (number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(number, offset + 1);\n    encode.bytes = 5; // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(number >>> 0, offset + 1);\n    buffer.writeUInt32LE(number / 0x100000000 | 0, offset + 5);\n    encode.bytes = 9;\n  }\n\n  return buffer;\n}\n\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  var first = buffer.readUInt8(offset); // 8 bit\n\n  if (first < 0xfd) {\n    decode.bytes = 1;\n    return first; // 16 bit\n  } else if (first === 0xfd) {\n    decode.bytes = 3;\n    return buffer.readUInt16LE(offset + 1); // 32 bit\n  } else if (first === 0xfe) {\n    decode.bytes = 5;\n    return buffer.readUInt32LE(offset + 1); // 64 bit\n  } else {\n    decode.bytes = 9;\n    var lo = buffer.readUInt32LE(offset + 1);\n    var hi = buffer.readUInt32LE(offset + 5);\n    var number = hi * 0x0100000000 + lo;\n    checkUInt53(number);\n    return number;\n  }\n}\n\nfunction encodingLength(number) {\n  checkUInt53(number);\n  return number < 0xfd ? 1 : number <= 0xffff ? 3 : number <= 0xffffffff ? 5 : 9;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  encodingLength: encodingLength\n};","var ecc = require('tiny-secp256k1');\n\nvar randomBytes = require('randombytes');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar wif = require('wif');\n\nvar NETWORKS = require('./networks');\n\nvar isOptions = typeforce.maybe(typeforce.compile({\n  compressed: types.maybe(types.Boolean),\n  network: types.maybe(types.Network)\n}));\n\nfunction ECPair(d, Q, options) {\n  options = options || {};\n  this.compressed = options.compressed === undefined ? true : options.compressed;\n  this.network = options.network || NETWORKS.bitcoin;\n  this.__d = d || null;\n  this.__Q = null;\n  if (Q) this.__Q = ecc.pointCompress(Q, this.compressed);\n}\n\nObject.defineProperty(ECPair.prototype, 'privateKey', {\n  enumerable: false,\n  get: function get() {\n    return this.__d;\n  }\n});\nObject.defineProperty(ECPair.prototype, 'publicKey', {\n  get: function get() {\n    if (!this.__Q) this.__Q = ecc.pointFromScalar(this.__d, this.compressed);\n    return this.__Q;\n  }\n});\n\nECPair.prototype.toWIF = function () {\n  if (!this.__d) throw new Error('Missing private key');\n  return wif.encode(this.network.wif, this.__d, this.compressed);\n};\n\nECPair.prototype.sign = function (hash) {\n  if (!this.__d) throw new Error('Missing private key');\n  return ecc.sign(hash, this.__d);\n};\n\nECPair.prototype.verify = function (hash, signature) {\n  return ecc.verify(hash, this.publicKey, signature);\n};\n\nfunction fromPrivateKey(buffer, options) {\n  typeforce(types.Buffer256bit, buffer);\n  if (!ecc.isPrivate(buffer)) throw new TypeError('Private key not in range [1, n)');\n  typeforce(isOptions, options);\n  return new ECPair(buffer, null, options);\n}\n\nfunction fromPublicKey(buffer, options) {\n  typeforce(ecc.isPoint, buffer);\n  typeforce(isOptions, options);\n  return new ECPair(null, buffer, options);\n}\n\nfunction fromWIF(string, network) {\n  var decoded = wif.decode(string);\n  var version = decoded.version; // list of networks?\n\n  if (types.Array(network)) {\n    network = network.filter(function (x) {\n      return version === x.wif;\n    }).pop();\n    if (!network) throw new Error('Unknown network version'); // otherwise, assume a network object (or default to bitcoin)\n  } else {\n    network = network || NETWORKS.bitcoin;\n    if (version !== network.wif) throw new Error('Invalid network version');\n  }\n\n  return fromPrivateKey(decoded.privateKey, {\n    compressed: decoded.compressed,\n    network: network\n  });\n}\n\nfunction makeRandom(options) {\n  typeforce(isOptions, options);\n  options = options || {};\n  var rng = options.rng || randomBytes;\n  var d;\n\n  do {\n    d = rng(32);\n    typeforce(types.Buffer256bit, d);\n  } while (!ecc.isPrivate(d));\n\n  return fromPrivateKey(d, options);\n}\n\nmodule.exports = {\n  makeRandom: makeRandom,\n  fromPrivateKey: fromPrivateKey,\n  fromPublicKey: fromPublicKey,\n  fromWIF: fromWIF\n};","var bs58check = require('bs58check');\n\nfunction decodeRaw(buffer, version) {\n  // check version only if defined\n  if (version !== undefined && buffer[0] !== version) throw new Error('Invalid network version'); // uncompressed\n\n  if (buffer.length === 33) {\n    return {\n      version: buffer[0],\n      privateKey: buffer.slice(1, 33),\n      compressed: false\n    };\n  } // invalid length\n\n\n  if (buffer.length !== 34) throw new Error('Invalid WIF length'); // invalid compression flag\n\n  if (buffer[33] !== 0x01) throw new Error('Invalid compression flag');\n  return {\n    version: buffer[0],\n    privateKey: buffer.slice(1, 33),\n    compressed: true\n  };\n}\n\nfunction encodeRaw(version, privateKey, compressed) {\n  var result = new Buffer(compressed ? 34 : 33);\n  result.writeUInt8(version, 0);\n  privateKey.copy(result, 1);\n\n  if (compressed) {\n    result[33] = 0x01;\n  }\n\n  return result;\n}\n\nfunction decode(string, version) {\n  return decodeRaw(bs58check.decode(string), version);\n}\n\nfunction encode(version, privateKey, compressed) {\n  if (typeof version === 'number') return bs58check.encode(encodeRaw(version, privateKey, compressed));\n  return bs58check.encode(encodeRaw(version.version, version.privateKey, version.compressed));\n}\n\nmodule.exports = {\n  decode: decode,\n  decodeRaw: decodeRaw,\n  encode: encode,\n  encodeRaw: encodeRaw\n};","var Buffer = require('safe-buffer').Buffer;\n\nvar bech32 = require('bech32');\n\nvar bs58check = require('bs58check');\n\nvar bscript = require('./script');\n\nvar networks = require('./networks');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar payments = require('./payments');\n\nfunction fromBase58Check(address) {\n  var payload = bs58check.decode(address); // TODO: 4.0.0, move to \"toOutputScript\"\n\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  var version = payload.readUInt8(0);\n  var hash = payload.slice(1);\n  return {\n    version: version,\n    hash: hash\n  };\n}\n\nfunction fromBech32(address) {\n  var result = bech32.decode(address);\n  var data = bech32.fromWords(result.words.slice(1));\n  return {\n    version: result.words[0],\n    prefix: result.prefix,\n    data: Buffer.from(data)\n  };\n}\n\nfunction toBase58Check(hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt8), arguments);\n  var payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\n\nfunction toBech32(data, version, prefix) {\n  var words = bech32.toWords(data);\n  words.unshift(version);\n  return bech32.encode(prefix, words);\n}\n\nfunction fromOutputScript(output, network) {\n  network = network || networks.bitcoin;\n\n  try {\n    return payments.p2pkh({\n      output: output,\n      network: network\n    }).address;\n  } catch (e) {}\n\n  try {\n    return payments.p2sh({\n      output: output,\n      network: network\n    }).address;\n  } catch (e) {}\n\n  try {\n    return payments.p2wpkh({\n      output: output,\n      network: network\n    }).address;\n  } catch (e) {}\n\n  try {\n    return payments.p2wsh({\n      output: output,\n      network: network\n    }).address;\n  } catch (e) {}\n\n  throw new Error(bscript.toASM(output) + ' has no matching Address');\n}\n\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  var decode;\n\n  try {\n    decode = fromBase58Check(address);\n  } catch (e) {}\n\n  if (decode) {\n    if (decode.version === network.pubKeyHash) return payments.p2pkh({\n      hash: decode.hash\n    }).output;\n    if (decode.version === network.scriptHash) return payments.p2sh({\n      hash: decode.hash\n    }).output;\n  } else {\n    try {\n      decode = fromBech32(address);\n    } catch (e) {}\n\n    if (decode) {\n      if (decode.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix');\n\n      if (decode.version === 0) {\n        if (decode.data.length === 20) return payments.p2wpkh({\n          hash: decode.data\n        }).output;\n        if (decode.data.length === 32) return payments.p2wsh({\n          hash: decode.data\n        }).output;\n      }\n    }\n  }\n\n  throw new Error(address + ' has no matching Script');\n}\n\nmodule.exports = {\n  fromBase58Check: fromBase58Check,\n  fromBech32: fromBech32,\n  fromOutputScript: fromOutputScript,\n  toBase58Check: toBase58Check,\n  toBech32: toBech32,\n  toOutputScript: toOutputScript\n};","// OP_0 {pubKeyHash}\nvar bscript = require('../../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length === 22 && buffer[0] === OPS.OP_0 && buffer[1] === 0x14;\n}\n\ncheck.toJSON = function () {\n  return 'Witness pubKeyHash output';\n};\n\nmodule.exports = {\n  check: check\n};","// OP_0 {scriptHash}\nvar bscript = require('../../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length === 34 && buffer[0] === OPS.OP_0 && buffer[1] === 0x20;\n}\n\ncheck.toJSON = function () {\n  return 'Witness scriptHash output';\n};\n\nmodule.exports = {\n  check: check\n};","'use strict';\n\nvar setImmediate = require('async/setImmediate');\n\nvar waterfall = require('async/waterfall');\n\nvar multihashing = require('multihashing-async');\n\nvar CID = require('cids');\n\nvar resolver = require('./resolver');\n\nvar gitUtil = require('./util/util');\n\nvar commit = require('./util/commit');\n\nvar tag = require('./util/tag');\n\nvar tree = require('./util/tree');\n\nexports = module.exports;\n\nexports.serialize = function (dagNode, callback) {\n  if (dagNode === null) {\n    setImmediate(function () {\n      return callback(new Error('dagNode passed to serialize was null'), null);\n    });\n    return;\n  }\n\n  if (Buffer.isBuffer(dagNode)) {\n    if (dagNode.slice(0, 4).toString() === 'blob') {\n      setImmediate(function () {\n        return callback(null, dagNode);\n      });\n    } else {\n      setImmediate(function () {\n        return callback(new Error('unexpected dagNode passed to serialize'), null);\n      });\n    }\n\n    return;\n  }\n\n  switch (dagNode.gitType) {\n    case 'commit':\n      commit.serialize(dagNode, callback);\n      break;\n\n    case 'tag':\n      tag.serialize(dagNode, callback);\n      break;\n\n    default:\n      // assume tree as a file named 'type' is legal\n      tree.serialize(dagNode, callback);\n  }\n};\n\nexports.deserialize = function (data, callback) {\n  var headLen = gitUtil.find(data, 0);\n  var head = data.slice(0, headLen).toString();\n  var typeLen = head.match(/([^ ]+) (\\d+)/);\n\n  if (!typeLen) {\n    setImmediate(function () {\n      return callback(new Error('invalid object header'), null);\n    });\n    return;\n  }\n\n  switch (typeLen[1]) {\n    case 'blob':\n      callback(null, data);\n      break;\n\n    case 'commit':\n      commit.deserialize(data.slice(headLen + 1), callback);\n      break;\n\n    case 'tag':\n      tag.deserialize(data.slice(headLen + 1), callback);\n      break;\n\n    case 'tree':\n      tree.deserialize(data.slice(headLen + 1), callback);\n      break;\n\n    default:\n      setImmediate(function () {\n        return callback(new Error('unknown object type ' + typeLen[1]), null);\n      });\n  }\n};\n/**\n * @callback CidCallback\n * @param {?Error} error - Error if getting the CID failed\n * @param {?CID} cid - CID if call was successful\n */\n\n/**\n * Get the CID of the DAG-Node.\n *\n * @param {Object} dagNode - Internal representation\n * @param {Object} [options] - Options to create the CID\n * @param {number} [options.version=1] - CID version number\n * @param {string} [options.hashAlg='sha1'] - Hashing algorithm\n * @param {CidCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nexports.cid = function (dagNode, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  var hashAlg = options.hashAlg || resolver.defaultHashAlg;\n  var version = typeof options.version === 'undefined' ? 1 : options.version;\n  waterfall([function (cb) {\n    return exports.serialize(dagNode, cb);\n  }, function (serialized, cb) {\n    return multihashing(serialized, hashAlg, cb);\n  }, function (mh, cb) {\n    return cb(null, new CID(version, resolver.multicodec, mh));\n  }], callback);\n};","'use strict';\n\nvar util = require('./util');\n\nvar traverse = require('traverse');\n\nexports = module.exports;\nexports.multicodec = 'git-raw';\nexports.defaultHashAlg = 'sha1';\nvar personInfoPaths = ['original', 'name', 'email', 'date'];\n\nexports.resolve = function (binaryBlob, path, callback) {\n  if (typeof path === 'function') {\n    callback = path;\n    path = undefined;\n  }\n\n  util.deserialize(binaryBlob, function (err, node) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!path || path === '/') {\n      return callback(null, {\n        value: node,\n        remainderPath: ''\n      });\n    }\n\n    if (Buffer.isBuffer(node)) {\n      // git blob\n      return callback(null, {\n        value: node,\n        remainderPath: path\n      });\n    }\n\n    var parts = path.split('/');\n    var val = traverse(node).get(parts);\n\n    if (val) {\n      return callback(null, {\n        value: val,\n        remainderPath: ''\n      });\n    }\n\n    var value;\n    var len = parts.length;\n\n    for (var i = 0; i < len; i++) {\n      var partialPath = parts.shift();\n\n      if (Array.isArray(node)) {\n        value = node[Number(partialPath)];\n      }\n\n      if (node[partialPath]) {\n        value = node[partialPath];\n      } else {\n        // can't traverse more\n        if (!value) {\n          return callback(new Error('path not available at root'));\n        } else {\n          parts.unshift(partialPath);\n          return callback(null, {\n            value: value,\n            remainderPath: parts.join('/')\n          });\n        }\n      }\n\n      node = value;\n    }\n  });\n};\n\nexports.tree = function (binaryBlob, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  util.deserialize(binaryBlob, function (err, node) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (Buffer.isBuffer(node)) {\n      // git blob\n      return callback(null, []);\n    }\n\n    var paths = [];\n\n    switch (node.gitType) {\n      case 'commit':\n        paths = ['message', 'tree'];\n        paths = paths.concat(personInfoPaths.map(function (e) {\n          return 'author/' + e;\n        }));\n        paths = paths.concat(personInfoPaths.map(function (e) {\n          return 'committer/' + e;\n        }));\n        paths = paths.concat(node.parents.map(function (_, e) {\n          return 'parents/' + e;\n        }));\n\n        if (node.encoding) {\n          paths.push('encoding');\n        }\n\n        break;\n\n      case 'tag':\n        paths = ['object', 'type', 'tag', 'message'];\n\n        if (node.tagger) {\n          paths = paths.concat(personInfoPaths.map(function (e) {\n            return 'tagger/' + e;\n          }));\n        }\n\n        break;\n\n      default:\n        // tree\n        Object.keys(node).forEach(function (dir) {\n          paths.push(dir);\n          paths.push(dir + '/hash');\n          paths.push(dir + '/mode');\n        });\n    }\n\n    callback(null, paths);\n  });\n};\n\nexports.isLink = function (binaryBlob, path, callback) {\n  exports.resolve(binaryBlob, path, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (result.remainderPath.length > 0) {\n      return callback(new Error('path out of scope'));\n    }\n\n    if (typeof result.value === 'object' && result.value['/']) {\n      callback(null, result.value);\n    } else {\n      callback(null, false);\n    }\n  });\n};","'use strict';\n\nvar ZcashBitcoreBlockHeader = require('zcash-bitcore-lib').BlockHeader;\n\nvar CID = require('cids');\n\nvar multihashes = require('multihashes');\n\nvar multihashing = require('multihashing-async');\n\nvar waterfall = require('async/waterfall');\n\nvar ZCASH_BLOCK_HEADER_SIZE = 1487;\n/**\n * @callback SerializeCallback\n * @param {?Error} error - Error if serialization failed\n * @param {?Buffer} binaryBlob - Binary Zcash block if serialization was\n *   successful\n */\n\n/**\n * Serialize internal representation into a binary Zcash block.\n *\n * @param {ZcashBlock} dagNode - Internal representation of a Zcash block\n * @param {SerializeCallback} callback - Callback that handles the\n *   return value\n * @returns {void}\n */\n\nvar serialize = function serialize(dagNode, callback) {\n  var err = null;\n  var binaryBlob;\n\n  try {\n    binaryBlob = dagNode.toBuffer();\n  } catch (serializeError) {\n    err = serializeError;\n  } finally {\n    callback(err, binaryBlob);\n  }\n};\n/**\n * @callback DeserializeCallback\n * @param {?Error} error - Error if deserialization failed\n * @param {?ZcashBlock} dagNode - Internal representation of a Zcash block\n *   if deserialization was successful\n */\n\n/**\n * Deserialize Zcash block into the internal representation,\n *\n * @param {Buffer} binaryBlob - Binary representation of a Zcash block\n * @param {DeserializeCallback} callback - Callback that handles the\n *   return value\n * @returns {void}\n */\n\n\nvar deserialize = function deserialize(binaryBlob, callback) {\n  if (binaryBlob.length !== ZCASH_BLOCK_HEADER_SIZE) {\n    var err = new Error(\"Zcash block header needs to be \".concat(ZCASH_BLOCK_HEADER_SIZE, \" bytes\"));\n    return callback(err);\n  }\n\n  var dagNode = ZcashBitcoreBlockHeader.fromBuffer(binaryBlob);\n  callback(null, dagNode);\n};\n/**\n * @callback CidCallback\n * @param {?Error} error - Error if getting the CID failed\n * @param {?CID} cid - CID if call was successful\n */\n\n/**\n * Get the CID of the DAG-Node.\n *\n * @param {ZcashBlock} dagNode - Internal representation of a Zcash block\n * @param {Object} [options] - Options to create the CID\n * @param {number} [options.version=1] - CID version number\n * @param {string} [options.hashAlg='dbl-sha2-256'] - Hashing algorithm\n * @param {CidCallback} callback - Callback that handles the return value\n * @returns {void}\n */\n\n\nvar cid = function cid(dagNode, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {}; // avoid deadly embrace between resolver and util\n\n  var hashAlg = options.hashAlg || require('./resolver').defaultHashAlg;\n\n  var version = typeof options.version === 'undefined' ? 1 : options.version;\n  waterfall([function (cb) {\n    try {\n      multihashing(dagNode.toBuffer(), hashAlg, cb);\n    } catch (err) {\n      cb(err);\n    }\n  }, function (mh, cb) {\n    return cb(null, new CID(version, 'zcash-block', mh));\n  }], callback);\n}; // Convert a Zcash hash (as Buffer) to a CID\n\n\nvar hashToCid = function hashToCid(hash) {\n  // avoid deadly embrace between resolver and util\n  var defaultHashAlg = require('./resolver').defaultHashAlg;\n\n  var multihash = multihashes.encode(hash, defaultHashAlg);\n  var cidVersion = 1;\n  var cid = new CID(cidVersion, 'zcash-block', multihash);\n  return cid;\n};\n\nmodule.exports = {\n  hashToCid: hashToCid,\n  ZCASH_BLOCK_HEADER_SIZE: ZCASH_BLOCK_HEADER_SIZE,\n  // Public API\n  cid: cid,\n  deserialize: deserialize,\n  serialize: serialize\n};","'use strict';\n\nvar BN = require('./bn');\n\nvar Point = require('./point');\n\nvar Signature = require('./signature');\n\nvar PublicKey = require('../publickey');\n\nvar Random = require('./random');\n\nvar Hash = require('./hash');\n\nvar BufferUtil = require('../util/buffer');\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n\n  if (obj) {\n    this.set(obj);\n  }\n};\n/* jshint maxcomplexity: 9 */\n\n\nECDSA.prototype.set = function (obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function () {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function () {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function (str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function () {\n  var N = Point.getN();\n  var k;\n\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n\n  this.k = k;\n  return this;\n}; // https://tools.ietf.org/html/rfc6979#section-3.2\n\n\nECDSA.prototype.deterministicK = function (badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf;\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN(); // also explained in 3.2, we must ensure T is in the proper range (0, N)\n\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n}; // Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\n\n\nECDSA.prototype.toPublicKey = function () {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = i & 1; // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n\n  var isSecondKey = i >> 1;\n  var n = Point.getN();\n  var G = Point.getG(); // 1.1 Let x = r + jn\n\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x); // 1.4 Check that nR is at infinity\n\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  } // Compute -e from e\n\n\n  var eNeg = e.neg().mod(n); // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n\n  var rInv = r.invm(n); //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function () {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().mod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function (s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n\n  return s;\n};\n\nECDSA.prototype._findSignature = function (d, e) {\n  var N = Point.getN();\n  var G = Point.getG(); // try different values of k until r, s are valid\n\n  var badrs = 0;\n  var k, Q, r, s;\n\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n};\n\nECDSA.prototype.sign = function () {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n\n  obj.compressed = this.pubkey.compressed;\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function () {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function () {\n  var obj = {};\n\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function () {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n\n  return this;\n};\n\nECDSA.sign = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function (hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;","exports.pbkdf2 = require('./lib/async');\nexports.pbkdf2Sync = require('./lib/sync');","var MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs\n\nfunction checkBuffer(buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string');\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password');\n  checkBuffer(salt, 'Salt');\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number');\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations');\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number');\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {\n    /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length');\n  }\n};","var defaultEncoding;\n/* istanbul ignore next */\n\nif (process.browser) {\n  defaultEncoding = 'utf-8';\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';\n}\n\nmodule.exports = defaultEncoding;","var md5 = require('create-hash/md5');\n\nvar RIPEMD160 = require('ripemd160');\n\nvar sha = require('sha.js');\n\nvar checkParameters = require('./precondition');\n\nvar defaultEncoding = require('./default-encoding');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ZEROS = Buffer.alloc(128);\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n};\n\nfunction Hmac(alg, key, saltLen) {\n  var hash = getDigest(alg);\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n\n  if (key.length > blocksize) {\n    key = hash(key);\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n  ipad.copy(ipad1, 0, 0, blocksize);\n  this.ipad1 = ipad1;\n  this.ipad2 = ipad;\n  this.opad = opad;\n  this.alg = alg;\n  this.blocksize = blocksize;\n  this.hash = hash;\n  this.size = sizes[alg];\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize);\n  var h = this.hash(ipad);\n  h.copy(this.opad, this.blocksize);\n  return this.hash(this.opad);\n};\n\nfunction getDigest(alg) {\n  function shaFunc(data) {\n    return sha(alg).update(data).digest();\n  }\n\n  function rmd160Func(data) {\n    return new RIPEMD160().update(data).digest();\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func;\n  if (alg === 'md5') return md5;\n  return shaFunc;\n}\n\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen);\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding);\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding);\n  digest = digest || 'sha1';\n  var hmac = new Hmac(digest, password, salt.length);\n  var DK = Buffer.allocUnsafe(keylen);\n  var block1 = Buffer.allocUnsafe(salt.length + 4);\n  salt.copy(block1, 0, 0, salt.length);\n  var destPos = 0;\n  var hLen = sizes[digest];\n  var l = Math.ceil(keylen / hLen);\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length);\n    var T = hmac.run(block1, hmac.ipad1);\n    var U = T;\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2);\n\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k];\n      }\n    }\n\n    T.copy(DK, destPos);\n    destPos += hLen;\n  }\n\n  return DK;\n}\n\nmodule.exports = pbkdf2;","var randomBytes = require('randombytes');\n\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\n\nvar BN = require('bn.js');\n\nvar TWENTYFOUR = new BN(24);\n\nvar MillerRabin = require('miller-rabin');\n\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null) return primes;\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n\n    for (var j = 0; j < i && res[j] <= sqrt; j++) {\n      if (k % res[j] === 0) break;\n    }\n\n    if (i !== j && res[j] <= sqrt) continue;\n    res[i++] = k;\n  }\n\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++) {\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n\n  gen = new BN(gen);\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n\n    n2 = num.shrn(1);\n\n    if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n}","var bn = require('bn.js');\n\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\n\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8); // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n\n  do {\n    var a = new bn(this.rand.generate(min_bytes));\n  } while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n  if (!k) k = Math.max(1, len / 48 | 0); // Find d and s, (n - 1) = (2 ^ s) * d;\n\n  var n1 = n.subn(1);\n\n  for (var s = 0; !n1.testn(s); s++) {}\n\n  var d = n.shrn(s);\n  var rn1 = n1.toRed(red);\n  var prime = true;\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    if (cb) cb(a);\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n      if (x.cmp(rone) === 0) return false;\n      if (x.cmp(rn1) === 0) break;\n    }\n\n    if (i === s) return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n  if (!k) k = Math.max(1, len / 48 | 0); // Find d and s, (n - 1) = (2 ^ s) * d;\n\n  var n1 = n.subn(1);\n\n  for (var s = 0; !n1.testn(s); s++) {}\n\n  var d = n.shrn(s);\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0) return g;\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n      if (x.cmp(rone) === 0) return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0) break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};","var inherits = require('inherits');\n\nvar Reporter = require('../base').Reporter;\n\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\n\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return {\n    offset: this.offset,\n    reporter: Reporter.prototype.save.call(this)\n  };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n  var res = new DecoderBuffer(this.base); // Share reporter state\n\n  res._reporterState = this._reporterState;\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function (item) {\n      if (!(item instanceof EncoderBuffer)) item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\n\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out) out = new Buffer(this.length);\n  if (!offset) offset = 0;\n  if (this.length === 0) return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};","var constants = exports; // Helper\n\nconstants._reverse = function reverse(map) {\n  var res = {};\n  Object.keys(map).forEach(function (key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key) key = key | 0;\n    var value = map[key];\n    res[value] = key;\n  });\n  return res;\n};\n\nconstants.der = require('./der');","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\n\nvar base = asn1.base;\nvar bignum = asn1.bignum; // Import DER constants\n\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity; // Construct base tree\n\n  this.tree = new DERNode();\n\n  this.tree._init(entity.body);\n}\n\n;\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer)) data = new base.DecoderBuffer(data, options);\n  return this.tree._decode(data, options);\n}; // Tree methods\n\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\n\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty()) return false;\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag)) return decodedTag;\n  buffer.restore(state);\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + 'of' === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag)) return decodedTag;\n  var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of \"' + tag + '\"'); // Failure\n\n  if (buffer.isError(len)) return len;\n\n  if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null) return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"'); // Indefinite length... find END tag\n\n  var state = buffer.save();\n\n  var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: \"' + this.tag + '\"');\n\n  if (buffer.isError(res)) return res;\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag)) return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len)) return len;\n    var res;\n    if (tag.primitive || len !== null) res = buffer.skip(len);else res = this._skipUntilEnd(buffer, fail); // Failure\n\n    if (buffer.isError(res)) return res;\n    if (tag.tagStr === 'end') break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {\n  var result = [];\n\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n\n    if (buffer.isError(possibleEnd)) return possibleEnd;\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd) break;\n    result.push(res);\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused)) return unused;\n    return {\n      unused: unused,\n      data: buffer.raw()\n    };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1) return buffer.error('Decoding of string type: bmpstr length mismatch');\n    var str = '';\n\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' + 'numstr unsupported characters');\n    }\n\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' + 'printstr unsupported characters');\n    }\n\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n\n  if (subident & 0x80) identifiers.push(ident);\n  var first = identifiers[0] / 40 | 0;\n  var second = identifiers[0] % 40;\n  if (relative) result = identifiers;else result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined) tmp = values[result.join('.')];\n    if (tmp !== undefined) result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70) year = 2000 + year;else year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res)) return res;else return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n  if (values) res = values[res.toString(10)] || res;\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') entity = entity(obj);\n  return entity._getDecoder('der').tree;\n}; // Utility methods\n\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag)) return tag;\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0; // Multi-octet tag - load\n\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct)) return oct;\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n\n  var tagStr = der.tag[tag];\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len)) return len; // Indefinite form\n\n  if (!primitive && len === 0x80) return null; // Definite form\n\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  } // Long form\n\n\n  var num = len & 0x7f;\n  if (num > 4) return buf.error('length octect is too long');\n  len = 0;\n\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j)) return j;\n    len |= j;\n  }\n\n  return len;\n}","var inherits = require('inherits');\n\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\n\nvar base = asn1.base; // Import DER constants\n\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity; // Construct base tree\n\n  this.tree = new DERNode();\n\n  this.tree._init(entity.body);\n}\n\n;\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n}; // Tree methods\n\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\n\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter); // Short form\n\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([header, content]);\n  } // Long form\n  // Count octets required to store length\n\n\n  var lenOctets = 1;\n\n  for (var i = content.length; i >= 0x100; i >>= 8) {\n    lenOctets++;\n  }\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) {\n    header[i] = j & 0xff;\n  }\n\n  return this._createEncoderBuffer([header, content]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' + 'only digits and space');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' + 'only latin upper and lower case letters, ' + 'digits, space, apostrophe, left and rigth ' + 'parenthesis, plus sign, comma, hyphen, ' + 'dot, slash, colon, equal sign, ' + 'question mark');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id)) return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n\n    for (var i = 0; i < id.length; i++) {\n      id[i] |= 0;\n    }\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n\n    for (var i = 0; i < id.length; i++) {\n      id[i] |= 0;\n    }\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40) return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  } // Count number of octets\n\n\n  var size = 0;\n\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n\n    for (size++; ident >= 0x80; ident >>= 7) {\n      size++;\n    }\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n\n    while ((ident >>= 7) > 0) {\n      objid[offset--] = 0x80 | ident & 0x7f;\n    }\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10) return '0' + num;else return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else if (tag === 'utctime') {\n    str = [two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values) return this.reporter.error('String int or enum given, but no values map');\n\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' + JSON.stringify(num));\n    }\n\n    num = values[num];\n  } // Bignum, assume big endian\n\n\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0) size++;\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0) out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80) return this._createEncoderBuffer(num);\n  if (num < 0x100) return this._createEncoderBuffer([0, num]);\n  var size = 1;\n\n  for (var i = num; i >= 0x100; i >>= 8) {\n    size++;\n  }\n\n  var out = new Array(size);\n\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n\n  if (out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null) return false;\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined) state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n  if (data.length !== state.defaultBuffer.length) return false;\n\n  for (i = 0; i < data.length; i++) {\n    if (data[i] !== state.defaultBuffer[i]) return false;\n  }\n\n  return true;\n}; // Utility methods\n\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n  if (tag === 'seqof') tag = 'seq';else if (tag === 'setof') tag = 'set';\n  if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;else return reporter.error('Unknown tag: ' + tag);\n  if (res >= 0x1f) return reporter.error('Multi-octet tag encoding unsupported');\n  if (!primitive) res |= 0x20;\n  res |= der.tagClassByName[cls || 'universal'] << 6;\n  return res;\n}","var createHash = require('create-hash');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0);\n  var i = 0;\n  var c;\n\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = Buffer.allocUnsafe(4);\n  out.writeUInt32BE(c, 0);\n  return out;\n}","module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n\n  return a;\n};","var BN = require('bn.js');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction withPublic(paddedMsg, key) {\n  return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());\n}\n\nmodule.exports = withPublic;","// Base58 encoding/decoding\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar ALPHABET_MAP = {};\n\nfor (var i = 0; i < ALPHABET.length; i++) {\n  ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n}\n\nvar BASE = 58;\n\nfunction encode(buffer) {\n  if (buffer.length === 0) return '';\n  var i,\n      j,\n      digits = [0];\n\n  for (i = 0; i < buffer.length; i++) {\n    for (j = 0; j < digits.length; j++) {\n      digits[j] <<= 8;\n    }\n\n    digits[0] += buffer[i];\n    var carry = 0;\n\n    for (j = 0; j < digits.length; ++j) {\n      digits[j] += carry;\n      carry = digits[j] / BASE | 0;\n      digits[j] %= BASE;\n    }\n\n    while (carry) {\n      digits.push(carry % BASE);\n      carry = carry / BASE | 0;\n    }\n  } // deal with leading zeros\n\n\n  for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) {\n    digits.push(0);\n  }\n\n  return digits.reverse().map(function (digit) {\n    return ALPHABET[digit];\n  }).join('');\n}\n\nfunction decode(string) {\n  if (string.length === 0) return [];\n  var i,\n      j,\n      bytes = [0];\n\n  for (i = 0; i < string.length; i++) {\n    var c = string[i];\n    if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character');\n\n    for (j = 0; j < bytes.length; j++) {\n      bytes[j] *= BASE;\n    }\n\n    bytes[0] += ALPHABET_MAP[c];\n    var carry = 0;\n\n    for (j = 0; j < bytes.length; ++j) {\n      bytes[j] += carry;\n      carry = bytes[j] >> 8;\n      bytes[j] &= 0xff;\n    }\n\n    while (carry) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  } // deal with leading zeros\n\n\n  for (i = 0; string[i] === '1' && i < string.length - 1; i++) {\n    bytes.push(0);\n  }\n\n  return bytes.reverse();\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};","'use strict';\n\nvar Address = require('../address');\n\nvar BufferReader = require('../encoding/bufferreader');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Hash = require('../crypto/hash');\n\nvar Opcode = require('../opcode');\n\nvar PublicKey = require('../publickey');\n\nvar Signature = require('../crypto/signature');\n\nvar Networks = require('../networks');\n\nvar $ = require('../util/preconditions');\n\nvar _ = require('lodash');\n\nvar errors = require('../errors');\n\nvar buffer = require('buffer');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\n\n\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (typeof from === 'string') {\n    return Script.fromString(from);\n  } else if (typeof from !== 'undefined') {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function (obj) {\n  this.chunks = obj.chunks || this.chunks;\n  return this;\n};\n\nScript.fromBuffer = function (buffer) {\n  var script = new Script();\n  script.chunks = [];\n  var br = new BufferReader(buffer);\n\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n      var len, buf;\n\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function () {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function (str) {\n  var script = new Script();\n  script.chunks = [];\n  var tokens = str.split(' ');\n  var i = 0;\n\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 || opcodenum === Opcode.OP_PUSHDATA2 || opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n\n  return script;\n};\n\nScript.fromHex = function (str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function (str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n\n  var script = new Script();\n  script.chunks = [];\n  var tokens = str.split(' ');\n  var i = 0;\n\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 || opcodenum === Opcode.OP_PUSHDATA2 || opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype._chunkToString = function (chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = type === 'asm';\n  var str = '';\n\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    } else {\n      var numstr = opcodenum.toString(16);\n\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (opcodenum === Opcode.OP_PUSHDATA1 || opcodenum === Opcode.OP_PUSHDATA2 || opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n\n  return str;\n};\n\nScript.prototype.toASM = function () {\n  var str = '';\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function () {\n  var str = '';\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function () {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function () {\n  return '<Script: ' + this.toString() + '>';\n}; // script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\n\n\nScript.prototype.isPublicKeyHashOut = function () {\n  return !!(this.chunks.length === 5 && this.chunks[0].opcodenum === Opcode.OP_DUP && this.chunks[1].opcodenum === Opcode.OP_HASH160 && this.chunks[2].buf && this.chunks[2].buf.length === 20 && this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY && this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\n\n\nScript.prototype.isPublicKeyHashIn = function () {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n\n    if (signatureBuf && signatureBuf.length && signatureBuf[0] === 0x30 && pubkeyBuf && pubkeyBuf.length) {\n      var version = pubkeyBuf[0];\n\n      if ((version === 0x04 || version === 0x06 || version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nScript.prototype.getPublicKey = function () {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retreive PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function () {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n/**\n * @returns {boolean} if this is a public key output script\n */\n\n\nScript.prototype.isPublicKeyOut = function () {\n  if (this.chunks.length === 2 && this.chunks[0].buf && this.chunks[0].buf.length && this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n\n    if ((version === 0x04 || version === 0x06 || version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n\n  return false;\n};\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\n\n\nScript.prototype.isPublicKeyIn = function () {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n\n    if (signatureBuf && signatureBuf.length && signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * @returns {boolean} if this is a p2sh output script\n */\n\n\nScript.prototype.isScriptHashOut = function () {\n  var buf = this.toBuffer();\n  return buf.length === 23 && buf[0] === Opcode.OP_HASH160 && buf[1] === 0x14 && buf[buf.length - 1] === Opcode.OP_EQUAL;\n};\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\n\n\nScript.prototype.isScriptHashIn = function () {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n\n    throw e;\n  }\n\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\n\n\nScript.prototype.isMultisigOut = function () {\n  return this.chunks.length > 3 && Opcode.isSmallIntOp(this.chunks[0].opcodenum) && this.chunks.slice(1, this.chunks.length - 2).every(function (obj) {\n    return obj.buf && BufferUtil.isBuffer(obj.buf);\n  }) && Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) && this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG;\n};\n/**\n * @returns {boolean} if this is a multisig input script\n */\n\n\nScript.prototype.isMultisigIn = function () {\n  return this.chunks.length >= 2 && this.chunks[0].opcodenum === 0 && this.chunks.slice(1, this.chunks.length).every(function (obj) {\n    return obj.buf && BufferUtil.isBuffer(obj.buf) && Signature.isTxDER(obj.buf);\n  });\n};\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\n\n\nScript.prototype.isDataOut = function () {\n  return this.chunks.length >= 1 && this.chunks[0].opcodenum === Opcode.OP_RETURN && (this.chunks.length === 1 || this.chunks.length === 2 && this.chunks[1].buf && this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE && this.chunks[1].length === this.chunks.len);\n};\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\n\n\nScript.prototype.getData = function () {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n\n  throw new Error('Unrecognized script type to get data from');\n};\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\n\n\nScript.prototype.isPushOnly = function () {\n  return _.every(this.chunks, function (chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\nScript.OP_RETURN_STANDARD_SIZE = 80;\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\n\nScript.prototype.classify = function () {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\n\nScript.prototype.classifyOutput = function () {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\n\nScript.prototype.classifyInput = function () {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n\n  return Script.types.UNKNOWN;\n};\n/**\n * @returns {boolean} if script is one of the known types\n */\n\n\nScript.prototype.isStandard = function () {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n}; // Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\n\n\nScript.prototype.prepend = function (obj) {\n  this._addByType(obj, true);\n\n  return this;\n};\n/**\n * Compares a script with another script\n */\n\n\nScript.prototype.equals = function (script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n\n  var i;\n\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\n\n\nScript.prototype.add = function (obj) {\n  this._addByType(obj, false);\n\n  return this;\n};\n\nScript.prototype._addByType = function (obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function (op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function (opcode, prepend) {\n  var op;\n\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n\n  return this;\n};\n\nScript.prototype._addBuffer = function (buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function () {\n  var chunks = [];\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n\n  this.chunks = chunks;\n  return this;\n}; // high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\n\n\nScript.buildMultisigOut = function (publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length, 'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function (publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\n\n\nScript.buildMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n\n  _.each(signatures, function (signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers'); // TODO: allow signatures to be an array of Signature objects\n\n    s.add(signature);\n  });\n\n  return s;\n};\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\n\n\nScript.buildP2SHMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n\n  _.each(signatures, function (signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers'); // TODO: allow signatures to be an array of Signature objects\n\n    s.add(signature);\n  });\n\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\n\n\nScript.buildPublicKeyHashOut = function (to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n\n  var s = new Script();\n  s.add(Opcode.OP_DUP).add(Opcode.OP_HASH160).add(to.hashBuffer).add(Opcode.OP_EQUALVERIFY).add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\n\n\nScript.buildPublicKeyOut = function (pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer()).add(Opcode.OP_CHECKSIG);\n  return s;\n};\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\n\n\nScript.buildDataOut = function (data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n\n  return s;\n};\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\n\n\nScript.buildScriptHashOut = function (script) {\n  $.checkArgument(script instanceof Script || script instanceof Address && script.isPayToScriptHash());\n  var s = new Script();\n  s.add(Opcode.OP_HASH160).add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer())).add(Opcode.OP_EQUAL);\n  s._network = script._network || script.network;\n  return s;\n};\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\n\n\nScript.buildPublicKeyIn = function (signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n\n  var script = new Script();\n  script.add(BufferUtil.concat([signature, BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)]));\n  return script;\n};\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\n\n\nScript.buildPublicKeyHashIn = function (publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n\n  var script = new Script().add(BufferUtil.concat([signature, BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)])).add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n/**\n * @returns {Script} an empty script\n */\n\n\nScript.empty = function () {\n  return new Script();\n};\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\n\n\nScript.prototype.toScriptHashOut = function () {\n  return Script.buildScriptHashOut(this);\n};\n/**\n * @return {Script} an output script built from the address\n */\n\n\nScript.fromAddress = function (address) {\n  address = Address(address);\n\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\n\n\nScript.prototype.getAddressInfo = function (opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n\n    return info;\n  }\n};\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\n\n\nScript.prototype._getOutputAddressInfo = function () {\n  var info = {};\n\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n\n  return info;\n};\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\n\n\nScript.prototype._getInputAddressInfo = function () {\n  var info = {};\n\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n\n  return info;\n};\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\n\n\nScript.prototype.toAddress = function (network) {\n  var info = this.getAddressInfo();\n\n  if (!info) {\n    return false;\n  }\n\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\n\n\nScript.prototype.findAndDelete = function (script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n\n  return this;\n};\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\n\n\nScript.prototype.checkMinimalPush = function (i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n\n  if (!buf) {\n    return true;\n  }\n\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n\n  return true;\n};\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\n\n\nScript.prototype._decodeOP_N = function (opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\n\n\nScript.prototype.getSignatureOperationsCount = function (accurate) {\n  accurate = _.isUndefined(accurate) ? true : accurate;\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n\n    lastOpcode = opcode;\n  });\n\n  return n;\n};\n\nmodule.exports = Script;","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar JSUtil = require('../util/js');\n\nvar Script = require('../script');\n\nvar Address = require('../address');\n\nvar Unit = require('../unit');\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\n\n\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script), 'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis), 'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\n\n\nUnspentOutput.prototype.inspect = function () {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex + ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\n\n\nUnspentOutput.prototype.toString = function () {\n  return this.txId + ':' + this.outputIndex;\n};\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\n\n\nUnspentOutput.fromObject = function (data) {\n  return new UnspentOutput(data);\n};\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\n\n\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;","'use strict';\n\nvar _ = require('lodash');\n\nvar BlockHeader = require('./blockheader');\n\nvar BufferUtil = require('../util/buffer');\n\nvar BufferReader = require('../encoding/bufferreader');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Hash = require('../crypto/hash');\n\nvar JSUtil = require('../util/js');\n\nvar Transaction = require('../transaction');\n\nvar $ = require('../util/preconditions');\n/**\n * Instantiate a MerkleBlock from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object representing a MerkleBlock\n * @returns {MerkleBlock}\n * @constructor\n */\n\n\nfunction MerkleBlock(arg) {\n  /* jshint maxstatements: 18 */\n  if (!(this instanceof MerkleBlock)) {\n    return new MerkleBlock(arg);\n  }\n\n  var info = {};\n\n  if (BufferUtil.isBuffer(arg)) {\n    info = MerkleBlock._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    var header;\n\n    if (arg.header instanceof BlockHeader) {\n      header = arg.header;\n    } else {\n      header = BlockHeader.fromObject(arg.header);\n    }\n\n    info = {\n      /**\n       * @name MerkleBlock#header\n       * @type {BlockHeader}\n       */\n      header: header,\n\n      /**\n       * @name MerkleBlock#numTransactions\n       * @type {Number}\n       */\n      numTransactions: arg.numTransactions,\n\n      /**\n       * @name MerkleBlock#hashes\n       * @type {String[]}\n       */\n      hashes: arg.hashes,\n\n      /**\n       * @name MerkleBlock#flags\n       * @type {Number[]}\n       */\n      flags: arg.flags\n    };\n  } else {\n    throw new TypeError('Unrecognized argument for MerkleBlock');\n  }\n\n  _.extend(this, info);\n\n  this._flagBitsUsed = 0;\n  this._hashesUsed = 0;\n  return this;\n}\n/**\n * @param {Buffer} - MerkleBlock data in a Buffer object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\n\n\nMerkleBlock.fromBuffer = function fromBuffer(buf) {\n  return MerkleBlock.fromBufferReader(BufferReader(buf));\n};\n/**\n * @param {BufferReader} - MerkleBlock data in a BufferReader object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\n\n\nMerkleBlock.fromBufferReader = function fromBufferReader(br) {\n  return new MerkleBlock(MerkleBlock._fromBufferReader(br));\n};\n/**\n * @returns {Buffer} - A buffer of the block\n */\n\n\nMerkleBlock.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the MerkleBlock\n */\n\n\nMerkleBlock.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n\n  bw.write(this.header.toBuffer());\n  bw.writeUInt32LE(this.numTransactions);\n  bw.writeVarintNum(this.hashes.length);\n\n  for (var i = 0; i < this.hashes.length; i++) {\n    bw.write(new Buffer(this.hashes[i], 'hex'));\n  }\n\n  bw.writeVarintNum(this.flags.length);\n\n  for (i = 0; i < this.flags.length; i++) {\n    bw.writeUInt8(this.flags[i]);\n  }\n\n  return bw;\n};\n/**\n * @returns {Object} - A plain object with the MerkleBlock properties\n */\n\n\nMerkleBlock.prototype.toObject = MerkleBlock.prototype.toJSON = function toObject() {\n  return {\n    header: this.header.toObject(),\n    numTransactions: this.numTransactions,\n    hashes: this.hashes,\n    flags: this.flags\n  };\n};\n/**\n * Verify that the MerkleBlock is valid\n * @returns {Boolean} - True/False whether this MerkleBlock is Valid\n */\n\n\nMerkleBlock.prototype.validMerkleTree = function validMerkleTree() {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array');\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array'); // Can't have more hashes than numTransactions\n\n  if (this.hashes.length > this.numTransactions) {\n    return false;\n  } // Can't have more flag bits than num hashes\n\n\n  if (this.flags.length * 8 < this.hashes.length) {\n    return false;\n  }\n\n  var height = this._calcTreeHeight();\n\n  var opts = {\n    hashesUsed: 0,\n    flagBitsUsed: 0\n  };\n\n  var root = this._traverseMerkleTree(height, 0, opts);\n\n  if (opts.hashesUsed !== this.hashes.length) {\n    return false;\n  }\n\n  return BufferUtil.equals(root, this.header.merkleRoot);\n};\n/**\n * Traverse a the tree in this MerkleBlock, validating it along the way\n * Modeled after Bitcoin Core merkleblock.cpp TraverseAndExtract()\n * @param {Number} - depth - Current height\n * @param {Number} - pos - Current position in the tree\n * @param {Object} - opts - Object with values that need to be mutated throughout the traversal\n * @param {Number} - opts.flagBitsUsed - Number of flag bits used, should start at 0\n * @param {Number} - opts.hashesUsed - Number of hashes used, should start at 0\n * @param {Array} - opts.txs - Will finish populated by transactions found during traversal\n * @returns {Buffer|null} - Buffer containing the Merkle Hash for that height\n * @private\n */\n\n\nMerkleBlock.prototype._traverseMerkleTree = function traverseMerkleTree(depth, pos, opts) {\n  /* jshint maxcomplexity:  12*/\n\n  /* jshint maxstatements: 20 */\n  opts = opts || {};\n  opts.txs = opts.txs || [];\n  opts.flagBitsUsed = opts.flagBitsUsed || 0;\n  opts.hashesUsed = opts.hashesUsed || 0;\n\n  if (opts.flagBitsUsed > this.flags.length * 8) {\n    return null;\n  }\n\n  var isParentOfMatch = this.flags[opts.flagBitsUsed >> 3] >>> (opts.flagBitsUsed++ & 7) & 1;\n\n  if (depth === 0 || !isParentOfMatch) {\n    if (opts.hashesUsed >= this.hashes.length) {\n      return null;\n    }\n\n    var hash = this.hashes[opts.hashesUsed++];\n\n    if (depth === 0 && isParentOfMatch) {\n      opts.txs.push(hash);\n    }\n\n    return new Buffer(hash, 'hex');\n  } else {\n    var left = this._traverseMerkleTree(depth - 1, pos * 2, opts);\n\n    var right = left;\n\n    if (pos * 2 + 1 < this._calcTreeWidth(depth - 1)) {\n      right = this._traverseMerkleTree(depth - 1, pos * 2 + 1, opts);\n    }\n\n    return Hash.sha256sha256(new Buffer.concat([left, right]));\n  }\n};\n/** Calculates the width of a merkle tree at a given height.\n *  Modeled after Bitcoin Core merkleblock.h CalcTreeWidth()\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Width of the tree at a given height\n * @private\n */\n\n\nMerkleBlock.prototype._calcTreeWidth = function calcTreeWidth(height) {\n  return this.numTransactions + (1 << height) - 1 >> height;\n};\n/** Calculates the height of the merkle tree in this MerkleBlock\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Height of the merkle tree in this MerkleBlock\n * @private\n */\n\n\nMerkleBlock.prototype._calcTreeHeight = function calcTreeHeight() {\n  var height = 0;\n\n  while (this._calcTreeWidth(height) > 1) {\n    height++;\n  }\n\n  return height;\n};\n/**\n * @param {Transaction|String} - Transaction or Transaction ID Hash\n * @returns {Boolean} - return true/false if this MerkleBlock has the TX or not\n * @private\n */\n\n\nMerkleBlock.prototype.hasTransaction = function hasTransaction(tx) {\n  $.checkArgument(!_.isUndefined(tx), 'tx cannot be undefined');\n  $.checkArgument(tx instanceof Transaction || typeof tx === 'string', 'Invalid tx given, tx must be a \"string\" or \"Transaction\"');\n  var hash = tx;\n\n  if (tx instanceof Transaction) {\n    // We need to reverse the id hash for the lookup\n    hash = BufferUtil.reverse(new Buffer(tx.id, 'hex')).toString('hex');\n  }\n\n  var txs = [];\n\n  var height = this._calcTreeHeight();\n\n  this._traverseMerkleTree(height, 0, {\n    txs: txs\n  });\n\n  return txs.indexOf(hash) !== -1;\n};\n/**\n * @param {Buffer} - MerkleBlock data\n * @returns {Object} - An Object representing merkleblock data\n * @private\n */\n\n\nMerkleBlock._fromBufferReader = function _fromBufferReader(br) {\n  $.checkState(!br.finished(), 'No merkleblock data received');\n  var info = {};\n  info.header = BlockHeader.fromBufferReader(br);\n  info.numTransactions = br.readUInt32LE();\n  var numHashes = br.readVarintNum();\n  info.hashes = [];\n\n  for (var i = 0; i < numHashes; i++) {\n    info.hashes.push(br.read(32).toString('hex'));\n  }\n\n  var numFlags = br.readVarintNum();\n  info.flags = [];\n\n  for (i = 0; i < numFlags; i++) {\n    info.flags.push(br.readUInt8());\n  }\n\n  return info;\n};\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\n\n\nMerkleBlock.fromObject = function fromObject(obj) {\n  return new MerkleBlock(obj);\n};\n\nmodule.exports = MerkleBlock;","'use strict';\n\nvar assert = require('assert');\n\nvar buffer = require('buffer');\n\nvar _ = require('lodash');\n\nvar $ = require('./util/preconditions');\n\nvar BN = require('./crypto/bn');\n\nvar Base58 = require('./encoding/base58');\n\nvar Base58Check = require('./encoding/base58check');\n\nvar Hash = require('./crypto/hash');\n\nvar Network = require('./networks');\n\nvar HDKeyCache = require('./hdkeycache');\n\nvar Point = require('./crypto/point');\n\nvar PrivateKey = require('./privatekey');\n\nvar Random = require('./crypto/random');\n\nvar errors = require('./errors');\n\nvar hdErrors = errors.HDPrivateKey;\n\nvar BufferUtil = require('./util/buffer');\n\nvar JSUtil = require('./util/js');\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\n\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Network.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\n\n\nHDPrivateKey.isValidPath = function (arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n\n    return indexes !== null && _.all(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\n\n\nHDPrivateKey._getDerivationIndexes = function (path) {\n  var steps = path.split('/'); // Special cases:\n\n  if (_.contains(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.contains(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function (step) {\n    var isHardened = step.slice(-1) === '\\'';\n\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n\n    var index = +step; // cast to number\n\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n  return _.any(indexes, isNaN) ? null : indexes;\n};\n/**\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\n\n\nHDPrivateKey.prototype.derive = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function (index, hardened) {\n  /* jshint maxstatements: 20 */\n\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var cached = HDKeyCache.get(this.xprivkey, index, hardened);\n\n  if (cached) {\n    return cached;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n\n  if (hardened) {\n    data = BufferUtil.concat([new buffer.Buffer([0]), this.privateKey.toBuffer(), indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).mod(Point.getN()).toBuffer({\n    size: 32\n  });\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n  HDKeyCache.set(this.xprivkey, index, hardened, derived);\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function (path) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n  return derived;\n};\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\n\n\nHDPrivateKey.isValidSerialized = function (data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\n\n\nHDPrivateKey.getSerializedError = function (data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n\n    if (error) {\n      return error;\n    }\n  }\n\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg);\n\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n\n  var version = data.slice(0, 4);\n\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n\n  return null;\n};\n\nHDPrivateKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function (arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function (arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Network.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: _.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart, HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function (network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\n\n\nHDPrivateKey.fromSeed = function (hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n  return new HDPrivateKey({\n    network: Network.get(network) || Network.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\nHDPrivateKey.prototype._calcHDPublicKey = function () {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\n\n\nHDPrivateKey.prototype._buildFromBuffers = function (arg) {\n  /* jshint maxcomplexity: 8 */\n\n  /* jshint maxstatements: 20 */\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n  var sequence = [arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode, BufferUtil.emptyBuffer(1), arg.privateKey];\n  var concat = buffer.Buffer.concat(sequence);\n\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Network.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n  this._hdPublicKey = null;\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function get() {\n      this._calcHDPublicKey();\n\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function get() {\n      this._calcHDPublicKey();\n\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function checkBuffer(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(buff.length === size, name + ' has not the expected size: found ' + buff.length + ', expected ' + size);\n  };\n\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\n\n\nHDPrivateKey.prototype.toString = function () {\n  return this.xprivkey;\n};\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\n\n\nHDPrivateKey.prototype.inspect = function () {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\n\n\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Network.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\n\n\nHDPrivateKey.fromBuffer = function (arg) {\n  return new HDPrivateKey(arg.toString());\n};\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\n\n\nHDPrivateKey.prototype.toBuffer = function () {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\nmodule.exports = HDPrivateKey;","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('./util/preconditions');\n\nvar BN = require('./crypto/bn');\n\nvar Base58 = require('./encoding/base58');\n\nvar Base58Check = require('./encoding/base58check');\n\nvar Hash = require('./crypto/hash');\n\nvar HDPrivateKey = require('./hdprivatekey');\n\nvar HDKeyCache = require('./hdkeycache');\n\nvar Network = require('./networks');\n\nvar Point = require('./crypto/point');\n\nvar PublicKey = require('./publickey');\n\nvar bitcoreErrors = require('./errors');\n\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\n\nvar assert = require('assert');\n\nvar JSUtil = require('./util/js');\n\nvar BufferUtil = require('./util/buffer');\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\n\n\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\n\n\nHDPublicKey.isValidPath = function (arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n\n    return indexes !== null && _.all(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n/**\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\n\n\nHDPublicKey.prototype.derive = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function (index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var cached = HDKeyCache.get(this.xpubkey, index, false);\n\n  if (cached) {\n    return cached;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n  var publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n  HDKeyCache.set(this.xpubkey, index, false, derived);\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function (path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.contains(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n  return derived;\n};\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\n\n\nHDPublicKey.isValidSerialized = function (data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\n\n\nHDPublicKey.getSerializedError = function (data, network) {\n  /* jshint maxcomplexity: 10 */\n\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n\n    if (error) {\n      return error;\n    }\n  }\n\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n\n  if (version === Network.livenet.xprivkey || version === Network.testnet.xprivkey) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n\n  return null;\n};\n\nHDPublicKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg);\n\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Network.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function (arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Network.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) : BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart, HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\n\n\nHDPublicKey.prototype._buildFromBuffers = function (arg) {\n  /* jshint maxcomplexity: 8 */\n\n  /* jshint maxstatements: 20 */\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n  var sequence = [arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode, arg.publicKey];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n\n  var network = Network.get(BufferUtil.integerFromBuffer(arg.version));\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n  var publicKey = new PublicKey(arg.publicKey, {\n    network: network\n  });\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function checkBuffer(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(buff.length === size, name + ' has not the expected size: found ' + buff.length + ', expected ' + size);\n  };\n\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\n\n\nHDPublicKey.prototype.toString = function () {\n  return this.xpubkey;\n};\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\n\n\nHDPublicKey.prototype.inspect = function () {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\n\n\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Network.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\n\n\nHDPublicKey.fromBuffer = function (arg) {\n  return new HDPublicKey(arg);\n};\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\n\n\nHDPublicKey.prototype.toBuffer = function () {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000000;\nHDPublicKey.RootElementAlias = ['m', 'M'];\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\nHDPublicKey.VersionStart = 0;\nHDPublicKey.VersionEnd = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\nmodule.exports = HDPublicKey;","'use strict';\n\nvar EthAccount = require('ethereumjs-account');\n\nvar cidFromHash = require('../util/cidFromHash');\n\nvar createResolver = require('../util/createResolver');\n\nvar emptyCodeHash = require('../util/emptyCodeHash');\n\nmodule.exports = createResolver('eth-account-snapshot', EthAccount, mapFromEthObj);\n\nfunction mapFromEthObj(account, options, callback) {\n  var paths = []; // external links\n\n  paths.push({\n    path: 'storage',\n    value: {\n      '/': cidFromHash('eth-storage-trie', account.stateRoot).toBaseEncodedString()\n    }\n  }); // resolve immediately if empty, otherwise link to code\n\n  if (emptyCodeHash.equals(account.codeHash)) {\n    paths.push({\n      path: 'code',\n      value: Buffer.from('')\n    });\n  } else {\n    paths.push({\n      path: 'code',\n      value: {\n        '/': cidFromHash('raw', account.codeHash).toBaseEncodedString()\n      }\n    });\n  } // external links as data\n\n\n  paths.push({\n    path: 'stateRoot',\n    value: account.stateRoot\n  });\n  paths.push({\n    path: 'codeHash',\n    value: account.codeHash\n  }); // internal data\n\n  paths.push({\n    path: 'nonce',\n    value: account.nonce\n  });\n  paths.push({\n    path: 'balance',\n    value: account.balance\n  }); // helpers\n\n  paths.push({\n    path: 'isEmpty',\n    value: account.isEmpty()\n  });\n  paths.push({\n    path: 'isContract',\n    value: account.isContract()\n  });\n  callback(null, paths);\n}","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + typeof str + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n};","module.exports = createIsLink;\n\nfunction createIsLink(resolve) {\n  return function isLink(block, path, callback) {\n    resolve(block, path, function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (result.remainderPath.length > 0) {\n        return callback(new Error('path out of scope'));\n      }\n\n      if (typeof result.value === 'object' && result.value['/']) {\n        callback(null, result.value);\n      } else {\n        callback(null, false);\n      }\n    });\n  };\n}","var cidFromEthObj = require('./cidFromEthObj');\n\nvar asyncify = require('async/asyncify');\n\nmodule.exports = createUtil;\n\nfunction createUtil(multicodec, EthObjClass) {\n  return {\n    deserialize: asyncify(function (serialized) {\n      return new EthObjClass(serialized);\n    }),\n    serialize: asyncify(function (ethObj) {\n      return ethObj.serialize();\n    }),\n    cid: asyncify(function (ethObj, options) {\n      return cidFromEthObj(multicodec, ethObj, options);\n    })\n  };\n}","'use strict';\n\nvar cidFromHash = require('./cidFromHash');\n\nmodule.exports = cidFromEthObj;\n\nfunction cidFromEthObj(multicodec, ethObj, options) {\n  var hashBuffer = ethObj.hash();\n  var cid = cidFromHash(multicodec, hashBuffer, options);\n  return cid;\n}","'use strict';\n\nvar EthBlockHeader = require('ethereumjs-block/header');\n\nvar cidFromHash = require('../util/cidFromHash');\n\nvar createResolver = require('../util/createResolver');\n\nmodule.exports = createResolver('eth-block', EthBlockHeader, mapFromEthObj);\n\nfunction mapFromEthObj(ethObj, options, callback) {\n  var paths = []; // external links\n\n  paths.push({\n    path: 'parent',\n    value: {\n      '/': cidFromHash('eth-block', ethObj.parentHash).toBaseEncodedString()\n    }\n  });\n  paths.push({\n    path: 'ommers',\n    value: {\n      '/': cidFromHash('eth-block-list', ethObj.uncleHash).toBaseEncodedString()\n    }\n  });\n  paths.push({\n    path: 'transactions',\n    value: {\n      '/': cidFromHash('eth-tx-trie', ethObj.transactionsTrie).toBaseEncodedString()\n    }\n  });\n  paths.push({\n    path: 'transactionReceipts',\n    value: {\n      '/': cidFromHash('eth-tx-receipt-trie', ethObj.receiptTrie).toBaseEncodedString()\n    }\n  });\n  paths.push({\n    path: 'state',\n    value: {\n      '/': cidFromHash('eth-state-trie', ethObj.stateRoot).toBaseEncodedString()\n    }\n  }); // external links as data\n\n  paths.push({\n    path: 'parentHash',\n    value: ethObj.parentHash\n  });\n  paths.push({\n    path: 'ommerHash',\n    value: ethObj.uncleHash\n  });\n  paths.push({\n    path: 'transactionTrieRoot',\n    value: ethObj.transactionsTrie\n  });\n  paths.push({\n    path: 'transactionReceiptTrieRoot',\n    value: ethObj.receiptTrie\n  });\n  paths.push({\n    path: 'stateRoot',\n    value: ethObj.stateRoot\n  }); // internal data\n\n  paths.push({\n    path: 'authorAddress',\n    value: ethObj.coinbase\n  });\n  paths.push({\n    path: 'bloom',\n    value: ethObj.bloom\n  });\n  paths.push({\n    path: 'difficulty',\n    value: ethObj.difficulty\n  });\n  paths.push({\n    path: 'number',\n    value: ethObj.number\n  });\n  paths.push({\n    path: 'gasLimit',\n    value: ethObj.gasLimit\n  });\n  paths.push({\n    path: 'gasUsed',\n    value: ethObj.gasUsed\n  });\n  paths.push({\n    path: 'timestamp',\n    value: ethObj.timestamp\n  });\n  paths.push({\n    path: 'extraData',\n    value: ethObj.extraData\n  });\n  paths.push({\n    path: 'mixHash',\n    value: ethObj.mixHash\n  });\n  paths.push({\n    path: 'nonce',\n    value: ethObj.nonce\n  });\n  callback(null, paths);\n}","var Common = require('ethereumjs-common').default;\n\nvar utils = require('ethereumjs-util');\n\nvar BN = utils.BN;\n/**\n * An object that repersents the block header\n * @constructor\n * @param {Array} data raw data, deserialized\n * @param {Array} opts Options\n * @param {String|Number} opts.chain The chain for the block header [default: 'mainnet']\n * @param {String} opts.hardfork Hardfork for the block header [default: null, block number-based behaviour]\n * @param {Object} opts.common Alternatively pass a Common instance instead of setting chain/hardfork directly\n * @prop {Buffer} parentHash the blocks' parent's hash\n * @prop {Buffer} uncleHash sha3(rlp_encode(uncle_list))\n * @prop {Buffer} coinbase the miner address\n * @prop {Buffer} stateRoot The root of a Merkle Patricia tree\n * @prop {Buffer} transactionTrie the root of a Trie containing the transactions\n * @prop {Buffer} receiptTrie the root of a Trie containing the transaction Reciept\n * @prop {Buffer} bloom\n * @prop {Buffer} difficulty\n * @prop {Buffer} number the block's height\n * @prop {Buffer} gasLimit\n * @prop {Buffer} gasUsed\n * @prop {Buffer} timestamp\n * @prop {Buffer} extraData\n * @prop {Array.<Buffer>} raw an array of buffers containing the raw blocks.\n */\n\nvar BlockHeader = module.exports = function (data, opts) {\n  opts = opts || {};\n\n  if (opts.common) {\n    if (opts.chain) {\n      throw new Error('Instantiation with both opts.common and opts.chain parameter not allowed!');\n    }\n\n    this._common = opts.common;\n  } else {\n    var chain = opts.chain ? opts.chain : 'mainnet';\n    var hardfork = opts.hardfork ? opts.hardfork : null;\n    this._common = new Common(chain, hardfork);\n  }\n\n  var fields = [{\n    name: 'parentHash',\n    length: 32,\n    default: utils.zeros(32)\n  }, {\n    name: 'uncleHash',\n    default: utils.SHA3_RLP_ARRAY\n  }, {\n    name: 'coinbase',\n    length: 20,\n    default: utils.zeros(20)\n  }, {\n    name: 'stateRoot',\n    length: 32,\n    default: utils.zeros(32)\n  }, {\n    name: 'transactionsTrie',\n    length: 32,\n    default: utils.SHA3_RLP\n  }, {\n    name: 'receiptTrie',\n    length: 32,\n    default: utils.SHA3_RLP\n  }, {\n    name: 'bloom',\n    default: utils.zeros(256)\n  }, {\n    name: 'difficulty',\n    default: Buffer.from([])\n  }, {\n    name: 'number',\n    // TODO: params.homeSteadForkNumber.v left for legacy reasons, replace on future release\n    default: utils.intToBuffer(1150000)\n  }, {\n    name: 'gasLimit',\n    default: Buffer.from('ffffffffffffff', 'hex')\n  }, {\n    name: 'gasUsed',\n    empty: true,\n    default: Buffer.from([])\n  }, {\n    name: 'timestamp',\n    default: Buffer.from([])\n  }, {\n    name: 'extraData',\n    allowZero: true,\n    empty: true,\n    default: Buffer.from([])\n  }, {\n    name: 'mixHash',\n    default: utils.zeros(32) // length: 32\n\n  }, {\n    name: 'nonce',\n    default: utils.zeros(8) // sha3(42)\n\n  }];\n  utils.defineProperties(this, fields, data);\n};\n/**\n * Returns the canoncical difficulty of the block\n * @method canonicalDifficulty\n * @param {Block} parentBlock the parent `Block` of the this header\n * @return {BN}\n */\n\n\nBlockHeader.prototype.canonicalDifficulty = function (parentBlock) {\n  var hardfork = this._common.hardfork() || this._common.activeHardfork(utils.bufferToInt(this.number));\n\n  var blockTs = new BN(this.timestamp);\n  var parentTs = new BN(parentBlock.header.timestamp);\n  var parentDif = new BN(parentBlock.header.difficulty);\n  var minimumDifficulty = new BN(this._common.param('pow', 'minimumDifficulty', hardfork));\n  var offset = parentDif.div(new BN(this._common.param('pow', 'difficultyBoundDivisor', hardfork)));\n  var num = new BN(this.number);\n  var a;\n  var cutoff;\n  var dif;\n\n  if (this._common.hardforkGteHardfork(hardfork, 'byzantium')) {\n    // max((2 if len(parent.uncles) else 1) - ((timestamp - parent.timestamp) // 9), -99) (EIP100)\n    var uncleAddend = parentBlock.header.uncleHash.equals(utils.SHA3_RLP_ARRAY) ? 1 : 2;\n    a = blockTs.sub(parentTs).idivn(9).ineg().iaddn(uncleAddend);\n    cutoff = new BN(-99); // MAX(cutoff, a)\n\n    if (cutoff.cmp(a) === 1) {\n      a = cutoff;\n    }\n\n    dif = parentDif.add(offset.mul(a));\n  }\n\n  if (this._common.hardforkGteHardfork(hardfork, 'constantinople')) {\n    // Constantinople difficulty bomb delay (EIP1234)\n    num.isubn(5000000);\n\n    if (num.ltn(0)) {\n      num = new BN(0);\n    }\n  } else if (this._common.hardforkGteHardfork(hardfork, 'byzantium')) {\n    // Byzantium difficulty bomb delay (EIP649)\n    num.isubn(3000000);\n\n    if (num.ltn(0)) {\n      num = new BN(0);\n    }\n  } else if (this._common.hardforkGteHardfork(hardfork, 'homestead')) {\n    // 1 - (block_timestamp - parent_timestamp) // 10\n    a = blockTs.sub(parentTs).idivn(10).ineg().iaddn(1);\n    cutoff = new BN(-99); // MAX(cutoff, a)\n\n    if (cutoff.cmp(a) === 1) {\n      a = cutoff;\n    }\n\n    dif = parentDif.add(offset.mul(a));\n  } else {\n    // pre-homestead\n    if (parentTs.addn(this._common.param('pow', 'durationLimit', hardfork)).cmp(blockTs) === 1) {\n      dif = offset.add(parentDif);\n    } else {\n      dif = parentDif.sub(offset);\n    }\n  }\n\n  var exp = num.idivn(100000).isubn(2);\n\n  if (!exp.isNeg()) {\n    dif.iadd(new BN(2).pow(exp));\n  }\n\n  if (dif.cmp(minimumDifficulty) === -1) {\n    dif = minimumDifficulty;\n  }\n\n  return dif;\n};\n/**\n * checks that the block's `difficuly` matches the canonical difficulty\n * @method validateDifficulty\n * @param {Block} parentBlock this block's parent\n * @return {Boolean}\n */\n\n\nBlockHeader.prototype.validateDifficulty = function (parentBlock) {\n  var dif = this.canonicalDifficulty(parentBlock);\n  return dif.cmp(new BN(this.difficulty)) === 0;\n};\n/**\n * Validates the gasLimit\n * @method validateGasLimit\n * @param {Block} parentBlock this block's parent\n * @returns {Boolean}\n */\n\n\nBlockHeader.prototype.validateGasLimit = function (parentBlock) {\n  var pGasLimit = new BN(parentBlock.header.gasLimit);\n  var gasLimit = new BN(this.gasLimit);\n  var hardfork = this._common.hardfork() ? this._common.hardfork() : this._common.activeHardfork(this.number);\n  var a = pGasLimit.div(new BN(this._common.param('gasConfig', 'gasLimitBoundDivisor', hardfork)));\n  var maxGasLimit = pGasLimit.add(a);\n  var minGasLimit = pGasLimit.sub(a);\n  return gasLimit.lt(maxGasLimit) && gasLimit.gt(minGasLimit) && gasLimit.gte(this._common.param('gasConfig', 'minGasLimit', hardfork));\n};\n/**\n * Validates the entire block header\n * @method validate\n * @param {Blockchain} blockChain the blockchain that this block is validating against\n * @param {Bignum} [height] if this is an uncle header, this is the height of the block that is including it\n * @param {Function} cb the callback function. The callback is given an `error` if the block is invalid\n */\n\n\nBlockHeader.prototype.validate = function (blockchain, height, cb) {\n  var self = this;\n\n  if (arguments.length === 2) {\n    cb = height;\n    height = false;\n  }\n\n  if (this.isGenesis()) {\n    return cb();\n  } // find the blocks parent\n\n\n  blockchain.getBlock(self.parentHash, function (err, parentBlock) {\n    if (err) {\n      return cb('could not find parent block');\n    }\n\n    self.parentBlock = parentBlock;\n    var number = new BN(self.number);\n\n    if (number.cmp(new BN(parentBlock.header.number).iaddn(1)) !== 0) {\n      return cb('invalid number');\n    }\n\n    if (height) {\n      var dif = height.sub(new BN(parentBlock.header.number));\n\n      if (!(dif.cmpn(8) === -1 && dif.cmpn(1) === 1)) {\n        return cb('uncle block has a parent that is too old or to young');\n      }\n    }\n\n    if (!self.validateDifficulty(parentBlock)) {\n      return cb('invalid Difficulty');\n    }\n\n    if (!self.validateGasLimit(parentBlock)) {\n      return cb('invalid gas limit');\n    }\n\n    if (utils.bufferToInt(parentBlock.header.number) + 1 !== utils.bufferToInt(self.number)) {\n      return cb('invalid heigth');\n    }\n\n    if (utils.bufferToInt(self.timestamp) <= utils.bufferToInt(parentBlock.header.timestamp)) {\n      return cb('invalid timestamp');\n    }\n\n    var hardfork = self._common.hardfork() ? self._common.hardfork() : self._common.activeHardfork(height);\n\n    if (self.extraData.length > self._common.param('vm', 'maxExtraDataSize', hardfork)) {\n      return cb('invalid amount of extra data');\n    }\n\n    cb();\n  });\n};\n/**\n * Returns the sha3 hash of the blockheader\n * @method hash\n * @return {Buffer}\n */\n\n\nBlockHeader.prototype.hash = function () {\n  return utils.rlphash(this.raw);\n};\n/**\n * checks if the blockheader is a genesis header\n * @method isGenesis\n * @return {Boolean}\n */\n\n\nBlockHeader.prototype.isGenesis = function () {\n  return this.number.toString('hex') === '';\n};\n/**\n * turns the header into the canonical genesis block header\n * @method setGenesisParams\n */\n\n\nBlockHeader.prototype.setGenesisParams = function () {\n  this.timestamp = this._common.genesis().timestamp;\n  this.gasLimit = this._common.genesis().gasLimit;\n  this.difficulty = this._common.genesis().difficulty;\n  this.extraData = this._common.genesis().extraData;\n  this.nonce = this._common.genesis().nonce;\n  this.stateRoot = this._common.genesis().stateRoot;\n  this.number = Buffer.from([]);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachLimit;\n\nvar _eachOf = require('./eachOf');\n\nvar _eachOf2 = _interopRequireDefault(_eachOf);\n\nvar _withoutIndex = require('./internal/withoutIndex');\n\nvar _withoutIndex2 = _interopRequireDefault(_withoutIndex);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\n\n\nfunction eachLimit(coll, iteratee, callback) {\n  (0, _eachOf2.default)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nvar EthTx = require('ethereumjs-tx');\n\nvar createResolver = require('../util/createResolver');\n\nmodule.exports = createResolver('eth-tx', EthTx, mapFromEthObj);\n\nfunction mapFromEthObj(tx, options, callback) {\n  var paths = []; // external links (none)\n  // external links as data (none)\n  // internal data\n\n  paths.push({\n    path: 'nonce',\n    value: tx.nonce\n  });\n  paths.push({\n    path: 'gasPrice',\n    value: tx.gasPrice\n  });\n  paths.push({\n    path: 'gasLimit',\n    value: tx.gasLimit\n  });\n  paths.push({\n    path: 'toAddress',\n    value: tx.to\n  });\n  paths.push({\n    path: 'value',\n    value: tx.value\n  });\n  paths.push({\n    path: 'data',\n    value: tx.data\n  });\n  paths.push({\n    path: 'v',\n    value: tx.v\n  });\n  paths.push({\n    path: 'r',\n    value: tx.r\n  });\n  paths.push({\n    path: 's',\n    value: tx.s\n  }); // helpers\n\n  paths.push({\n    path: 'fromAddress',\n    value: tx.from\n  });\n  paths.push({\n    path: 'signature',\n    value: [tx.v, tx.r, tx.s]\n  });\n  paths.push({\n    path: 'isContractPublish',\n    value: tx.toCreationAddress()\n  });\n  callback(null, paths);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = doUntil;\n\nvar _doWhilst = require('./doWhilst');\n\nvar _doWhilst2 = _interopRequireDefault(_doWhilst);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\n\n\nfunction doUntil(iteratee, test, callback) {\n  (0, _doWhilst2.default)(iteratee, function () {\n    return !test.apply(this, arguments);\n  }, callback);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = doWhilst;\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _slice = require('./internal/slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\n\n\nfunction doWhilst(iteratee, test, callback) {\n  callback = (0, _onlyOnce2.default)(callback || _noop2.default);\n\n  var _iteratee = (0, _wrapAsync2.default)(iteratee);\n\n  var next = function next(err\n  /*, ...args*/\n  ) {\n    if (err) return callback(err);\n    var args = (0, _slice2.default)(arguments, 1);\n    if (test.apply(this, args)) return _iteratee(next);\n    callback.apply(null, [null].concat(args));\n  };\n\n  _iteratee(next);\n}\n\nmodule.exports = exports['default'];","var once = exports.once = function (value) {\n  return function (abort, cb) {\n    if (abort) return cb(abort);\n\n    if (value != null) {\n      var _value = value;\n      value = null;\n      cb(null, _value);\n    } else cb(true);\n  };\n};\n\nvar depthFirst = exports.depthFirst = function (start, createStream) {\n  var reads = [],\n      ended;\n  reads.unshift(once(start));\n  return function next(end, cb) {\n    if (!reads.length) return cb(true);\n    if (ended) return cb(ended);\n    reads[0](end, function (end, data) {\n      if (end) {\n        if (end !== true) {\n          ended = end;\n          reads.shift();\n\n          while (reads.length) {\n            reads.shift()(end, function () {});\n          }\n\n          return cb(end);\n        } //if this stream has ended, go to the next queue\n\n\n        reads.shift();\n        return next(null, cb);\n      }\n\n      reads.unshift(createStream(data));\n      cb(end, data);\n    });\n  };\n}; //width first is just like depth first,\n//but push each new stream onto the end of the queue\n\n\nvar widthFirst = exports.widthFirst = function (start, createStream) {\n  var reads = [];\n  reads.push(once(start));\n  return function next(end, cb) {\n    if (!reads.length) return cb(true);\n    reads[0](end, function (end, data) {\n      if (end) {\n        reads.shift();\n        return next(null, cb);\n      }\n\n      reads.push(createStream(data));\n      cb(end, data);\n    });\n  };\n}; //this came out different to the first (strm)\n//attempt at leafFirst, but it's still a valid\n//topological sort.\n\n\nvar leafFirst = exports.leafFirst = function (start, createStream) {\n  var reads = [];\n  var output = [];\n  reads.push(once(start));\n  return function next(end, cb) {\n    reads[0](end, function (end, data) {\n      if (end) {\n        reads.shift();\n        if (!output.length) return cb(true);\n        return cb(null, output.shift());\n      }\n\n      reads.unshift(createStream(data));\n      output.unshift(data);\n      next(null, cb);\n    });\n  };\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _doParallel = require('./internal/doParallel');\n\nvar _doParallel2 = _interopRequireDefault(_doParallel);\n\nvar _map = require('./internal/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\n\n\nexports.default = (0, _doParallel2.default)(_map2.default);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = doParallel;\n\nvar _eachOf = require('../eachOf');\n\nvar _eachOf2 = _interopRequireDefault(_eachOf);\n\nvar _wrapAsync = require('./wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction doParallel(fn) {\n  return function (obj, iteratee, callback) {\n    return fn(_eachOf2.default, obj, (0, _wrapAsync2.default)(iteratee), callback);\n  };\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachOfLimit;\n\nvar _eachOfLimit2 = require('./internal/eachOfLimit');\n\nvar _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\n\n\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _asyncMap;\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _wrapAsync = require('./wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n  callback = callback || _noop2.default;\n  arr = arr || [];\n  var results = [];\n  var counter = 0;\n\n  var _iteratee = (0, _wrapAsync2.default)(iteratee);\n\n  eachfn(arr, function (value, _, callback) {\n    var index = counter++;\n\n    _iteratee(value, function (err, v) {\n      results[index] = v;\n      callback(err);\n    });\n  }, function (err) {\n    callback(err, results);\n  });\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nvar isOptionObject = require('is-plain-obj');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.propertyIsEnumerable;\n\nvar defineProperty = function defineProperty(obj, name, value) {\n  return Object.defineProperty(obj, name, {\n    value: value,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  });\n};\n\nvar globalThis = this;\nvar defaultMergeOpts = {\n  concatArrays: false\n};\n\nvar getEnumerableOwnPropertyKeys = function getEnumerableOwnPropertyKeys(value) {\n  var keys = [];\n\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      keys.push(key);\n    }\n  }\n  /* istanbul ignore else  */\n\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(value);\n\n    for (var i = 0; i < symbols.length; i++) {\n      if (propIsEnumerable.call(value, symbols[i])) {\n        keys.push(symbols[i]);\n      }\n    }\n  }\n\n  return keys;\n};\n\nfunction clone(value) {\n  if (Array.isArray(value)) {\n    return cloneArray(value);\n  }\n\n  if (isOptionObject(value)) {\n    return cloneOptionObject(value);\n  }\n\n  return value;\n}\n\nfunction cloneArray(array) {\n  var result = array.slice(0, 0);\n  getEnumerableOwnPropertyKeys(array).forEach(function (key) {\n    defineProperty(result, key, clone(array[key]));\n  });\n  return result;\n}\n\nfunction cloneOptionObject(obj) {\n  var result = Object.getPrototypeOf(obj) === null ? Object.create(null) : {};\n  getEnumerableOwnPropertyKeys(obj).forEach(function (key) {\n    defineProperty(result, key, clone(obj[key]));\n  });\n  return result;\n}\n/**\n * @param merged {already cloned}\n * @return {cloned Object}\n */\n\n\nvar mergeKeys = function mergeKeys(merged, source, keys, mergeOpts) {\n  keys.forEach(function (key) {\n    // Do not recurse into prototype chain of merged\n    if (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n      defineProperty(merged, key, merge(merged[key], source[key], mergeOpts));\n    } else {\n      defineProperty(merged, key, clone(source[key]));\n    }\n  });\n  return merged;\n};\n/**\n * @param merged {already cloned}\n * @return {cloned Object}\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\n\n\nvar concatArrays = function concatArrays(merged, source, mergeOpts) {\n  var result = merged.slice(0, 0);\n  var resultIndex = 0;\n  [merged, source].forEach(function (array) {\n    var indices = []; // `result.concat(array)` with cloning\n\n    for (var k = 0; k < array.length; k++) {\n      if (!hasOwnProperty.call(array, k)) {\n        continue;\n      }\n\n      indices.push(String(k));\n\n      if (array === merged) {\n        // Already cloned\n        defineProperty(result, resultIndex++, array[k]);\n      } else {\n        defineProperty(result, resultIndex++, clone(array[k]));\n      }\n    } // Merge non-index keys\n\n\n    result = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(function (key) {\n      return indices.indexOf(key) === -1;\n    }), mergeOpts);\n  });\n  return result;\n};\n/**\n * @param merged {already cloned}\n * @return {cloned Object}\n */\n\n\nfunction merge(merged, source, mergeOpts) {\n  if (mergeOpts.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n    return concatArrays(merged, source, mergeOpts);\n  }\n\n  if (!isOptionObject(source) || !isOptionObject(merged)) {\n    return clone(source);\n  }\n\n  return mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), mergeOpts);\n}\n\nmodule.exports = function () {\n  var mergeOpts = merge(clone(defaultMergeOpts), this !== globalThis && this || {}, defaultMergeOpts);\n  var merged = {\n    foobar: {}\n  };\n\n  for (var i = 0; i < arguments.length; i++) {\n    var option = arguments[i];\n\n    if (option === undefined) {\n      continue;\n    }\n\n    if (!isOptionObject(option)) {\n      throw new TypeError('`' + option + '` is not an Option Object');\n    }\n\n    merged = merge(merged, {\n      foobar: option\n    }, mergeOpts);\n  }\n\n  return merged.foobar;\n};","'use strict';\n\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n  var prototype;\n  return toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};","'use strict';\n\nvar CID = require('cids');\n\nvar multihash = require('multihashing-async'); // binary resolver\n\n\nmodule.exports = {\n  resolver: {\n    multicodec: 'raw',\n    defaultHashAlg: 'sha2-256',\n    resolve: function resolve(binaryBlob, path, callback) {\n      callback(null, {\n        value: binaryBlob,\n        remainderPath: ''\n      });\n    },\n    tree: function tree(binaryBlob, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n      }\n\n      callback(null, []);\n    }\n  },\n  util: {\n    deserialize: function deserialize(data, cb) {\n      cb(null, data);\n    },\n    serialize: function serialize(data, cb) {\n      cb(null, data);\n    },\n    cid: function cid(data, options, cb) {\n      if (typeof options === 'function') {\n        cb = options;\n        options = {};\n      }\n\n      options = options || {};\n      var hashAlg = options.hashAlg || 'sha2-256';\n      var version = typeof options.version === 'undefined' ? 1 : options.version;\n      multihash(data, hashAlg, function (err, mh) {\n        if (err) return cb(err);\n        cb(null, new CID(version, 'raw', mh));\n      });\n    }\n  }\n};","var script = require('./script');\n\nmodule.exports = {\n  Block: require('./block'),\n  ECPair: require('./ecpair'),\n  Transaction: require('./transaction'),\n  TransactionBuilder: require('./transaction_builder'),\n  address: require('./address'),\n  bip32: require('bip32'),\n  crypto: require('./crypto'),\n  networks: require('./networks'),\n  opcodes: require('bitcoin-ops'),\n  payments: require('./payments'),\n  script: script\n};","'use strict';\n\nvar utils = exports;\n\nvar BN = require('bn.js');\n\nvar minAssert = require('minimalistic-assert');\n\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode; // Represent num in a w-NAF form\n\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << w + 1;\n  var k = num.clone();\n\n  while (k.cmpn(1) >= 0) {\n    var z;\n\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf.push(z); // Optimization, shift by word if possible\n\n    var shift = k.cmpn(0) !== 0 && k.andln(ws - 1) === 0 ? w + 1 : 1;\n\n    for (var i = 1; i < shift; i++) {\n      naf.push(0);\n    }\n\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\n\nutils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\nfunction getJSF(k1, k2) {\n  var jsf = [[], []];\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = k1.andln(3) + d1 & 3;\n    var m24 = k2.andln(3) + d2 & 3;\n    if (m14 === 3) m14 = -1;\n    if (m24 === 3) m24 = -1;\n    var u1;\n\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = k1.andln(7) + d1 & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n    }\n\n    jsf[0].push(u1);\n    var u2;\n\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = k2.andln(7) + d2 & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n    }\n\n    jsf[1].push(u2); // Second phase\n\n    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\n\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n  };\n}\n\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n}\n\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\n\nutils.intFromLE = intFromLE;","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4); // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n\n    for (var k = j + doubles.step - 1; k >= j; k--) {\n      nafW = (nafW << 1) + naf[k];\n    }\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--) {\n      k++;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n    var z = naf[i];\n    assert(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (var i = 0; i < len; i++) {\n    wnd[i] = null;\n  }\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq()\n/*other*/\n{\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) {\n      acc = acc.dbl();\n    }\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) {\n    res[i] = res[i - 1].add(dbl);\n  }\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) {\n    r = r.dbl();\n  }\n\n  return r;\n};","'use strict';\n\nvar curve = require('../curve');\n\nvar elliptic = require('../../elliptic');\n\nvar BN = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function endoMul(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function negate(p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (var i = 0; i < pow; i++) {\n      r = r.dbl();\n    }\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};","'use strict';\n\nvar curve = require('../curve');\n\nvar BN = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\n\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {// No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z); // AA = A^2\n\n  var aa = a.redSqr(); // B = X1 - Z1\n\n  var b = this.x.redSub(this.z); // BB = B^2\n\n  var bb = b.redSqr(); // C = AA - BB\n\n  var c = aa.redSub(bb); // X3 = AA * BB\n\n  var nx = aa.redMul(bb); // Z3 = C * (BB + A24 * C)\n\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z); // B = X2 - Z2\n\n  var b = this.x.redSub(this.z); // C = X3 + Z3\n\n  var c = p.x.redAdd(p.z); // D = X3 - Z3\n\n  var d = p.x.redSub(p.z); // DA = D * A\n\n  var da = d.redMul(a); // CB = C * B\n\n  var cb = c.redMul(b); // X5 = Z1 * (DA + CB)^2\n\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr()); // Z5 = X1 * (DA - CB)^2\n\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n\n  var b = this.curve.point(null, null); // (N / 2) * Q\n\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) {\n    bits.push(t.andln(1));\n  }\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c); // N * Q = 2 * ((N / 2) * Q + Q))\n\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c); // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\n      a = a.dbl();\n    }\n  }\n\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n  return this.x.fromRed();\n};","'use strict';\n\nvar curve = require('../curve');\n\nvar elliptic = require('../../elliptic');\n\nvar BN = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n  Base.call(this, 'edwards', conf);\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\n\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC) return num;else return this.c.redMul(num);\n}; // Just for compatibility with Short curve\n\n\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red) y = y.toRed(this.red); // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');\n  if (x.fromRed().isOdd() !== odd) x = x.redNeg();\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity()) return true; // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\n  point.normalize();\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one; // Use extended coordinates\n\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n  // A = X1^2\n  var a = this.x.redSqr(); // B = Y1^2\n\n  var b = this.y.redSqr(); // C = 2 * Z1^2\n\n  var c = this.z.redSqr();\n  c = c.redIAdd(c); // D = a * A\n\n  var d = this.curve._mulA(a); // E = (X1 + Y1)^2 - A - B\n\n\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b); // G = D + B\n\n  var g = d.redAdd(b); // F = G - C\n\n  var f = g.redSub(c); // H = D - B\n\n  var h = d.redSub(b); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr(); // C = X1^2\n\n  var c = this.x.redSqr(); // D = Y1^2\n\n  var d = this.y.redSqr();\n  var nx;\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c); // F = E + D\n\n\n    var f = e.redAdd(d);\n\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two)); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F^2 - 2 * F\n\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr(); // J = F - 2 * H\n\n      var j = f.redSub(h).redISub(h); // X3 = (B-C-D)*J\n\n      nx = b.redSub(c).redISub(d).redMul(j); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F * J\n\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d); // H = (c * Z1)^2\n\n    var h = this.curve._mulC(this.z).redSqr(); // J = E - 2 * H\n\n\n    var j = e.redSub(h).redSub(h); // X3 = c * (B - E) * J\n\n    nx = this.curve._mulC(b.redISub(e)).redMul(j); // Y3 = c * E * (C - D)\n\n    ny = this.curve._mulC(e).redMul(c.redISub(d)); // Z3 = E * J\n\n    nz = e.redMul(j);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this; // Double in extended coordinates\n\n  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x)); // B = (Y1 + X1) * (Y2 + X2)\n\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x)); // C = T1 * k * T2\n\n  var c = this.t.redMul(this.curve.dd).redMul(p.t); // D = Z1 * 2 * Z2\n\n  var d = this.z.redMul(p.z.redAdd(p.z)); // E = B - A\n\n  var e = b.redSub(a); // F = D - C\n\n  var f = d.redSub(c); // G = D + C\n\n  var g = d.redAdd(c); // H = B + A\n\n  var h = b.redAdd(a); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z); // B = A^2\n\n  var b = a.redSqr(); // C = X1 * X2\n\n  var c = this.x.redMul(p.x); // D = Y1 * Y2\n\n  var d = this.y.redMul(p.y); // E = d * C * D\n\n  var e = this.curve.d.redMul(c).redMul(d); // F = B - E\n\n  var f = b.redSub(e); // G = B + E\n\n  var g = b.redAdd(e); // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c))); // Z3 = F * G\n\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c)); // Z3 = c * F * G\n\n    nz = this.curve._mulC(f).redMul(g);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity()) return p;\n  if (p.isInfinity()) return this;\n  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne) return this; // Normalize coordinates\n\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t) this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n}; // Compatibility with BaseCurve\n\n\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\n\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short') this.curve = new elliptic.curve.short(options);else if (options.type === 'edwards') this.curve = new elliptic.curve.edwards(options);else this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\n\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n});\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n});\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n});\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n});\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n});\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['9']\n});\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n  '6666666666666666666666666666666666666666666666666666666666666658']\n});\nvar pre;\n\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [{\n    a: '3086d221a7d46bcde86c90e49284eb15',\n    b: '-e4437ed6010e88286f547fa90abfe4c3'\n  }, {\n    a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n    b: '3086d221a7d46bcde86c90e49284eb15'\n  }],\n  gRed: false,\n  g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n});","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');","'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i++) {\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n  }\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n  SHA256.call(this);\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n};","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n  SHA512.call(this);\n  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n}\n\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n};","'use strict';\n\nvar utils = require('./utils');\n\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.endian = 'little';\n}\n\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n}\n\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];","'use strict';\n\nvar utils = require('./utils');\n\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize); // Add padding to key\n\n  for (var i = key.length; i < this.blockSize; i++) {\n    key.push(0);\n  }\n\n  for (i = 0; i < key.length; i++) {\n    key[i] ^= 0x36;\n  }\n\n  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n  for (i = 0; i < key.length; i++) {\n    key[i] ^= 0x6a;\n  }\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};","module.exports = {\n  doubles: {\n    step: 4,\n    points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]\n  },\n  naf: {\n    wnd: 7,\n    points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]\n  }\n};","'use strict';\n\nvar BN = require('bn.js');\n\nvar HmacDRBG = require('hmac-drbg');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\n\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n    options = elliptic.curves[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof elliptic.curves.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex'); // Perform primitive values validation\n\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null) return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};","'use strict';\n\nvar hash = require('hash.js');\n\nvar utils = require('minimalistic-crypto-utils');\n\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils.encode(res, enc);\n};","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf;\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0 && r[1] & 0x80) {\n    r = r.slice(1);\n  }\n\n  if (s[0] === 0 && s[1] & 0x80) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};","'use strict';\n\nvar hash = require('hash.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\n\nvar KeyPair = require('./key');\n\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n  if (!(this instanceof EDDSA)) return new EDDSA(curve);\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\n\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({\n    R: R,\n    S: S,\n    Rencoded: Rencoded\n  });\n};\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\n\n\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n\n  for (var i = 0; i < arguments.length; i++) {\n    hash.update(arguments[i]);\n  }\n\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature) return sig;\n  return new Signature(this, sig);\n};\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\n\n\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};","'use strict';\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\n\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(eddsa, {\n    pub: pub\n  });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair) return secret;\n  return new KeyPair(eddsa, {\n    secret: secret\n  });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n  return a;\n});\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\n\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n  if (typeof sig !== 'object') sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n  if (sig.S instanceof BN) this._S = sig.S;\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;","var createHmac = require('create-hmac');\n\nvar ONE1 = Buffer.alloc(1, 1);\nvar ZERO1 = Buffer.alloc(1, 0); // https://tools.ietf.org/html/rfc6979#section-3.2\n\nfunction deterministicGenerateK(hash, x, checkSig, isPrivate) {\n  // Step A, ignored as hash already provided\n  // Step B\n  // Step C\n  var k = Buffer.alloc(32, 0);\n  var v = Buffer.alloc(32, 1); // Step D\n\n  k = createHmac('sha256', k).update(v).update(ZERO1).update(x).update(hash).digest(); // Step E\n\n  v = createHmac('sha256', k).update(v).digest(); // Step F\n\n  k = createHmac('sha256', k).update(v).update(ONE1).update(x).update(hash).digest(); // Step G\n\n  v = createHmac('sha256', k).update(v).digest(); // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n\n  v = createHmac('sha256', k).update(v).digest();\n  var T = v; // Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA\n\n  while (!isPrivate(T) || !checkSig(T)) {\n    k = createHmac('sha256', k).update(v).update(ZERO1).digest();\n    v = createHmac('sha256', k).update(v).digest(); // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n\n    v = createHmac('sha256', k).update(v).digest();\n    T = v;\n  }\n\n  return T;\n}\n\nmodule.exports = deterministicGenerateK;","var OPS = require('bitcoin-ops');\n\nfunction encodingLength(i) {\n  return i < OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\n\nfunction encode(buffer, number, offset) {\n  var size = encodingLength(number); // ~6 bit\n\n  if (size === 1) {\n    buffer.writeUInt8(number, offset); // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(number, offset + 1); // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(number, offset + 1); // 32 bit\n  } else {\n    buffer.writeUInt8(OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(number, offset + 1);\n  }\n\n  return size;\n}\n\nfunction decode(buffer, offset) {\n  var opcode = buffer.readUInt8(offset);\n  var number, size; // ~6 bit\n\n  if (opcode < OPS.OP_PUSHDATA1) {\n    number = opcode;\n    size = 1; // 8 bit\n  } else if (opcode === OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    number = buffer.readUInt8(offset + 1);\n    size = 2; // 16 bit\n  } else if (opcode === OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    number = buffer.readUInt16LE(offset + 1);\n    size = 3; // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    number = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n\n  return {\n    opcode: opcode,\n    number: number,\n    size: size\n  };\n}\n\nmodule.exports = {\n  encodingLength: encodingLength,\n  encode: encode,\n  decode: decode\n};","var NATIVE = require('./native');\n\nvar ERRORS = require('./errors');\n\nfunction _Buffer(value) {\n  return Buffer.isBuffer(value);\n}\n\nfunction Hex(value) {\n  return typeof value === 'string' && /^([0-9a-f]{2})+$/i.test(value);\n}\n\nfunction _LengthN(type, length) {\n  var name = type.toJSON();\n\n  function Length(value) {\n    if (!type(value)) return false;\n    if (value.length === length) return true;\n    throw ERRORS.tfCustomError(name + '(Length: ' + length + ')', name + '(Length: ' + value.length + ')');\n  }\n\n  Length.toJSON = function () {\n    return name;\n  };\n\n  return Length;\n}\n\nvar _ArrayN = _LengthN.bind(null, NATIVE.Array);\n\nvar _BufferN = _LengthN.bind(null, _Buffer);\n\nvar _HexN = _LengthN.bind(null, Hex);\n\nvar _StringN = _LengthN.bind(null, NATIVE.String);\n\nfunction Range(a, b, f) {\n  f = f || NATIVE.Number;\n\n  function _range(value, strict) {\n    return f(value, strict) && value > a && value < b;\n  }\n\n  _range.toJSON = function () {\n    return \"\".concat(f.toJSON(), \" between [\").concat(a, \", \").concat(b, \"]\");\n  };\n\n  return _range;\n}\n\nvar INT53_MAX = Math.pow(2, 53) - 1;\n\nfunction Finite(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\nfunction Int8(value) {\n  return value << 24 >> 24 === value;\n}\n\nfunction Int16(value) {\n  return value << 16 >> 16 === value;\n}\n\nfunction Int32(value) {\n  return (value | 0) === value;\n}\n\nfunction Int53(value) {\n  return typeof value === 'number' && value >= -INT53_MAX && value <= INT53_MAX && Math.floor(value) === value;\n}\n\nfunction UInt8(value) {\n  return (value & 0xff) === value;\n}\n\nfunction UInt16(value) {\n  return (value & 0xffff) === value;\n}\n\nfunction UInt32(value) {\n  return value >>> 0 === value;\n}\n\nfunction UInt53(value) {\n  return typeof value === 'number' && value >= 0 && value <= INT53_MAX && Math.floor(value) === value;\n}\n\nvar types = {\n  ArrayN: _ArrayN,\n  Buffer: _Buffer,\n  BufferN: _BufferN,\n  Finite: Finite,\n  Hex: Hex,\n  HexN: _HexN,\n  Int8: Int8,\n  Int16: Int16,\n  Int32: Int32,\n  Int53: Int53,\n  Range: Range,\n  StringN: _StringN,\n  UInt8: UInt8,\n  UInt16: UInt16,\n  UInt32: UInt32,\n  UInt53: UInt53\n};\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t;\n  }.bind(null, typeName);\n}\n\nmodule.exports = types;","var OPS = require('./index.json');\n\nvar map = {};\n\nfor (var op in OPS) {\n  var code = OPS[op];\n  map[code] = op;\n}\n\nmodule.exports = map;","var bip66 = require('bip66');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar ZERO = Buffer.alloc(1, 0);\n\nfunction toDER(x) {\n  var i = 0;\n\n  while (x[i] === 0) {\n    ++i;\n  }\n\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return Buffer.concat([ZERO, x], 1 + x.length);\n  return x;\n}\n\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  var buffer = Buffer.alloc(32, 0);\n  var bstart = Math.max(0, 32 - x.length);\n  x.copy(buffer, bstart);\n  return buffer;\n} // BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\n\n\nfunction decode(buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4) throw new Error('Invalid hashType ' + hashType);\n  var decode = bip66.decode(buffer.slice(0, -1));\n  var r = fromDER(decode.r);\n  var s = fromDER(decode.s);\n  return {\n    signature: Buffer.concat([r, s], 64),\n    hashType: hashType\n  };\n}\n\nfunction encode(signature, hashType) {\n  typeforce({\n    signature: types.BufferN(64),\n    hashType: types.UInt8\n  }, {\n    signature: signature,\n    hashType: hashType\n  });\n  var hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4) throw new Error('Invalid hashType ' + hashType);\n  var hashTypeBuffer = Buffer.allocUnsafe(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  var r = toDER(signature.slice(0, 32));\n  var s = toDER(signature.slice(32, 64));\n  return Buffer.concat([bip66.encode(r, s), hashTypeBuffer]);\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode\n};","var Buffer = require('safe-buffer').Buffer;\n\nvar bcrypto = require('./crypto');\n\nvar fastMerkleRoot = require('merkle-lib/fastRoot');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar varuint = require('varuint-bitcoin');\n\nvar Transaction = require('./transaction');\n\nfunction Block() {\n  this.version = 1;\n  this.prevHash = null;\n  this.merkleRoot = null;\n  this.timestamp = 0;\n  this.bits = 0;\n  this.nonce = 0;\n}\n\nBlock.fromBuffer = function (buffer) {\n  if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n  var offset = 0;\n\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n\n  function readUInt32() {\n    var i = buffer.readUInt32LE(offset);\n    offset += 4;\n    return i;\n  }\n\n  function readInt32() {\n    var i = buffer.readInt32LE(offset);\n    offset += 4;\n    return i;\n  }\n\n  var block = new Block();\n  block.version = readInt32();\n  block.prevHash = readSlice(32);\n  block.merkleRoot = readSlice(32);\n  block.timestamp = readUInt32();\n  block.bits = readUInt32();\n  block.nonce = readUInt32();\n  if (buffer.length === 80) return block;\n\n  function readVarInt() {\n    var vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n\n  function readTransaction() {\n    var tx = Transaction.fromBuffer(buffer.slice(offset), true);\n    offset += tx.byteLength();\n    return tx;\n  }\n\n  var nTransactions = readVarInt();\n  block.transactions = [];\n\n  for (var i = 0; i < nTransactions; ++i) {\n    var tx = readTransaction();\n    block.transactions.push(tx);\n  }\n\n  return block;\n};\n\nBlock.prototype.byteLength = function (headersOnly) {\n  if (headersOnly || !this.transactions) return 80;\n  return 80 + varuint.encodingLength(this.transactions.length) + this.transactions.reduce(function (a, x) {\n    return a + x.byteLength();\n  }, 0);\n};\n\nBlock.fromHex = function (hex) {\n  return Block.fromBuffer(Buffer.from(hex, 'hex'));\n};\n\nBlock.prototype.getHash = function () {\n  return bcrypto.hash256(this.toBuffer(true));\n};\n\nBlock.prototype.getId = function () {\n  return this.getHash().reverse().toString('hex');\n};\n\nBlock.prototype.getUTCDate = function () {\n  var date = new Date(0); // epoch\n\n  date.setUTCSeconds(this.timestamp);\n  return date;\n}; // TODO: buffer, offset compatibility\n\n\nBlock.prototype.toBuffer = function (headersOnly) {\n  var buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n  var offset = 0;\n\n  function writeSlice(slice) {\n    slice.copy(buffer, offset);\n    offset += slice.length;\n  }\n\n  function writeInt32(i) {\n    buffer.writeInt32LE(i, offset);\n    offset += 4;\n  }\n\n  function writeUInt32(i) {\n    buffer.writeUInt32LE(i, offset);\n    offset += 4;\n  }\n\n  writeInt32(this.version);\n  writeSlice(this.prevHash);\n  writeSlice(this.merkleRoot);\n  writeUInt32(this.timestamp);\n  writeUInt32(this.bits);\n  writeUInt32(this.nonce);\n  if (headersOnly || !this.transactions) return buffer;\n  varuint.encode(this.transactions.length, buffer, offset);\n  offset += varuint.encode.bytes;\n  this.transactions.forEach(function (tx) {\n    var txSize = tx.byteLength(); // TODO: extract from toBuffer?\n\n    tx.toBuffer(buffer, offset);\n    offset += txSize;\n  });\n  return buffer;\n};\n\nBlock.prototype.toHex = function (headersOnly) {\n  return this.toBuffer(headersOnly).toString('hex');\n};\n\nBlock.calculateTarget = function (bits) {\n  var exponent = ((bits & 0xff000000) >> 24) - 3;\n  var mantissa = bits & 0x007fffff;\n  var target = Buffer.alloc(32, 0);\n  target.writeUIntBE(mantissa, 29 - exponent, 3);\n  return target;\n};\n\nBlock.calculateMerkleRoot = function (transactions) {\n  typeforce([{\n    getHash: types.Function\n  }], transactions);\n  if (transactions.length === 0) throw TypeError('Cannot compute merkle root for zero transactions');\n  var hashes = transactions.map(function (transaction) {\n    return transaction.getHash();\n  });\n  return fastMerkleRoot(hashes, bcrypto.hash256);\n};\n\nBlock.prototype.checkMerkleRoot = function () {\n  if (!this.transactions) return false;\n  var actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n  return this.merkleRoot.compare(actualMerkleRoot) === 0;\n};\n\nBlock.prototype.checkProofOfWork = function () {\n  var hash = this.getHash().reverse();\n  var target = Block.calculateTarget(this.bits);\n  return hash.compare(target) <= 0;\n};\n\nmodule.exports = Block;","// constant-space merkle root calculation algorithm\nmodule.exports = function fastRoot(values, digestFn) {\n  if (!Array.isArray(values)) throw TypeError('Expected values Array');\n  if (typeof digestFn !== 'function') throw TypeError('Expected digest Function');\n  var length = values.length;\n  var results = values.concat();\n\n  while (length > 1) {\n    var j = 0;\n\n    for (var i = 0; i < length; i += 2, ++j) {\n      var left = results[i];\n      var right = i + 1 === length ? left : results[i + 1];\n      var data = Buffer.concat([left, right]);\n      results[j] = digestFn(data);\n    }\n\n    length = j;\n  }\n\n  return results[0];\n};","// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number') throw new Error('cannot write a non-number as a number');\n  if (value < 0) throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value) throw new Error('value has a fractional component');\n}\n\nfunction readUInt64LE(buffer, offset) {\n  var a = buffer.readUInt32LE(offset);\n  var b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\n\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\n\nmodule.exports = {\n  readUInt64LE: readUInt64LE,\n  writeUInt64LE: writeUInt64LE\n};","'use strict';\n\nvar base58 = require('bs58');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode(payload) {\n    var checksum = checksumFn(payload);\n    return base58.encode(Buffer.concat([payload, checksum], payload.length + 4));\n  }\n\n  function decodeRaw(buffer) {\n    var payload = buffer.slice(0, -4);\n    var checksum = buffer.slice(-4);\n    var newChecksum = checksumFn(payload);\n    if (checksum[0] ^ newChecksum[0] | checksum[1] ^ newChecksum[1] | checksum[2] ^ newChecksum[2] | checksum[3] ^ newChecksum[3]) return;\n    return payload;\n  } // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n\n\n  function decodeUnsafe(string) {\n    var buffer = base58.decodeUnsafe(string);\n    if (!buffer) return;\n    return decodeRaw(buffer);\n  }\n\n  function decode(string) {\n    var buffer = base58.decode(string);\n    var payload = decodeRaw(buffer, checksumFn);\n    if (!payload) throw new Error('Invalid checksum');\n    return payload;\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  };\n};","var Buffer = require('safe-buffer').Buffer;\n\nvar baddress = require('./address');\n\nvar bcrypto = require('./crypto');\n\nvar bscript = require('./script');\n\nvar networks = require('./networks');\n\nvar ops = require('bitcoin-ops');\n\nvar payments = require('./payments');\n\nvar typeforce = require('typeforce');\n\nvar types = require('./types');\n\nvar classify = require('./classify');\n\nvar SCRIPT_TYPES = classify.types;\n\nvar ECPair = require('./ecpair');\n\nvar Transaction = require('./transaction');\n\nfunction expandInput(scriptSig, witnessStack, type, scriptPubKey) {\n  if (scriptSig.length === 0 && witnessStack.length === 0) return {};\n\n  if (!type) {\n    var ssType = classify.input(scriptSig, true);\n    var wsType = classify.witness(witnessStack, true);\n    if (ssType === SCRIPT_TYPES.NONSTANDARD) ssType = undefined;\n    if (wsType === SCRIPT_TYPES.NONSTANDARD) wsType = undefined;\n    type = ssType || wsType;\n  }\n\n  switch (type) {\n    case SCRIPT_TYPES.P2WPKH:\n      {\n        var _payments$p2wpkh = payments.p2wpkh({\n          witness: witnessStack\n        }),\n            output = _payments$p2wpkh.output,\n            pubkey = _payments$p2wpkh.pubkey,\n            signature = _payments$p2wpkh.signature;\n\n        return {\n          prevOutScript: output,\n          prevOutType: SCRIPT_TYPES.P2WPKH,\n          pubkeys: [pubkey],\n          signatures: [signature]\n        };\n      }\n\n    case SCRIPT_TYPES.P2PKH:\n      {\n        var _payments$p2pkh = payments.p2pkh({\n          input: scriptSig\n        }),\n            _output = _payments$p2pkh.output,\n            _pubkey = _payments$p2pkh.pubkey,\n            _signature = _payments$p2pkh.signature;\n\n        return {\n          prevOutScript: _output,\n          prevOutType: SCRIPT_TYPES.P2PKH,\n          pubkeys: [_pubkey],\n          signatures: [_signature]\n        };\n      }\n\n    case SCRIPT_TYPES.P2PK:\n      {\n        var _payments$p2pk = payments.p2pk({\n          input: scriptSig\n        }),\n            _signature2 = _payments$p2pk.signature;\n\n        return {\n          prevOutType: SCRIPT_TYPES.P2PK,\n          pubkeys: [undefined],\n          signatures: [_signature2]\n        };\n      }\n\n    case SCRIPT_TYPES.P2MS:\n      {\n        var _payments$p2ms = payments.p2ms({\n          input: scriptSig,\n          output: scriptPubKey\n        }, {\n          allowIncomplete: true\n        }),\n            m = _payments$p2ms.m,\n            pubkeys = _payments$p2ms.pubkeys,\n            signatures = _payments$p2ms.signatures;\n\n        return {\n          prevOutType: SCRIPT_TYPES.P2MS,\n          pubkeys: pubkeys,\n          signatures: signatures,\n          maxSignatures: m\n        };\n      }\n  }\n\n  if (type === SCRIPT_TYPES.P2SH) {\n    var _payments$p2sh = payments.p2sh({\n      input: scriptSig,\n      witness: witnessStack\n    }),\n        _output2 = _payments$p2sh.output,\n        redeem = _payments$p2sh.redeem;\n\n    var outputType = classify.output(redeem.output);\n    var expanded = expandInput(redeem.input, redeem.witness, outputType, redeem.output);\n    if (!expanded.prevOutType) return {};\n    return {\n      prevOutScript: _output2,\n      prevOutType: SCRIPT_TYPES.P2SH,\n      redeemScript: redeem.output,\n      redeemScriptType: expanded.prevOutType,\n      witnessScript: expanded.witnessScript,\n      witnessScriptType: expanded.witnessScriptType,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures\n    };\n  }\n\n  if (type === SCRIPT_TYPES.P2WSH) {\n    var _payments$p2wsh = payments.p2wsh({\n      input: scriptSig,\n      witness: witnessStack\n    }),\n        _output3 = _payments$p2wsh.output,\n        _redeem = _payments$p2wsh.redeem;\n\n    var _outputType = classify.output(_redeem.output);\n\n    var _expanded;\n\n    if (_outputType === SCRIPT_TYPES.P2WPKH) {\n      _expanded = expandInput(_redeem.input, _redeem.witness, _outputType);\n    } else {\n      _expanded = expandInput(bscript.compile(_redeem.witness), [], _outputType, _redeem.output);\n    }\n\n    if (!_expanded.prevOutType) return {};\n    return {\n      prevOutScript: _output3,\n      prevOutType: SCRIPT_TYPES.P2WSH,\n      witnessScript: _redeem.output,\n      witnessScriptType: _expanded.prevOutType,\n      pubkeys: _expanded.pubkeys,\n      signatures: _expanded.signatures\n    };\n  }\n\n  return {\n    prevOutType: SCRIPT_TYPES.NONSTANDARD,\n    prevOutScript: scriptSig\n  };\n} // could be done in expandInput, but requires the original Transaction for hashForSignature\n\n\nfunction fixMultisigOrder(input, transaction, vin) {\n  if (input.redeemScriptType !== SCRIPT_TYPES.P2MS || !input.redeemScript) return;\n  if (input.pubkeys.length === input.signatures.length) return;\n  var unmatched = input.signatures.concat();\n  input.signatures = input.pubkeys.map(function (pubKey) {\n    var keyPair = ECPair.fromPublicKey(pubKey);\n    var match; // check for a signature\n\n    unmatched.some(function (signature, i) {\n      // skip if undefined || OP_0\n      if (!signature) return false; // TODO: avoid O(n) hashForSignature\n\n      var parsed = bscript.signature.decode(signature);\n      var hash = transaction.hashForSignature(vin, input.redeemScript, parsed.hashType); // skip if signature does not match pubKey\n\n      if (!keyPair.verify(hash, parsed.signature)) return false; // remove matched signature from unmatched\n\n      unmatched[i] = undefined;\n      match = signature;\n      return true;\n    });\n    return match;\n  });\n}\n\nfunction expandOutput(script, ourPubKey) {\n  typeforce(types.Buffer, script);\n  var type = classify.output(script);\n\n  switch (type) {\n    case SCRIPT_TYPES.P2PKH:\n      {\n        if (!ourPubKey) return {\n          type: type // does our hash160(pubKey) match the output scripts?\n\n        };\n        var pkh1 = payments.p2pkh({\n          output: script\n        }).hash;\n        var pkh2 = bcrypto.hash160(ourPubKey);\n        if (!pkh1.equals(pkh2)) return {\n          type: type\n        };\n        return {\n          type: type,\n          pubkeys: [ourPubKey],\n          signatures: [undefined]\n        };\n      }\n\n    case SCRIPT_TYPES.P2WPKH:\n      {\n        if (!ourPubKey) return {\n          type: type // does our hash160(pubKey) match the output scripts?\n\n        };\n        var wpkh1 = payments.p2wpkh({\n          output: script\n        }).hash;\n        var wpkh2 = bcrypto.hash160(ourPubKey);\n        if (!wpkh1.equals(wpkh2)) return {\n          type: type\n        };\n        return {\n          type: type,\n          pubkeys: [ourPubKey],\n          signatures: [undefined]\n        };\n      }\n\n    case SCRIPT_TYPES.P2PK:\n      {\n        var p2pk = payments.p2pk({\n          output: script\n        });\n        return {\n          type: type,\n          pubkeys: [p2pk.pubkey],\n          signatures: [undefined]\n        };\n      }\n\n    case SCRIPT_TYPES.P2MS:\n      {\n        var p2ms = payments.p2ms({\n          output: script\n        });\n        return {\n          type: type,\n          pubkeys: p2ms.pubkeys,\n          signatures: p2ms.pubkeys.map(function () {\n            return undefined;\n          }),\n          maxSignatures: p2ms.m\n        };\n      }\n  }\n\n  return {\n    type: type\n  };\n}\n\nfunction prepareInput(input, ourPubKey, redeemScript, witnessScript) {\n  if (redeemScript && witnessScript) {\n    var p2wsh = payments.p2wsh({\n      redeem: {\n        output: witnessScript\n      }\n    });\n    var p2wshAlt = payments.p2wsh({\n      output: redeemScript\n    });\n    var p2sh = payments.p2sh({\n      redeem: {\n        output: redeemScript\n      }\n    });\n    var p2shAlt = payments.p2sh({\n      redeem: p2wsh\n    }); // enforces P2SH(P2WSH(...))\n\n    if (!p2wsh.hash.equals(p2wshAlt.hash)) throw new Error('Witness script inconsistent with prevOutScript');\n    if (!p2sh.hash.equals(p2shAlt.hash)) throw new Error('Redeem script inconsistent with prevOutScript');\n    var expanded = expandOutput(p2wsh.redeem.output, ourPubKey);\n    if (!expanded.pubkeys) throw new Error(expanded.type + ' not supported as witnessScript (' + bscript.toASM(witnessScript) + ')');\n\n    if (input.signatures && input.signatures.some(function (x) {\n      return x;\n    })) {\n      expanded.signatures = input.signatures;\n    }\n\n    var signScript = witnessScript;\n    if (expanded.type === SCRIPT_TYPES.P2WPKH) throw new Error('P2SH(P2WSH(P2WPKH)) is a consensus failure');\n    return {\n      redeemScript: redeemScript,\n      redeemScriptType: SCRIPT_TYPES.P2WSH,\n      witnessScript: witnessScript,\n      witnessScriptType: expanded.type,\n      prevOutType: SCRIPT_TYPES.P2SH,\n      prevOutScript: p2sh.output,\n      hasWitness: true,\n      signScript: signScript,\n      signType: expanded.type,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n      maxSignatures: expanded.maxSignatures\n    };\n  }\n\n  if (redeemScript) {\n    var _p2sh = payments.p2sh({\n      redeem: {\n        output: redeemScript\n      }\n    });\n\n    if (input.prevOutScript) {\n      var _p2shAlt;\n\n      try {\n        _p2shAlt = payments.p2sh({\n          output: input.prevOutScript\n        });\n      } catch (e) {\n        throw new Error('PrevOutScript must be P2SH');\n      }\n\n      if (!_p2sh.hash.equals(_p2shAlt.hash)) throw new Error('Redeem script inconsistent with prevOutScript');\n    }\n\n    var _expanded2 = expandOutput(_p2sh.redeem.output, ourPubKey);\n\n    if (!_expanded2.pubkeys) throw new Error(_expanded2.type + ' not supported as redeemScript (' + bscript.toASM(redeemScript) + ')');\n\n    if (input.signatures && input.signatures.some(function (x) {\n      return x;\n    })) {\n      _expanded2.signatures = input.signatures;\n    }\n\n    var _signScript = redeemScript;\n\n    if (_expanded2.type === SCRIPT_TYPES.P2WPKH) {\n      _signScript = payments.p2pkh({\n        pubkey: _expanded2.pubkeys[0]\n      }).output;\n    }\n\n    return {\n      redeemScript: redeemScript,\n      redeemScriptType: _expanded2.type,\n      prevOutType: SCRIPT_TYPES.P2SH,\n      prevOutScript: _p2sh.output,\n      hasWitness: _expanded2.type === SCRIPT_TYPES.P2WPKH,\n      signScript: _signScript,\n      signType: _expanded2.type,\n      pubkeys: _expanded2.pubkeys,\n      signatures: _expanded2.signatures,\n      maxSignatures: _expanded2.maxSignatures\n    };\n  }\n\n  if (witnessScript) {\n    var _p2wsh = payments.p2wsh({\n      redeem: {\n        output: witnessScript\n      }\n    });\n\n    if (input.prevOutScript) {\n      var _p2wshAlt = payments.p2wsh({\n        output: input.prevOutScript\n      });\n\n      if (!_p2wsh.hash.equals(_p2wshAlt.hash)) throw new Error('Witness script inconsistent with prevOutScript');\n    }\n\n    var _expanded3 = expandOutput(_p2wsh.redeem.output, ourPubKey);\n\n    if (!_expanded3.pubkeys) throw new Error(_expanded3.type + ' not supported as witnessScript (' + bscript.toASM(witnessScript) + ')');\n\n    if (input.signatures && input.signatures.some(function (x) {\n      return x;\n    })) {\n      _expanded3.signatures = input.signatures;\n    }\n\n    var _signScript2 = witnessScript;\n    if (_expanded3.type === SCRIPT_TYPES.P2WPKH) throw new Error('P2WSH(P2WPKH) is a consensus failure');\n    return {\n      witnessScript: witnessScript,\n      witnessScriptType: _expanded3.type,\n      prevOutType: SCRIPT_TYPES.P2WSH,\n      prevOutScript: _p2wsh.output,\n      hasWitness: true,\n      signScript: _signScript2,\n      signType: _expanded3.type,\n      pubkeys: _expanded3.pubkeys,\n      signatures: _expanded3.signatures,\n      maxSignatures: _expanded3.maxSignatures\n    };\n  }\n\n  if (input.prevOutType && input.prevOutScript) {\n    // embedded scripts are not possible without extra information\n    if (input.prevOutType === SCRIPT_TYPES.P2SH) throw new Error('PrevOutScript is ' + input.prevOutType + ', requires redeemScript');\n    if (input.prevOutType === SCRIPT_TYPES.P2WSH) throw new Error('PrevOutScript is ' + input.prevOutType + ', requires witnessScript');\n    if (!input.prevOutScript) throw new Error('PrevOutScript is missing');\n\n    var _expanded4 = expandOutput(input.prevOutScript, ourPubKey);\n\n    if (!_expanded4.pubkeys) throw new Error(_expanded4.type + ' not supported (' + bscript.toASM(input.prevOutScript) + ')');\n\n    if (input.signatures && input.signatures.some(function (x) {\n      return x;\n    })) {\n      _expanded4.signatures = input.signatures;\n    }\n\n    var _signScript3 = input.prevOutScript;\n\n    if (_expanded4.type === SCRIPT_TYPES.P2WPKH) {\n      _signScript3 = payments.p2pkh({\n        pubkey: _expanded4.pubkeys[0]\n      }).output;\n    }\n\n    return {\n      prevOutType: _expanded4.type,\n      prevOutScript: input.prevOutScript,\n      hasWitness: _expanded4.type === SCRIPT_TYPES.P2WPKH,\n      signScript: _signScript3,\n      signType: _expanded4.type,\n      pubkeys: _expanded4.pubkeys,\n      signatures: _expanded4.signatures,\n      maxSignatures: _expanded4.maxSignatures\n    };\n  }\n\n  var prevOutScript = payments.p2pkh({\n    pubkey: ourPubKey\n  }).output;\n  return {\n    prevOutType: SCRIPT_TYPES.P2PKH,\n    prevOutScript: prevOutScript,\n    hasWitness: false,\n    signScript: prevOutScript,\n    signType: SCRIPT_TYPES.P2PKH,\n    pubkeys: [ourPubKey],\n    signatures: [undefined]\n  };\n}\n\nfunction build(type, input, allowIncomplete) {\n  var pubkeys = input.pubkeys || [];\n  var signatures = input.signatures || [];\n\n  switch (type) {\n    case SCRIPT_TYPES.P2PKH:\n      {\n        if (pubkeys.length === 0) break;\n        if (signatures.length === 0) break;\n        return payments.p2pkh({\n          pubkey: pubkeys[0],\n          signature: signatures[0]\n        });\n      }\n\n    case SCRIPT_TYPES.P2WPKH:\n      {\n        if (pubkeys.length === 0) break;\n        if (signatures.length === 0) break;\n        return payments.p2wpkh({\n          pubkey: pubkeys[0],\n          signature: signatures[0]\n        });\n      }\n\n    case SCRIPT_TYPES.P2PK:\n      {\n        if (pubkeys.length === 0) break;\n        if (signatures.length === 0) break;\n        return payments.p2pk({\n          signature: signatures[0]\n        });\n      }\n\n    case SCRIPT_TYPES.P2MS:\n      {\n        var m = input.maxSignatures;\n\n        if (allowIncomplete) {\n          signatures = signatures.map(function (x) {\n            return x || ops.OP_0;\n          });\n        } else {\n          signatures = signatures.filter(function (x) {\n            return x;\n          });\n        } // if the transaction is not not complete (complete), or if signatures.length === m, validate\n        // otherwise, the number of OP_0's may be >= m, so don't validate (boo)\n\n\n        var validate = !allowIncomplete || m === signatures.length;\n        return payments.p2ms({\n          m: m,\n          pubkeys: pubkeys,\n          signatures: signatures\n        }, {\n          allowIncomplete: allowIncomplete,\n          validate: validate\n        });\n      }\n\n    case SCRIPT_TYPES.P2SH:\n      {\n        var redeem = build(input.redeemScriptType, input, allowIncomplete);\n        if (!redeem) return;\n        return payments.p2sh({\n          redeem: {\n            output: redeem.output || input.redeemScript,\n            input: redeem.input,\n            witness: redeem.witness\n          }\n        });\n      }\n\n    case SCRIPT_TYPES.P2WSH:\n      {\n        var _redeem2 = build(input.witnessScriptType, input, allowIncomplete);\n\n        if (!_redeem2) return;\n        return payments.p2wsh({\n          redeem: {\n            output: input.witnessScript,\n            input: _redeem2.input,\n            witness: _redeem2.witness\n          }\n        });\n      }\n  }\n}\n\nfunction TransactionBuilder(network, maximumFeeRate) {\n  this.__prevTxSet = {};\n  this.network = network || networks.bitcoin; // WARNING: This is __NOT__ to be relied on, its just another potential safety mechanism (safety in-depth)\n\n  this.maximumFeeRate = maximumFeeRate || 2500;\n  this.__inputs = [];\n  this.__tx = new Transaction();\n  this.__tx.version = 2;\n}\n\nTransactionBuilder.prototype.setLockTime = function (locktime) {\n  typeforce(types.UInt32, locktime); // if any signatures exist, throw\n\n  if (this.__inputs.some(function (input) {\n    if (!input.signatures) return false;\n    return input.signatures.some(function (s) {\n      return s;\n    });\n  })) {\n    throw new Error('No, this would invalidate signatures');\n  }\n\n  this.__tx.locktime = locktime;\n};\n\nTransactionBuilder.prototype.setVersion = function (version) {\n  typeforce(types.UInt32, version); // XXX: this might eventually become more complex depending on what the versions represent\n\n  this.__tx.version = version;\n};\n\nTransactionBuilder.fromTransaction = function (transaction, network) {\n  var txb = new TransactionBuilder(network); // Copy transaction fields\n\n  txb.setVersion(transaction.version);\n  txb.setLockTime(transaction.locktime); // Copy outputs (done first to avoid signature invalidation)\n\n  transaction.outs.forEach(function (txOut) {\n    txb.addOutput(txOut.script, txOut.value);\n  }); // Copy inputs\n\n  transaction.ins.forEach(function (txIn) {\n    txb.__addInputUnsafe(txIn.hash, txIn.index, {\n      sequence: txIn.sequence,\n      script: txIn.script,\n      witness: txIn.witness\n    });\n  }); // fix some things not possible through the public API\n\n  txb.__inputs.forEach(function (input, i) {\n    fixMultisigOrder(input, transaction, i);\n  });\n\n  return txb;\n};\n\nTransactionBuilder.prototype.addInput = function (txHash, vout, sequence, prevOutScript) {\n  if (!this.__canModifyInputs()) {\n    throw new Error('No, this would invalidate signatures');\n  }\n\n  var value; // is it a hex string?\n\n  if (typeof txHash === 'string') {\n    // transaction hashs's are displayed in reverse order, un-reverse it\n    txHash = Buffer.from(txHash, 'hex').reverse(); // is it a Transaction object?\n  } else if (txHash instanceof Transaction) {\n    var txOut = txHash.outs[vout];\n    prevOutScript = txOut.script;\n    value = txOut.value;\n    txHash = txHash.getHash();\n  }\n\n  return this.__addInputUnsafe(txHash, vout, {\n    sequence: sequence,\n    prevOutScript: prevOutScript,\n    value: value\n  });\n};\n\nTransactionBuilder.prototype.__addInputUnsafe = function (txHash, vout, options) {\n  if (Transaction.isCoinbaseHash(txHash)) {\n    throw new Error('coinbase inputs not supported');\n  }\n\n  var prevTxOut = txHash.toString('hex') + ':' + vout;\n  if (this.__prevTxSet[prevTxOut] !== undefined) throw new Error('Duplicate TxOut: ' + prevTxOut);\n  var input = {}; // derive what we can from the scriptSig\n\n  if (options.script !== undefined) {\n    input = expandInput(options.script, options.witness || []);\n  } // if an input value was given, retain it\n\n\n  if (options.value !== undefined) {\n    input.value = options.value;\n  } // derive what we can from the previous transactions output script\n\n\n  if (!input.prevOutScript && options.prevOutScript) {\n    var prevOutType;\n\n    if (!input.pubkeys && !input.signatures) {\n      var expanded = expandOutput(options.prevOutScript);\n\n      if (expanded.pubkeys) {\n        input.pubkeys = expanded.pubkeys;\n        input.signatures = expanded.signatures;\n      }\n\n      prevOutType = expanded.type;\n    }\n\n    input.prevOutScript = options.prevOutScript;\n    input.prevOutType = prevOutType || classify.output(options.prevOutScript);\n  }\n\n  var vin = this.__tx.addInput(txHash, vout, options.sequence, options.scriptSig);\n\n  this.__inputs[vin] = input;\n  this.__prevTxSet[prevTxOut] = true;\n  return vin;\n};\n\nTransactionBuilder.prototype.addOutput = function (scriptPubKey, value) {\n  if (!this.__canModifyOutputs()) {\n    throw new Error('No, this would invalidate signatures');\n  } // Attempt to get a script if it's a base58 or bech32 address string\n\n\n  if (typeof scriptPubKey === 'string') {\n    scriptPubKey = baddress.toOutputScript(scriptPubKey, this.network);\n  }\n\n  return this.__tx.addOutput(scriptPubKey, value);\n};\n\nTransactionBuilder.prototype.build = function () {\n  return this.__build(false);\n};\n\nTransactionBuilder.prototype.buildIncomplete = function () {\n  return this.__build(true);\n};\n\nTransactionBuilder.prototype.__build = function (allowIncomplete) {\n  if (!allowIncomplete) {\n    if (!this.__tx.ins.length) throw new Error('Transaction has no inputs');\n    if (!this.__tx.outs.length) throw new Error('Transaction has no outputs');\n  }\n\n  var tx = this.__tx.clone(); // create script signatures from inputs\n\n\n  this.__inputs.forEach(function (input, i) {\n    if (!input.prevOutType && !allowIncomplete) throw new Error('Transaction is not complete');\n    var result = build(input.prevOutType, input, allowIncomplete);\n\n    if (!result) {\n      if (!allowIncomplete && input.prevOutType === SCRIPT_TYPES.NONSTANDARD) throw new Error('Unknown input type');\n      if (!allowIncomplete) throw new Error('Not enough information');\n      return;\n    }\n\n    tx.setInputScript(i, result.input);\n    tx.setWitness(i, result.witness);\n  });\n\n  if (!allowIncomplete) {\n    // do not rely on this, its merely a last resort\n    if (this.__overMaximumFees(tx.virtualSize())) {\n      throw new Error('Transaction has absurd fees');\n    }\n  }\n\n  return tx;\n};\n\nfunction canSign(input) {\n  return input.signScript !== undefined && input.signType !== undefined && input.pubkeys !== undefined && input.signatures !== undefined && input.signatures.length === input.pubkeys.length && input.pubkeys.length > 0 && (input.hasWitness === false || input.value !== undefined);\n}\n\nTransactionBuilder.prototype.sign = function (vin, keyPair, redeemScript, hashType, witnessValue, witnessScript) {\n  // TODO: remove keyPair.network matching in 4.0.0\n  if (keyPair.network && keyPair.network !== this.network) throw new TypeError('Inconsistent network');\n  if (!this.__inputs[vin]) throw new Error('No input at index: ' + vin);\n  hashType = hashType || Transaction.SIGHASH_ALL;\n  if (this.__needsOutputs(hashType)) throw new Error('Transaction needs outputs');\n  var input = this.__inputs[vin]; // if redeemScript was previously provided, enforce consistency\n\n  if (input.redeemScript !== undefined && redeemScript && !input.redeemScript.equals(redeemScript)) {\n    throw new Error('Inconsistent redeemScript');\n  }\n\n  var ourPubKey = keyPair.publicKey || keyPair.getPublicKey();\n\n  if (!canSign(input)) {\n    if (witnessValue !== undefined) {\n      if (input.value !== undefined && input.value !== witnessValue) throw new Error('Input didn\\'t match witnessValue');\n      typeforce(types.Satoshi, witnessValue);\n      input.value = witnessValue;\n    }\n\n    if (!canSign(input)) {\n      var prepared = prepareInput(input, ourPubKey, redeemScript, witnessScript); // updates inline\n\n      Object.assign(input, prepared);\n    }\n\n    if (!canSign(input)) throw Error(input.prevOutType + ' not supported');\n  } // ready to sign\n\n\n  var signatureHash;\n\n  if (input.hasWitness) {\n    signatureHash = this.__tx.hashForWitnessV0(vin, input.signScript, input.value, hashType);\n  } else {\n    signatureHash = this.__tx.hashForSignature(vin, input.signScript, hashType);\n  } // enforce in order signing of public keys\n\n\n  var signed = input.pubkeys.some(function (pubKey, i) {\n    if (!ourPubKey.equals(pubKey)) return false;\n    if (input.signatures[i]) throw new Error('Signature already exists'); // TODO: add tests\n\n    if (ourPubKey.length !== 33 && input.hasWitness) {\n      throw new Error('BIP143 rejects uncompressed public keys in P2WPKH or P2WSH');\n    }\n\n    var signature = keyPair.sign(signatureHash);\n    input.signatures[i] = bscript.signature.encode(signature, hashType);\n    return true;\n  });\n  if (!signed) throw new Error('Key pair cannot sign for this input');\n};\n\nfunction signatureHashType(buffer) {\n  return buffer.readUInt8(buffer.length - 1);\n}\n\nTransactionBuilder.prototype.__canModifyInputs = function () {\n  return this.__inputs.every(function (input) {\n    if (!input.signatures) return true;\n    return input.signatures.every(function (signature) {\n      if (!signature) return true;\n      var hashType = signatureHashType(signature); // if SIGHASH_ANYONECANPAY is set, signatures would not\n      // be invalidated by more inputs\n\n      return hashType & Transaction.SIGHASH_ANYONECANPAY;\n    });\n  });\n};\n\nTransactionBuilder.prototype.__needsOutputs = function (signingHashType) {\n  if (signingHashType === Transaction.SIGHASH_ALL) {\n    return this.__tx.outs.length === 0;\n  } // if inputs are being signed with SIGHASH_NONE, we don't strictly need outputs\n  // .build() will fail, but .buildIncomplete() is OK\n\n\n  return this.__tx.outs.length === 0 && this.__inputs.some(function (input) {\n    if (!input.signatures) return false;\n    return input.signatures.some(function (signature) {\n      if (!signature) return false; // no signature, no issue\n\n      var hashType = signatureHashType(signature);\n      if (hashType & Transaction.SIGHASH_NONE) return false; // SIGHASH_NONE doesn't care about outputs\n\n      return true; // SIGHASH_* does care\n    });\n  });\n};\n\nTransactionBuilder.prototype.__canModifyOutputs = function () {\n  var nInputs = this.__tx.ins.length;\n  var nOutputs = this.__tx.outs.length;\n  return this.__inputs.every(function (input) {\n    if (input.signatures === undefined) return true;\n    return input.signatures.every(function (signature) {\n      if (!signature) return true;\n      var hashType = signatureHashType(signature);\n      var hashTypeMod = hashType & 0x1f;\n      if (hashTypeMod === Transaction.SIGHASH_NONE) return true;\n\n      if (hashTypeMod === Transaction.SIGHASH_SINGLE) {\n        // if SIGHASH_SINGLE is set, and nInputs > nOutputs\n        // some signatures would be invalidated by the addition\n        // of more outputs\n        return nInputs <= nOutputs;\n      }\n    });\n  });\n};\n\nTransactionBuilder.prototype.__overMaximumFees = function (bytes) {\n  // not all inputs will have .value defined\n  var incoming = this.__inputs.reduce(function (a, x) {\n    return a + (x.value >>> 0);\n  }, 0); // but all outputs do, and if we have any input value\n  // we can immediately determine if the outputs are too small\n\n\n  var outgoing = this.__tx.outs.reduce(function (a, x) {\n    return a + x.value;\n  }, 0);\n\n  var fee = incoming - outgoing;\n  var feeRate = fee / bytes;\n  return feeRate > this.maximumFeeRate;\n};\n\nmodule.exports = TransactionBuilder;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin;\n\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every(function (x, i) {\n    return x.equals(b[i]);\n  });\n} // output: OP_RETURN ...\n\n\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.Buffer),\n    data: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a);\n  var network = a.network || BITCOIN_NETWORK;\n  var o = {\n    network: network\n  };\n  lazy.prop(o, 'output', function () {\n    if (!a.data) return;\n    return bscript.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  lazy.prop(o, 'data', function () {\n    if (!a.output) return;\n    return bscript.decompile(a.output).slice(1);\n  }); // extended validation\n\n  if (opts.validate) {\n    if (a.output) {\n      var chunks = bscript.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(typef.Buffer)) throw new TypeError('Output is invalid');\n      if (a.data && !stacksEqual(a.data, o.data)) throw new TypeError('Data mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2data;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar ecc = require('tiny-secp256k1');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin;\n\nvar OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every(function (x, i) {\n    return x.equals(b[i]);\n  });\n} // input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\n\n\nfunction p2ms(a, opts) {\n  if (!a.input && !a.output && !(a.pubkeys && a.m !== undefined) && !a.signatures) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n\n  function isAcceptableSignature(x) {\n    return bscript.isCanonicalScriptSignature(x) || opts.allowIncomplete && x === OPS.OP_0;\n  }\n\n  typef({\n    network: typef.maybe(typef.Object),\n    m: typef.maybe(typef.Number),\n    n: typef.maybe(typef.Number),\n    output: typef.maybe(typef.Buffer),\n    pubkeys: typef.maybe(typef.arrayOf(ecc.isPoint)),\n    signatures: typef.maybe(typef.arrayOf(isAcceptableSignature)),\n    input: typef.maybe(typef.Buffer)\n  }, a);\n  var network = a.network || BITCOIN_NETWORK;\n  var o = {\n    network: network\n  };\n  var chunks;\n  var decoded = false;\n\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n\n  lazy.prop(o, 'output', function () {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile([].concat(OP_INT_BASE + a.m, a.pubkeys, OP_INT_BASE + o.n, OPS.OP_CHECKMULTISIG));\n  });\n  lazy.prop(o, 'm', function () {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', function () {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', function () {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', function () {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', function () {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return;\n    return [];\n  }); // extended validation\n\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!typef.Number(chunks[0])) throw new TypeError('Output is invalid');\n      if (!typef.Number(chunks[chunks.length - 2])) throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3) throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(function (x) {\n        return ecc.isPoint(x);\n      })) throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys)) throw new TypeError('Pubkeys mismatch');\n    }\n\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length) throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n\n    if (a.signatures) {\n      if (a.signatures.length < o.m) throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m) throw new TypeError('Too many signatures provided');\n    }\n\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (o.signatures.length === 0 || !o.signatures.every(isAcceptableSignature)) throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures)) throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length) throw new TypeError('Signature count mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2ms;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar ecc = require('tiny-secp256k1');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin; // input: {signature}\n// output: {pubKey} OP_CHECKSIG\n\n\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.Buffer),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    input: typef.maybe(typef.Buffer)\n  }, a);\n\n  var _chunks = lazy.value(function () {\n    return bscript.decompile(a.input);\n  });\n\n  var network = a.network || BITCOIN_NETWORK;\n  var o = {\n    network: network\n  };\n  lazy.prop(o, 'output', function () {\n    if (!a.pubkey) return;\n    return bscript.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', function () {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  lazy.prop(o, 'signature', function () {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', function () {\n    if (!a.signature) return;\n    return bscript.compile([a.signature]);\n  });\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return;\n    return [];\n  }); // extended validation\n\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG) throw new TypeError('Output is invalid');\n      if (!ecc.isPoint(o.pubkey)) throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && !a.pubkey.equals(o.pubkey)) throw new TypeError('Pubkey mismatch');\n    }\n\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input)) throw new TypeError('Signature mismatch');\n    }\n\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(o.signature)) throw new TypeError('Input has invalid signature');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2pk;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar ecc = require('tiny-secp256k1');\n\nvar bcrypto = require('../crypto');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin;\n\nvar bs58check = require('bs58check'); // input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\n\n\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    output: typef.maybe(typef.BufferN(25)),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    input: typef.maybe(typef.Buffer)\n  }, a);\n\n  var _address = lazy.value(function () {\n    var payload = bs58check.decode(a.address);\n    var version = payload.readUInt8(0);\n    var hash = payload.slice(1);\n    return {\n      version: version,\n      hash: hash\n    };\n  });\n\n  var _chunks = lazy.value(function () {\n    return bscript.decompile(a.input);\n  });\n\n  var network = a.network || BITCOIN_NETWORK;\n  var o = {\n    network: network\n  };\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return;\n    var payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_DUP, OPS.OP_HASH160, o.hash, OPS.OP_EQUALVERIFY, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', function () {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', function () {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', function () {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return;\n    return [];\n  }); // extended validation\n\n  if (opts.validate) {\n    var hash;\n\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash) throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 25 || a.output[0] !== OPS.OP_DUP || a.output[1] !== OPS.OP_HASH160 || a.output[2] !== 0x14 || a.output[23] !== OPS.OP_EQUALVERIFY || a.output[24] !== OPS.OP_CHECKSIG) throw new TypeError('Output is invalid');\n      var hash2 = a.output.slice(3, 23);\n      if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    }\n\n    if (a.pubkey) {\n      var pkh = bcrypto.hash160(a.pubkey);\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch');else hash = pkh;\n    }\n\n    if (a.input) {\n      var chunks = _chunks();\n\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0])) throw new TypeError('Input has invalid signature');\n      if (!ecc.isPoint(chunks[1])) throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0])) throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1])) throw new TypeError('Pubkey mismatch');\n\n      var _pkh = bcrypto.hash160(chunks[1]);\n\n      if (hash && !hash.equals(_pkh)) throw new TypeError('Hash mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2pkh;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar bcrypto = require('../crypto');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin;\n\nvar bs58check = require('bs58check');\n\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every(function (x, i) {\n    return x.equals(b[i]);\n  });\n} // input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\n\n\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    output: typef.maybe(typef.BufferN(23)),\n    redeem: typef.maybe({\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      input: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer))\n    }),\n    input: typef.maybe(typef.Buffer),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a);\n  var network = a.network;\n\n  if (!network) {\n    network = a.redeem && a.redeem.network || BITCOIN_NETWORK;\n  }\n\n  var o = {\n    network: network\n  };\n\n  var _address = lazy.value(function () {\n    var payload = bs58check.decode(a.address);\n    var version = payload.readUInt8(0);\n    var hash = payload.slice(1);\n    return {\n      version: version,\n      hash: hash\n    };\n  });\n\n  var _chunks = lazy.value(function () {\n    return bscript.decompile(a.input);\n  });\n\n  var _redeem = lazy.value(function () {\n    var chunks = _chunks();\n\n    return {\n      network: network,\n      output: chunks[chunks.length - 1],\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || []\n    };\n  }); // output dependents\n\n\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return;\n    var payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', function () {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  }); // input dependents\n\n  lazy.prop(o, 'redeem', function () {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', function () {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile([].concat(bscript.decompile(a.redeem.input), a.redeem.output));\n  });\n  lazy.prop(o, 'witness', function () {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n\n  if (opts.validate) {\n    var hash;\n\n    if (a.address) {\n      if (_address().version !== network.scriptHash) throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 23 || a.output[0] !== OPS.OP_HASH160 || a.output[1] !== 0x14 || a.output[22] !== OPS.OP_EQUAL) throw new TypeError('Output is invalid');\n      var hash2 = a.output.slice(2, 22);\n      if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    } // inlined to prevent 'no-inner-declarations' failing\n\n\n    var checkRedeem = function checkRedeem(redeem) {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        var decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1) throw new TypeError('Redeem.output too short'); // match hash against other sources\n\n        var _hash = bcrypto.hash160(redeem.output);\n\n        if (hash && !hash.equals(_hash)) throw new TypeError('Hash mismatch');else hash = _hash;\n      }\n\n      if (redeem.input) {\n        var hasInput = redeem.input.length > 0;\n        var hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness) throw new TypeError('Input and witness provided');\n\n        if (hasInput) {\n          var richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks)) throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n\n    if (a.input) {\n      var chunks = _chunks();\n\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output)) throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network) throw new TypeError('Network mismatch');\n\n      if (a.input) {\n        var redeem = _redeem();\n\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output)) throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input)) throw new TypeError('Redeem.input mismatch');\n      }\n\n      checkRedeem(a.redeem);\n    }\n\n    if (a.witness) {\n      if (a.redeem && a.redeem.witness && !stacksEqual(a.redeem.witness, a.witness)) throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2sh;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar ecc = require('tiny-secp256k1');\n\nvar bcrypto = require('../crypto');\n\nvar bech32 = require('bech32');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin;\n\nvar EMPTY_BUFFER = Buffer.alloc(0); // witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\n\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    input: typef.maybe(typef.BufferN(0)),\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.BufferN(22)),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a);\n\n  var _address = lazy.value(function () {\n    var result = bech32.decode(a.address);\n    var version = result.words.shift();\n    var data = bech32.fromWords(result.words);\n    return {\n      version: version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    };\n  });\n\n  var network = a.network || BITCOIN_NETWORK;\n  var o = {\n    network: network\n  };\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return;\n    var words = bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', function () {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', function () {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', function () {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', function () {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  }); // extended validation\n\n  if (opts.validate) {\n    var hash;\n\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix) throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20) throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 22 || a.output[0] !== OPS.OP_0 || a.output[1] !== 0x14) throw new TypeError('Output is invalid');\n      if (hash && !hash.equals(a.output.slice(2))) throw new TypeError('Hash mismatch');else hash = a.output.slice(2);\n    }\n\n    if (a.pubkey) {\n      var pkh = bcrypto.hash160(a.pubkey);\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch');else hash = pkh;\n    }\n\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0])) throw new TypeError('Witness has invalid signature');\n      if (!ecc.isPoint(a.witness[1])) throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0])) throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1])) throw new TypeError('Pubkey mismatch');\n\n      var _pkh = bcrypto.hash160(a.witness[1]);\n\n      if (hash && !hash.equals(_pkh)) throw new TypeError('Hash mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2wpkh;","var lazy = require('./lazy');\n\nvar typef = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar bech32 = require('bech32');\n\nvar bcrypto = require('../crypto');\n\nvar bscript = require('../script');\n\nvar BITCOIN_NETWORK = require('../networks').bitcoin;\n\nvar EMPTY_BUFFER = Buffer.alloc(0);\n\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every(function (x, i) {\n    return x.equals(b[i]);\n  });\n} // input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\n\n\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(32)),\n    output: typef.maybe(typef.BufferN(34)),\n    redeem: typef.maybe({\n      input: typef.maybe(typef.Buffer),\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer))\n    }),\n    input: typef.maybe(typef.BufferN(0)),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a);\n\n  var _address = lazy.value(function () {\n    var result = bech32.decode(a.address);\n    var version = result.words.shift();\n    var data = bech32.fromWords(result.words);\n    return {\n      version: version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    };\n  });\n\n  var _rchunks = lazy.value(function () {\n    return bscript.decompile(a.redeem.input);\n  });\n\n  var network = a.network;\n\n  if (!network) {\n    network = a.redeem && a.redeem.network || BITCOIN_NETWORK;\n  }\n\n  var o = {\n    network: network\n  };\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return;\n    var words = bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output);\n  });\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'redeem', function () {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1)\n    };\n  });\n  lazy.prop(o, 'input', function () {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', function () {\n    // transform redeem input to witness stack?\n    if (a.redeem && a.redeem.input && a.redeem.input.length > 0 && a.redeem.output && a.redeem.output.length > 0) {\n      var stack = bscript.toStack(_rchunks()); // assign, and blank the existing input\n\n      o.redeem = Object.assign({\n        witness: stack\n      }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  }); // extended validation\n\n  if (opts.validate) {\n    var hash;\n\n    if (a.address) {\n      if (_address().prefix !== network.bech32) throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32) throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 34 || a.output[0] !== OPS.OP_0 || a.output[1] !== 0x20) throw new TypeError('Output is invalid');\n      var hash2 = a.output.slice(2);\n      if (hash && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    }\n\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network) throw new TypeError('Network mismatch'); // is there two redeem sources?\n\n      if (a.redeem.input && a.redeem.input.length > 0 && a.redeem.witness && a.redeem.witness.length > 0) throw new TypeError('Ambiguous witness source'); // is the redeem output non-empty?\n\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0) throw new TypeError('Redeem.output is invalid'); // match hash against other sources\n\n        var _hash = bcrypto.sha256(a.redeem.output);\n\n        if (hash && !hash.equals(_hash)) throw new TypeError('Hash mismatch');else hash = _hash;\n      }\n\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks())) throw new TypeError('Non push-only scriptSig');\n      if (a.witness && a.redeem.witness && !stacksEqual(a.witness, a.redeem.witness)) throw new TypeError('Witness and redeem.witness mismatch');\n    }\n\n    if (a.witness) {\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(a.witness[a.witness.length - 1])) throw new TypeError('Witness and redeem.output mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nmodule.exports = p2wsh;","var decompile = require('./script').decompile;\n\nvar multisig = require('./templates/multisig');\n\nvar nullData = require('./templates/nulldata');\n\nvar pubKey = require('./templates/pubkey');\n\nvar pubKeyHash = require('./templates/pubkeyhash');\n\nvar scriptHash = require('./templates/scripthash');\n\nvar witnessPubKeyHash = require('./templates/witnesspubkeyhash');\n\nvar witnessScriptHash = require('./templates/witnessscripthash');\n\nvar witnessCommitment = require('./templates/witnesscommitment');\n\nvar types = {\n  P2MS: 'multisig',\n  NONSTANDARD: 'nonstandard',\n  NULLDATA: 'nulldata',\n  P2PK: 'pubkey',\n  P2PKH: 'pubkeyhash',\n  P2SH: 'scripthash',\n  P2WPKH: 'witnesspubkeyhash',\n  P2WSH: 'witnessscripthash',\n  WITNESS_COMMITMENT: 'witnesscommitment'\n};\n\nfunction classifyOutput(script) {\n  if (witnessPubKeyHash.output.check(script)) return types.P2WPKH;\n  if (witnessScriptHash.output.check(script)) return types.P2WSH;\n  if (pubKeyHash.output.check(script)) return types.P2PKH;\n  if (scriptHash.output.check(script)) return types.P2SH; // XXX: optimization, below functions .decompile before use\n\n  var chunks = decompile(script);\n  if (!chunks) throw new TypeError('Invalid script');\n  if (multisig.output.check(chunks)) return types.P2MS;\n  if (pubKey.output.check(chunks)) return types.P2PK;\n  if (witnessCommitment.output.check(chunks)) return types.WITNESS_COMMITMENT;\n  if (nullData.output.check(chunks)) return types.NULLDATA;\n  return types.NONSTANDARD;\n}\n\nfunction classifyInput(script, allowIncomplete) {\n  // XXX: optimization, below functions .decompile before use\n  var chunks = decompile(script);\n  if (!chunks) throw new TypeError('Invalid script');\n  if (pubKeyHash.input.check(chunks)) return types.P2PKH;\n  if (scriptHash.input.check(chunks, allowIncomplete)) return types.P2SH;\n  if (multisig.input.check(chunks, allowIncomplete)) return types.P2MS;\n  if (pubKey.input.check(chunks)) return types.P2PK;\n  return types.NONSTANDARD;\n}\n\nfunction classifyWitness(script, allowIncomplete) {\n  // XXX: optimization, below functions .decompile before use\n  var chunks = decompile(script);\n  if (!chunks) throw new TypeError('Invalid script');\n  if (witnessPubKeyHash.input.check(chunks)) return types.P2WPKH;\n  if (witnessScriptHash.input.check(chunks, allowIncomplete)) return types.P2WSH;\n  return types.NONSTANDARD;\n}\n\nmodule.exports = {\n  input: classifyInput,\n  output: classifyOutput,\n  witness: classifyWitness,\n  types: types\n};","// OP_0 [signatures ...]\nvar bscript = require('../../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction partialSignature(value) {\n  return value === OPS.OP_0 || bscript.isCanonicalScriptSignature(value);\n}\n\nfunction check(script, allowIncomplete) {\n  var chunks = bscript.decompile(script);\n  if (chunks.length < 2) return false;\n  if (chunks[0] !== OPS.OP_0) return false;\n\n  if (allowIncomplete) {\n    return chunks.slice(1).every(partialSignature);\n  }\n\n  return chunks.slice(1).every(bscript.isCanonicalScriptSignature);\n}\n\ncheck.toJSON = function () {\n  return 'multisig input';\n};\n\nmodule.exports = {\n  check: check\n};","// m [pubKeys ...] n OP_CHECKMULTISIG\nvar bscript = require('../../script');\n\nvar types = require('../../types');\n\nvar OPS = require('bitcoin-ops');\n\nvar OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n\nfunction check(script, allowIncomplete) {\n  var chunks = bscript.decompile(script);\n  if (chunks.length < 4) return false;\n  if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) return false;\n  if (!types.Number(chunks[0])) return false;\n  if (!types.Number(chunks[chunks.length - 2])) return false;\n  var m = chunks[0] - OP_INT_BASE;\n  var n = chunks[chunks.length - 2] - OP_INT_BASE;\n  if (m <= 0) return false;\n  if (n > 16) return false;\n  if (m > n) return false;\n  if (n !== chunks.length - 3) return false;\n  if (allowIncomplete) return true;\n  var keys = chunks.slice(1, -2);\n  return keys.every(bscript.isCanonicalPubKey);\n}\n\ncheck.toJSON = function () {\n  return 'multi-sig output';\n};\n\nmodule.exports = {\n  check: check\n};","// OP_RETURN {data}\nvar bscript = require('../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length > 1 && buffer[0] === OPS.OP_RETURN;\n}\n\ncheck.toJSON = function () {\n  return 'null data output';\n};\n\nmodule.exports = {\n  output: {\n    check: check\n  }\n};","// {signature}\nvar bscript = require('../../script');\n\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 1 && bscript.isCanonicalScriptSignature(chunks[0]);\n}\n\ncheck.toJSON = function () {\n  return 'pubKey input';\n};\n\nmodule.exports = {\n  check: check\n};","// {pubKey} OP_CHECKSIG\nvar bscript = require('../../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 2 && bscript.isCanonicalPubKey(chunks[0]) && chunks[1] === OPS.OP_CHECKSIG;\n}\n\ncheck.toJSON = function () {\n  return 'pubKey output';\n};\n\nmodule.exports = {\n  check: check\n};","// {signature} {pubKey}\nvar bscript = require('../../script');\n\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 2 && bscript.isCanonicalScriptSignature(chunks[0]) && bscript.isCanonicalPubKey(chunks[1]);\n}\n\ncheck.toJSON = function () {\n  return 'pubKeyHash input';\n};\n\nmodule.exports = {\n  check: check\n};","// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\nvar bscript = require('../../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length === 25 && buffer[0] === OPS.OP_DUP && buffer[1] === OPS.OP_HASH160 && buffer[2] === 0x14 && buffer[23] === OPS.OP_EQUALVERIFY && buffer[24] === OPS.OP_CHECKSIG;\n}\n\ncheck.toJSON = function () {\n  return 'pubKeyHash output';\n};\n\nmodule.exports = {\n  check: check\n};","module.exports = {\n  input: require('./input'),\n  output: require('./output')\n};","// <scriptSig> {serialized scriptPubKey script}\nvar Buffer = require('safe-buffer').Buffer;\n\nvar bscript = require('../../script');\n\nvar p2ms = require('../multisig/');\n\nvar p2pk = require('../pubkey/');\n\nvar p2pkh = require('../pubkeyhash/');\n\nvar p2wpkho = require('../witnesspubkeyhash/output');\n\nvar p2wsho = require('../witnessscripthash/output');\n\nfunction check(script, allowIncomplete) {\n  var chunks = bscript.decompile(script);\n  if (chunks.length < 1) return false;\n  var lastChunk = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(lastChunk)) return false;\n  var scriptSigChunks = bscript.decompile(bscript.compile(chunks.slice(0, -1)));\n  var redeemScriptChunks = bscript.decompile(lastChunk); // is redeemScript a valid script?\n\n  if (!redeemScriptChunks) return false; // is redeemScriptSig push only?\n\n  if (!bscript.isPushOnly(scriptSigChunks)) return false; // is witness?\n\n  if (chunks.length === 1) {\n    return p2wsho.check(redeemScriptChunks) || p2wpkho.check(redeemScriptChunks);\n  } // match types\n\n\n  if (p2pkh.input.check(scriptSigChunks) && p2pkh.output.check(redeemScriptChunks)) return true;\n  if (p2ms.input.check(scriptSigChunks, allowIncomplete) && p2ms.output.check(redeemScriptChunks)) return true;\n  if (p2pk.input.check(scriptSigChunks) && p2pk.output.check(redeemScriptChunks)) return true;\n  return false;\n}\n\ncheck.toJSON = function () {\n  return 'scriptHash input';\n};\n\nmodule.exports = {\n  check: check\n};","// OP_HASH160 {scriptHash} OP_EQUAL\nvar bscript = require('../../script');\n\nvar OPS = require('bitcoin-ops');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length === 23 && buffer[0] === OPS.OP_HASH160 && buffer[1] === 0x14 && buffer[22] === OPS.OP_EQUAL;\n}\n\ncheck.toJSON = function () {\n  return 'scriptHash output';\n};\n\nmodule.exports = {\n  check: check\n};","module.exports = {\n  input: require('./input'),\n  output: require('./output')\n};","// {signature} {pubKey}\nvar bscript = require('../../script');\n\nfunction isCompressedCanonicalPubKey(pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33;\n}\n\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 2 && bscript.isCanonicalScriptSignature(chunks[0]) && isCompressedCanonicalPubKey(chunks[1]);\n}\n\ncheck.toJSON = function () {\n  return 'witnessPubKeyHash input';\n};\n\nmodule.exports = {\n  check: check\n};","module.exports = {\n  input: require('./input'),\n  output: require('./output')\n};","// <scriptSig> {serialized scriptPubKey script}\nvar bscript = require('../../script');\n\nvar types = require('../../types');\n\nvar typeforce = require('typeforce');\n\nvar p2ms = require('../multisig/');\n\nvar p2pk = require('../pubkey/');\n\nvar p2pkh = require('../pubkeyhash/');\n\nfunction check(chunks, allowIncomplete) {\n  typeforce(types.Array, chunks);\n  if (chunks.length < 1) return false;\n  var witnessScript = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(witnessScript)) return false;\n  var witnessScriptChunks = bscript.decompile(witnessScript); // is witnessScript a valid script?\n\n  if (!witnessScriptChunks || witnessScriptChunks.length === 0) return false;\n  var witnessRawScriptSig = bscript.compile(chunks.slice(0, -1)); // match types\n\n  if (p2pkh.input.check(witnessRawScriptSig) && p2pkh.output.check(witnessScriptChunks)) return true;\n  if (p2ms.input.check(witnessRawScriptSig, allowIncomplete) && p2ms.output.check(witnessScriptChunks)) return true;\n  if (p2pk.input.check(witnessRawScriptSig) && p2pk.output.check(witnessScriptChunks)) return true;\n  return false;\n}\n\ncheck.toJSON = function () {\n  return 'witnessScriptHash input';\n};\n\nmodule.exports = {\n  check: check\n};","module.exports = {\n  output: require('./output')\n};","// OP_RETURN {aa21a9ed} {commitment}\nvar Buffer = require('safe-buffer').Buffer;\n\nvar bscript = require('../../script');\n\nvar types = require('../../types');\n\nvar typeforce = require('typeforce');\n\nvar OPS = require('bitcoin-ops');\n\nvar HEADER = Buffer.from('aa21a9ed', 'hex');\n\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length > 37 && buffer[0] === OPS.OP_RETURN && buffer[1] === 0x24 && buffer.slice(2, 6).equals(HEADER);\n}\n\ncheck.toJSON = function () {\n  return 'Witness commitment output';\n};\n\nfunction encode(commitment) {\n  typeforce(types.Hash256bit, commitment);\n  var buffer = Buffer.allocUnsafe(36);\n  HEADER.copy(buffer, 0);\n  commitment.copy(buffer, 4);\n  return bscript.compile([OPS.OP_RETURN, buffer]);\n}\n\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  return bscript.decompile(buffer)[1].slice(4, 36);\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n};","var Buffer = require('safe-buffer').Buffer;\n\nvar bs58check = require('bs58check');\n\nvar crypto = require('./crypto');\n\nvar ecc = require('tiny-secp256k1');\n\nvar typeforce = require('typeforce');\n\nvar wif = require('wif');\n\nvar UINT256_TYPE = typeforce.BufferN(32);\nvar NETWORK_TYPE = typeforce.compile({\n  wif: typeforce.UInt8,\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32\n  }\n});\nvar BITCOIN = {\n  wif: 0x80,\n  bip32: {\n    public: 0x0488b21e,\n    private: 0x0488ade4\n  }\n};\n\nfunction BIP32(d, Q, chainCode, network) {\n  typeforce(NETWORK_TYPE, network);\n  this.__d = d || null;\n  this.__Q = Q || null;\n  this.chainCode = chainCode;\n  this.depth = 0;\n  this.index = 0;\n  this.network = network;\n  this.parentFingerprint = 0x00000000;\n}\n\nObject.defineProperty(BIP32.prototype, 'identifier', {\n  get: function get() {\n    return crypto.hash160(this.publicKey);\n  }\n});\nObject.defineProperty(BIP32.prototype, 'fingerprint', {\n  get: function get() {\n    return this.identifier.slice(0, 4);\n  }\n});\nObject.defineProperty(BIP32.prototype, 'privateKey', {\n  enumerable: false,\n  get: function get() {\n    return this.__d;\n  }\n});\nObject.defineProperty(BIP32.prototype, 'publicKey', {\n  get: function get() {\n    if (!this.__Q) this.__Q = ecc.pointFromScalar(this.__d, this.compressed);\n    return this.__Q;\n  }\n}); // Private === not neutered\n// Public === neutered\n\nBIP32.prototype.isNeutered = function () {\n  return this.__d === null;\n};\n\nBIP32.prototype.neutered = function () {\n  var neutered = fromPublicKey(this.publicKey, this.chainCode, this.network);\n  neutered.depth = this.depth;\n  neutered.index = this.index;\n  neutered.parentFingerprint = this.parentFingerprint;\n  return neutered;\n};\n\nBIP32.prototype.toBase58 = function () {\n  var network = this.network;\n  var version = !this.isNeutered() ? network.bip32.private : network.bip32.public;\n  var buffer = Buffer.allocUnsafe(78); // 4 bytes: version bytes\n\n  buffer.writeUInt32BE(version, 0); // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n\n  buffer.writeUInt8(this.depth, 4); // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n\n  buffer.writeUInt32BE(this.parentFingerprint, 5); // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n  // This is encoded in big endian. (0x00000000 if master key)\n\n  buffer.writeUInt32BE(this.index, 9); // 32 bytes: the chain code\n\n  this.chainCode.copy(buffer, 13); // 33 bytes: the public key or private key data\n\n  if (!this.isNeutered()) {\n    // 0x00 + k for private keys\n    buffer.writeUInt8(0, 45);\n    this.privateKey.copy(buffer, 46); // 33 bytes: the public key\n  } else {\n    // X9.62 encoding for public keys\n    this.publicKey.copy(buffer, 45);\n  }\n\n  return bs58check.encode(buffer);\n};\n\nBIP32.prototype.toWIF = function () {\n  if (!this.privateKey) throw new TypeError('Missing private key');\n  return wif.encode(this.network.wif, this.privateKey, true);\n};\n\nvar HIGHEST_BIT = 0x80000000; // https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\n\nBIP32.prototype.derive = function (index) {\n  typeforce(typeforce.UInt32, index);\n  var isHardened = index >= HIGHEST_BIT;\n  var data = Buffer.allocUnsafe(37); // Hardened child\n\n  if (isHardened) {\n    if (this.isNeutered()) throw new TypeError('Missing private key for hardened child key'); // data = 0x00 || ser256(kpar) || ser32(index)\n\n    data[0] = 0x00;\n    this.privateKey.copy(data, 1);\n    data.writeUInt32BE(index, 33); // Normal child\n  } else {\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    this.publicKey.copy(data, 0);\n    data.writeUInt32BE(index, 33);\n  }\n\n  var I = crypto.hmacSHA512(this.chainCode, data);\n  var IL = I.slice(0, 32);\n  var IR = I.slice(32); // if parse256(IL) >= n, proceed with the next value for i\n\n  if (!ecc.isPrivate(IL)) return this.derive(index + 1); // Private parent key -> private child key\n\n  var hd;\n\n  if (!this.isNeutered()) {\n    // ki = parse256(IL) + kpar (mod n)\n    var ki = ecc.privateAdd(this.privateKey, IL); // In case ki == 0, proceed with the next value for i\n\n    if (ki == null) return this.derive(index + 1);\n    hd = fromPrivateKey(ki, IR, this.network); // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    var Ki = ecc.pointAddScalar(this.publicKey, IL, true); // In case Ki is the point at infinity, proceed with the next value for i\n\n    if (Ki === null) return this.derive(index + 1);\n    hd = fromPublicKey(Ki, IR, this.network);\n  }\n\n  hd.depth = this.depth + 1;\n  hd.index = index;\n  hd.parentFingerprint = this.fingerprint.readUInt32BE(0);\n  return hd;\n};\n\nvar UINT31_MAX = Math.pow(2, 31) - 1;\n\nfunction UInt31(value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\n\nBIP32.prototype.deriveHardened = function (index) {\n  typeforce(UInt31, index); // Only derives hardened private keys by default\n\n  return this.derive(index + HIGHEST_BIT);\n};\n\nfunction BIP32Path(value) {\n  return typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/);\n}\n\nBIP32.prototype.derivePath = function (path) {\n  typeforce(BIP32Path, path);\n  var splitPath = path.split('/');\n\n  if (splitPath[0] === 'm') {\n    if (this.parentFingerprint) throw new TypeError('Expected master, got child');\n    splitPath = splitPath.slice(1);\n  }\n\n  return splitPath.reduce(function (prevHd, indexStr) {\n    var index;\n\n    if (indexStr.slice(-1) === \"'\") {\n      index = parseInt(indexStr.slice(0, -1), 10);\n      return prevHd.deriveHardened(index);\n    } else {\n      index = parseInt(indexStr, 10);\n      return prevHd.derive(index);\n    }\n  }, this);\n};\n\nBIP32.prototype.sign = function (hash) {\n  return ecc.sign(hash, this.privateKey);\n};\n\nBIP32.prototype.verify = function (hash, signature) {\n  return ecc.verify(hash, this.publicKey, signature);\n};\n\nfunction fromBase58(string, network) {\n  var buffer = bs58check.decode(string);\n  if (buffer.length !== 78) throw new TypeError('Invalid buffer length');\n  network = network || BITCOIN; // 4 bytes: version bytes\n\n  var version = buffer.readUInt32BE(0);\n  if (version !== network.bip32.private && version !== network.bip32.public) throw new TypeError('Invalid network version'); // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n\n  var depth = buffer[4]; // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n\n  var parentFingerprint = buffer.readUInt32BE(5);\n\n  if (depth === 0) {\n    if (parentFingerprint !== 0x00000000) throw new TypeError('Invalid parent fingerprint');\n  } // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n  // This is encoded in MSB order. (0x00000000 if master key)\n\n\n  var index = buffer.readUInt32BE(9);\n  if (depth === 0 && index !== 0) throw new TypeError('Invalid index'); // 32 bytes: the chain code\n\n  var chainCode = buffer.slice(13, 45);\n  var hd; // 33 bytes: private key data (0x00 + k)\n\n  if (version === network.bip32.private) {\n    if (buffer.readUInt8(45) !== 0x00) throw new TypeError('Invalid private key');\n    var k = buffer.slice(46, 78);\n    hd = fromPrivateKey(k, chainCode, network); // 33 bytes: public key data (0x02 + X or 0x03 + X)\n  } else {\n    var X = buffer.slice(45, 78);\n    hd = fromPublicKey(X, chainCode, network);\n  }\n\n  hd.depth = depth;\n  hd.index = index;\n  hd.parentFingerprint = parentFingerprint;\n  return hd;\n}\n\nfunction fromPrivateKey(privateKey, chainCode, network) {\n  typeforce({\n    privateKey: UINT256_TYPE,\n    chainCode: UINT256_TYPE\n  }, {\n    privateKey: privateKey,\n    chainCode: chainCode\n  });\n  network = network || BITCOIN;\n  if (!ecc.isPrivate(privateKey)) throw new TypeError('Private key not in range [1, n)');\n  return new BIP32(privateKey, null, chainCode, network);\n}\n\nfunction fromPublicKey(publicKey, chainCode, network) {\n  typeforce({\n    publicKey: typeforce.BufferN(33),\n    chainCode: UINT256_TYPE\n  }, {\n    publicKey: publicKey,\n    chainCode: chainCode\n  });\n  network = network || BITCOIN; // verify the X coordinate is a point on the curve\n\n  if (!ecc.isPoint(publicKey)) throw new TypeError('Point is not on the curve');\n  return new BIP32(null, publicKey, chainCode, network);\n}\n\nfunction fromSeed(seed, network) {\n  typeforce(typeforce.Buffer, seed);\n  if (seed.length < 16) throw new TypeError('Seed should be at least 128 bits');\n  if (seed.length > 64) throw new TypeError('Seed should be at most 512 bits');\n  network = network || BITCOIN;\n  var I = crypto.hmacSHA512('Bitcoin seed', seed);\n  var IL = I.slice(0, 32);\n  var IR = I.slice(32);\n  return fromPrivateKey(IL, IR, network);\n}\n\nmodule.exports = {\n  fromBase58: fromBase58,\n  fromPrivateKey: fromPrivateKey,\n  fromPublicKey: fromPublicKey,\n  fromSeed: fromSeed\n};","var createHash = require('create-hash');\n\nvar createHmac = require('create-hmac');\n\nfunction hash160(buffer) {\n  return createHash('rmd160').update(createHash('sha256').update(buffer).digest()).digest();\n}\n\nfunction hmacSHA512(key, data) {\n  return createHmac('sha512', key).update(data).digest();\n}\n\nmodule.exports = {\n  hash160: hash160,\n  hmacSHA512: hmacSHA512\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Error strings\n */\n\nvar ERRORS = {\n  INVALID_ENCODING: 'Invalid encoding provided. Please specify a valid encoding the internal Node.js Buffer supports.',\n  INVALID_SMARTBUFFER_SIZE: 'Invalid size provided. Size must be a valid integer greater than zero.',\n  INVALID_SMARTBUFFER_BUFFER: 'Invalid Buffer provided in SmartBufferOptions.',\n  INVALID_SMARTBUFFER_OBJECT: 'Invalid SmartBufferOptions object supplied to SmartBuffer constructor or factory methods.',\n  INVALID_OFFSET: 'An invalid offset value was provided.',\n  INVALID_OFFSET_NON_NUMBER: 'An invalid offset value was provided. A numeric value is required.',\n  INVALID_LENGTH: 'An invalid length value was provided.',\n  INVALID_LENGTH_NON_NUMBER: 'An invalid length value was provived. A numeric value is required.',\n  INVALID_TARGET_OFFSET: 'Target offset is beyond the bounds of the internal SmartBuffer data.',\n  INVALID_TARGET_LENGTH: 'Specified length value moves cursor beyong the bounds of the internal SmartBuffer data.',\n  INVALID_READ_BEYOND_BOUNDS: 'Attempted to read beyond the bounds of the managed data.',\n  INVALID_WRITE_BEYOND_BOUNDS: 'Attempted to write beyond the bounds of the managed data.'\n};\nexports.ERRORS = ERRORS;\n/**\n * Checks if a given encoding is a valid Buffer encoding. (Throws an exception if check fails)\n *\n * @param { String } encoding The encoding string to check.\n */\n\nfunction checkEncoding(encoding) {\n  if (!Buffer.isEncoding(encoding)) {\n    throw new Error(ERRORS.INVALID_ENCODING);\n  }\n}\n\nexports.checkEncoding = checkEncoding;\n/**\n * Checks if a given number is a finite integer. (Throws an exception if check fails)\n *\n * @param { Number } value The number value to check.\n */\n\nfunction isFiniteInteger(value) {\n  return typeof value === 'number' && isFinite(value) && isInteger(value);\n}\n\nexports.isFiniteInteger = isFiniteInteger;\n/**\n * Checks if an offset/length value is valid. (Throws an exception if check fails)\n *\n * @param value The value to check.\n * @param offset True if checking an offset, false if checking a length.\n */\n\nfunction checkOffsetOrLengthValue(value, offset) {\n  if (typeof value === 'number') {\n    // Check for non finite/non integers\n    if (!isFiniteInteger(value) || value < 0) {\n      throw new Error(offset ? ERRORS.INVALID_OFFSET : ERRORS.INVALID_LENGTH);\n    }\n  } else {\n    throw new Error(offset ? ERRORS.INVALID_OFFSET_NON_NUMBER : ERRORS.INVALID_LENGTH_NON_NUMBER);\n  }\n}\n/**\n * Checks if a length value is valid. (Throws an exception if check fails)\n *\n * @param { Number } length The value to check.\n */\n\n\nfunction checkLengthValue(length) {\n  checkOffsetOrLengthValue(length, false);\n}\n\nexports.checkLengthValue = checkLengthValue;\n/**\n * Checks if a offset value is valid. (Throws an exception if check fails)\n *\n * @param { Number } offset The value to check.\n */\n\nfunction checkOffsetValue(offset) {\n  checkOffsetOrLengthValue(offset, true);\n}\n\nexports.checkOffsetValue = checkOffsetValue;\n/**\n * Checks if a target offset value is out of bounds. (Throws an exception if check fails)\n *\n * @param { Number } offset The offset value to check.\n * @param { SmartBuffer } buff The SmartBuffer instance to check against.\n */\n\nfunction checkTargetOffset(offset, buff) {\n  if (offset < 0 || offset > buff.length) {\n    throw new Error(ERRORS.INVALID_TARGET_OFFSET);\n  }\n}\n\nexports.checkTargetOffset = checkTargetOffset;\n/**\n * Determines whether a given number is a integer.\n * @param value The number to check.\n */\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}","// THIS FILE IS GENERATED, DO NO EDIT MANUALLY\n// For more information see the README.md\n\n/* eslint-disable dot-notation */\n'use strict'; // miscellaneous\n\nexports['raw'] = Buffer.from('55', 'hex'); // serialization formats\n\nexports['cbor'] = Buffer.from('51', 'hex');\nexports['protobuf'] = Buffer.from('50', 'hex');\nexports['rlp'] = Buffer.from('60', 'hex');\nexports['bencode'] = Buffer.from('63', 'hex'); // multiformats\n\nexports['multicodec'] = Buffer.from('30', 'hex');\nexports['multihash'] = Buffer.from('31', 'hex');\nexports['multiaddr'] = Buffer.from('32', 'hex');\nexports['multibase'] = Buffer.from('33', 'hex'); // multihashes\n\nexports['identity'] = Buffer.from('00', 'hex');\nexports['md4'] = Buffer.from('d4', 'hex');\nexports['md5'] = Buffer.from('d5', 'hex');\nexports['sha1'] = Buffer.from('11', 'hex');\nexports['sha2-256'] = Buffer.from('12', 'hex');\nexports['sha2-512'] = Buffer.from('13', 'hex');\nexports['dbl-sha2-256'] = Buffer.from('56', 'hex');\nexports['sha3-224'] = Buffer.from('17', 'hex');\nexports['sha3-256'] = Buffer.from('16', 'hex');\nexports['sha3-384'] = Buffer.from('15', 'hex');\nexports['sha3-512'] = Buffer.from('14', 'hex');\nexports['shake-128'] = Buffer.from('18', 'hex');\nexports['shake-256'] = Buffer.from('19', 'hex');\nexports['keccak-224'] = Buffer.from('1a', 'hex');\nexports['keccak-256'] = Buffer.from('1b', 'hex');\nexports['keccak-384'] = Buffer.from('1c', 'hex');\nexports['keccak-512'] = Buffer.from('1d', 'hex');\nexports['murmur3-128'] = Buffer.from('22', 'hex');\nexports['murmur3-32'] = Buffer.from('23', 'hex');\nexports['x11'] = Buffer.from('1100', 'hex');\nexports['blake2b-8'] = Buffer.from('b201', 'hex');\nexports['blake2b-16'] = Buffer.from('b202', 'hex');\nexports['blake2b-24'] = Buffer.from('b203', 'hex');\nexports['blake2b-32'] = Buffer.from('b204', 'hex');\nexports['blake2b-40'] = Buffer.from('b205', 'hex');\nexports['blake2b-48'] = Buffer.from('b206', 'hex');\nexports['blake2b-56'] = Buffer.from('b207', 'hex');\nexports['blake2b-64'] = Buffer.from('b208', 'hex');\nexports['blake2b-72'] = Buffer.from('b209', 'hex');\nexports['blake2b-80'] = Buffer.from('b20a', 'hex');\nexports['blake2b-88'] = Buffer.from('b20b', 'hex');\nexports['blake2b-96'] = Buffer.from('b20c', 'hex');\nexports['blake2b-104'] = Buffer.from('b20d', 'hex');\nexports['blake2b-112'] = Buffer.from('b20e', 'hex');\nexports['blake2b-120'] = Buffer.from('b20f', 'hex');\nexports['blake2b-128'] = Buffer.from('b210', 'hex');\nexports['blake2b-136'] = Buffer.from('b211', 'hex');\nexports['blake2b-144'] = Buffer.from('b212', 'hex');\nexports['blake2b-152'] = Buffer.from('b213', 'hex');\nexports['blake2b-160'] = Buffer.from('b214', 'hex');\nexports['blake2b-168'] = Buffer.from('b215', 'hex');\nexports['blake2b-176'] = Buffer.from('b216', 'hex');\nexports['blake2b-184'] = Buffer.from('b217', 'hex');\nexports['blake2b-192'] = Buffer.from('b218', 'hex');\nexports['blake2b-200'] = Buffer.from('b219', 'hex');\nexports['blake2b-208'] = Buffer.from('b21a', 'hex');\nexports['blake2b-216'] = Buffer.from('b21b', 'hex');\nexports['blake2b-224'] = Buffer.from('b21c', 'hex');\nexports['blake2b-232'] = Buffer.from('b21d', 'hex');\nexports['blake2b-240'] = Buffer.from('b21e', 'hex');\nexports['blake2b-248'] = Buffer.from('b21f', 'hex');\nexports['blake2b-256'] = Buffer.from('b220', 'hex');\nexports['blake2b-264'] = Buffer.from('b221', 'hex');\nexports['blake2b-272'] = Buffer.from('b222', 'hex');\nexports['blake2b-280'] = Buffer.from('b223', 'hex');\nexports['blake2b-288'] = Buffer.from('b224', 'hex');\nexports['blake2b-296'] = Buffer.from('b225', 'hex');\nexports['blake2b-304'] = Buffer.from('b226', 'hex');\nexports['blake2b-312'] = Buffer.from('b227', 'hex');\nexports['blake2b-320'] = Buffer.from('b228', 'hex');\nexports['blake2b-328'] = Buffer.from('b229', 'hex');\nexports['blake2b-336'] = Buffer.from('b22a', 'hex');\nexports['blake2b-344'] = Buffer.from('b22b', 'hex');\nexports['blake2b-352'] = Buffer.from('b22c', 'hex');\nexports['blake2b-360'] = Buffer.from('b22d', 'hex');\nexports['blake2b-368'] = Buffer.from('b22e', 'hex');\nexports['blake2b-376'] = Buffer.from('b22f', 'hex');\nexports['blake2b-384'] = Buffer.from('b230', 'hex');\nexports['blake2b-392'] = Buffer.from('b231', 'hex');\nexports['blake2b-400'] = Buffer.from('b232', 'hex');\nexports['blake2b-408'] = Buffer.from('b233', 'hex');\nexports['blake2b-416'] = Buffer.from('b234', 'hex');\nexports['blake2b-424'] = Buffer.from('b235', 'hex');\nexports['blake2b-432'] = Buffer.from('b236', 'hex');\nexports['blake2b-440'] = Buffer.from('b237', 'hex');\nexports['blake2b-448'] = Buffer.from('b238', 'hex');\nexports['blake2b-456'] = Buffer.from('b239', 'hex');\nexports['blake2b-464'] = Buffer.from('b23a', 'hex');\nexports['blake2b-472'] = Buffer.from('b23b', 'hex');\nexports['blake2b-480'] = Buffer.from('b23c', 'hex');\nexports['blake2b-488'] = Buffer.from('b23d', 'hex');\nexports['blake2b-496'] = Buffer.from('b23e', 'hex');\nexports['blake2b-504'] = Buffer.from('b23f', 'hex');\nexports['blake2b-512'] = Buffer.from('b240', 'hex');\nexports['blake2s-8'] = Buffer.from('b241', 'hex');\nexports['blake2s-16'] = Buffer.from('b242', 'hex');\nexports['blake2s-24'] = Buffer.from('b243', 'hex');\nexports['blake2s-32'] = Buffer.from('b244', 'hex');\nexports['blake2s-40'] = Buffer.from('b245', 'hex');\nexports['blake2s-48'] = Buffer.from('b246', 'hex');\nexports['blake2s-56'] = Buffer.from('b247', 'hex');\nexports['blake2s-64'] = Buffer.from('b248', 'hex');\nexports['blake2s-72'] = Buffer.from('b249', 'hex');\nexports['blake2s-80'] = Buffer.from('b24a', 'hex');\nexports['blake2s-88'] = Buffer.from('b24b', 'hex');\nexports['blake2s-96'] = Buffer.from('b24c', 'hex');\nexports['blake2s-104'] = Buffer.from('b24d', 'hex');\nexports['blake2s-112'] = Buffer.from('b24e', 'hex');\nexports['blake2s-120'] = Buffer.from('b24f', 'hex');\nexports['blake2s-128'] = Buffer.from('b250', 'hex');\nexports['blake2s-136'] = Buffer.from('b251', 'hex');\nexports['blake2s-144'] = Buffer.from('b252', 'hex');\nexports['blake2s-152'] = Buffer.from('b253', 'hex');\nexports['blake2s-160'] = Buffer.from('b254', 'hex');\nexports['blake2s-168'] = Buffer.from('b255', 'hex');\nexports['blake2s-176'] = Buffer.from('b256', 'hex');\nexports['blake2s-184'] = Buffer.from('b257', 'hex');\nexports['blake2s-192'] = Buffer.from('b258', 'hex');\nexports['blake2s-200'] = Buffer.from('b259', 'hex');\nexports['blake2s-208'] = Buffer.from('b25a', 'hex');\nexports['blake2s-216'] = Buffer.from('b25b', 'hex');\nexports['blake2s-224'] = Buffer.from('b25c', 'hex');\nexports['blake2s-232'] = Buffer.from('b25d', 'hex');\nexports['blake2s-240'] = Buffer.from('b25e', 'hex');\nexports['blake2s-248'] = Buffer.from('b25f', 'hex');\nexports['blake2s-256'] = Buffer.from('b260', 'hex');\nexports['skein256-8'] = Buffer.from('b301', 'hex');\nexports['skein256-16'] = Buffer.from('b302', 'hex');\nexports['skein256-24'] = Buffer.from('b303', 'hex');\nexports['skein256-32'] = Buffer.from('b304', 'hex');\nexports['skein256-40'] = Buffer.from('b305', 'hex');\nexports['skein256-48'] = Buffer.from('b306', 'hex');\nexports['skein256-56'] = Buffer.from('b307', 'hex');\nexports['skein256-64'] = Buffer.from('b308', 'hex');\nexports['skein256-72'] = Buffer.from('b309', 'hex');\nexports['skein256-80'] = Buffer.from('b30a', 'hex');\nexports['skein256-88'] = Buffer.from('b30b', 'hex');\nexports['skein256-96'] = Buffer.from('b30c', 'hex');\nexports['skein256-104'] = Buffer.from('b30d', 'hex');\nexports['skein256-112'] = Buffer.from('b30e', 'hex');\nexports['skein256-120'] = Buffer.from('b30f', 'hex');\nexports['skein256-128'] = Buffer.from('b310', 'hex');\nexports['skein256-136'] = Buffer.from('b311', 'hex');\nexports['skein256-144'] = Buffer.from('b312', 'hex');\nexports['skein256-152'] = Buffer.from('b313', 'hex');\nexports['skein256-160'] = Buffer.from('b314', 'hex');\nexports['skein256-168'] = Buffer.from('b315', 'hex');\nexports['skein256-176'] = Buffer.from('b316', 'hex');\nexports['skein256-184'] = Buffer.from('b317', 'hex');\nexports['skein256-192'] = Buffer.from('b318', 'hex');\nexports['skein256-200'] = Buffer.from('b319', 'hex');\nexports['skein256-208'] = Buffer.from('b31a', 'hex');\nexports['skein256-216'] = Buffer.from('b31b', 'hex');\nexports['skein256-224'] = Buffer.from('b31c', 'hex');\nexports['skein256-232'] = Buffer.from('b31d', 'hex');\nexports['skein256-240'] = Buffer.from('b31e', 'hex');\nexports['skein256-248'] = Buffer.from('b31f', 'hex');\nexports['skein256-256'] = Buffer.from('b320', 'hex');\nexports['skein512-8'] = Buffer.from('b321', 'hex');\nexports['skein512-16'] = Buffer.from('b322', 'hex');\nexports['skein512-24'] = Buffer.from('b323', 'hex');\nexports['skein512-32'] = Buffer.from('b324', 'hex');\nexports['skein512-40'] = Buffer.from('b325', 'hex');\nexports['skein512-48'] = Buffer.from('b326', 'hex');\nexports['skein512-56'] = Buffer.from('b327', 'hex');\nexports['skein512-64'] = Buffer.from('b328', 'hex');\nexports['skein512-72'] = Buffer.from('b329', 'hex');\nexports['skein512-80'] = Buffer.from('b32a', 'hex');\nexports['skein512-88'] = Buffer.from('b32b', 'hex');\nexports['skein512-96'] = Buffer.from('b32c', 'hex');\nexports['skein512-104'] = Buffer.from('b32d', 'hex');\nexports['skein512-112'] = Buffer.from('b32e', 'hex');\nexports['skein512-120'] = Buffer.from('b32f', 'hex');\nexports['skein512-128'] = Buffer.from('b330', 'hex');\nexports['skein512-136'] = Buffer.from('b331', 'hex');\nexports['skein512-144'] = Buffer.from('b332', 'hex');\nexports['skein512-152'] = Buffer.from('b333', 'hex');\nexports['skein512-160'] = Buffer.from('b334', 'hex');\nexports['skein512-168'] = Buffer.from('b335', 'hex');\nexports['skein512-176'] = Buffer.from('b336', 'hex');\nexports['skein512-184'] = Buffer.from('b337', 'hex');\nexports['skein512-192'] = Buffer.from('b338', 'hex');\nexports['skein512-200'] = Buffer.from('b339', 'hex');\nexports['skein512-208'] = Buffer.from('b33a', 'hex');\nexports['skein512-216'] = Buffer.from('b33b', 'hex');\nexports['skein512-224'] = Buffer.from('b33c', 'hex');\nexports['skein512-232'] = Buffer.from('b33d', 'hex');\nexports['skein512-240'] = Buffer.from('b33e', 'hex');\nexports['skein512-248'] = Buffer.from('b33f', 'hex');\nexports['skein512-256'] = Buffer.from('b340', 'hex');\nexports['skein512-264'] = Buffer.from('b341', 'hex');\nexports['skein512-272'] = Buffer.from('b342', 'hex');\nexports['skein512-280'] = Buffer.from('b343', 'hex');\nexports['skein512-288'] = Buffer.from('b344', 'hex');\nexports['skein512-296'] = Buffer.from('b345', 'hex');\nexports['skein512-304'] = Buffer.from('b346', 'hex');\nexports['skein512-312'] = Buffer.from('b347', 'hex');\nexports['skein512-320'] = Buffer.from('b348', 'hex');\nexports['skein512-328'] = Buffer.from('b349', 'hex');\nexports['skein512-336'] = Buffer.from('b34a', 'hex');\nexports['skein512-344'] = Buffer.from('b34b', 'hex');\nexports['skein512-352'] = Buffer.from('b34c', 'hex');\nexports['skein512-360'] = Buffer.from('b34d', 'hex');\nexports['skein512-368'] = Buffer.from('b34e', 'hex');\nexports['skein512-376'] = Buffer.from('b34f', 'hex');\nexports['skein512-384'] = Buffer.from('b350', 'hex');\nexports['skein512-392'] = Buffer.from('b351', 'hex');\nexports['skein512-400'] = Buffer.from('b352', 'hex');\nexports['skein512-408'] = Buffer.from('b353', 'hex');\nexports['skein512-416'] = Buffer.from('b354', 'hex');\nexports['skein512-424'] = Buffer.from('b355', 'hex');\nexports['skein512-432'] = Buffer.from('b356', 'hex');\nexports['skein512-440'] = Buffer.from('b357', 'hex');\nexports['skein512-448'] = Buffer.from('b358', 'hex');\nexports['skein512-456'] = Buffer.from('b359', 'hex');\nexports['skein512-464'] = Buffer.from('b35a', 'hex');\nexports['skein512-472'] = Buffer.from('b35b', 'hex');\nexports['skein512-480'] = Buffer.from('b35c', 'hex');\nexports['skein512-488'] = Buffer.from('b35d', 'hex');\nexports['skein512-496'] = Buffer.from('b35e', 'hex');\nexports['skein512-504'] = Buffer.from('b35f', 'hex');\nexports['skein512-512'] = Buffer.from('b360', 'hex');\nexports['skein1024-8'] = Buffer.from('b361', 'hex');\nexports['skein1024-16'] = Buffer.from('b362', 'hex');\nexports['skein1024-24'] = Buffer.from('b363', 'hex');\nexports['skein1024-32'] = Buffer.from('b364', 'hex');\nexports['skein1024-40'] = Buffer.from('b365', 'hex');\nexports['skein1024-48'] = Buffer.from('b366', 'hex');\nexports['skein1024-56'] = Buffer.from('b367', 'hex');\nexports['skein1024-64'] = Buffer.from('b368', 'hex');\nexports['skein1024-72'] = Buffer.from('b369', 'hex');\nexports['skein1024-80'] = Buffer.from('b36a', 'hex');\nexports['skein1024-88'] = Buffer.from('b36b', 'hex');\nexports['skein1024-96'] = Buffer.from('b36c', 'hex');\nexports['skein1024-104'] = Buffer.from('b36d', 'hex');\nexports['skein1024-112'] = Buffer.from('b36e', 'hex');\nexports['skein1024-120'] = Buffer.from('b36f', 'hex');\nexports['skein1024-128'] = Buffer.from('b370', 'hex');\nexports['skein1024-136'] = Buffer.from('b371', 'hex');\nexports['skein1024-144'] = Buffer.from('b372', 'hex');\nexports['skein1024-152'] = Buffer.from('b373', 'hex');\nexports['skein1024-160'] = Buffer.from('b374', 'hex');\nexports['skein1024-168'] = Buffer.from('b375', 'hex');\nexports['skein1024-176'] = Buffer.from('b376', 'hex');\nexports['skein1024-184'] = Buffer.from('b377', 'hex');\nexports['skein1024-192'] = Buffer.from('b378', 'hex');\nexports['skein1024-200'] = Buffer.from('b379', 'hex');\nexports['skein1024-208'] = Buffer.from('b37a', 'hex');\nexports['skein1024-216'] = Buffer.from('b37b', 'hex');\nexports['skein1024-224'] = Buffer.from('b37c', 'hex');\nexports['skein1024-232'] = Buffer.from('b37d', 'hex');\nexports['skein1024-240'] = Buffer.from('b37e', 'hex');\nexports['skein1024-248'] = Buffer.from('b37f', 'hex');\nexports['skein1024-256'] = Buffer.from('b380', 'hex');\nexports['skein1024-264'] = Buffer.from('b381', 'hex');\nexports['skein1024-272'] = Buffer.from('b382', 'hex');\nexports['skein1024-280'] = Buffer.from('b383', 'hex');\nexports['skein1024-288'] = Buffer.from('b384', 'hex');\nexports['skein1024-296'] = Buffer.from('b385', 'hex');\nexports['skein1024-304'] = Buffer.from('b386', 'hex');\nexports['skein1024-312'] = Buffer.from('b387', 'hex');\nexports['skein1024-320'] = Buffer.from('b388', 'hex');\nexports['skein1024-328'] = Buffer.from('b389', 'hex');\nexports['skein1024-336'] = Buffer.from('b38a', 'hex');\nexports['skein1024-344'] = Buffer.from('b38b', 'hex');\nexports['skein1024-352'] = Buffer.from('b38c', 'hex');\nexports['skein1024-360'] = Buffer.from('b38d', 'hex');\nexports['skein1024-368'] = Buffer.from('b38e', 'hex');\nexports['skein1024-376'] = Buffer.from('b38f', 'hex');\nexports['skein1024-384'] = Buffer.from('b390', 'hex');\nexports['skein1024-392'] = Buffer.from('b391', 'hex');\nexports['skein1024-400'] = Buffer.from('b392', 'hex');\nexports['skein1024-408'] = Buffer.from('b393', 'hex');\nexports['skein1024-416'] = Buffer.from('b394', 'hex');\nexports['skein1024-424'] = Buffer.from('b395', 'hex');\nexports['skein1024-432'] = Buffer.from('b396', 'hex');\nexports['skein1024-440'] = Buffer.from('b397', 'hex');\nexports['skein1024-448'] = Buffer.from('b398', 'hex');\nexports['skein1024-456'] = Buffer.from('b399', 'hex');\nexports['skein1024-464'] = Buffer.from('b39a', 'hex');\nexports['skein1024-472'] = Buffer.from('b39b', 'hex');\nexports['skein1024-480'] = Buffer.from('b39c', 'hex');\nexports['skein1024-488'] = Buffer.from('b39d', 'hex');\nexports['skein1024-496'] = Buffer.from('b39e', 'hex');\nexports['skein1024-504'] = Buffer.from('b39f', 'hex');\nexports['skein1024-512'] = Buffer.from('b3a0', 'hex');\nexports['skein1024-520'] = Buffer.from('b3a1', 'hex');\nexports['skein1024-528'] = Buffer.from('b3a2', 'hex');\nexports['skein1024-536'] = Buffer.from('b3a3', 'hex');\nexports['skein1024-544'] = Buffer.from('b3a4', 'hex');\nexports['skein1024-552'] = Buffer.from('b3a5', 'hex');\nexports['skein1024-560'] = Buffer.from('b3a6', 'hex');\nexports['skein1024-568'] = Buffer.from('b3a7', 'hex');\nexports['skein1024-576'] = Buffer.from('b3a8', 'hex');\nexports['skein1024-584'] = Buffer.from('b3a9', 'hex');\nexports['skein1024-592'] = Buffer.from('b3aa', 'hex');\nexports['skein1024-600'] = Buffer.from('b3ab', 'hex');\nexports['skein1024-608'] = Buffer.from('b3ac', 'hex');\nexports['skein1024-616'] = Buffer.from('b3ad', 'hex');\nexports['skein1024-624'] = Buffer.from('b3ae', 'hex');\nexports['skein1024-632'] = Buffer.from('b3af', 'hex');\nexports['skein1024-640'] = Buffer.from('b3b0', 'hex');\nexports['skein1024-648'] = Buffer.from('b3b1', 'hex');\nexports['skein1024-656'] = Buffer.from('b3b2', 'hex');\nexports['skein1024-664'] = Buffer.from('b3b3', 'hex');\nexports['skein1024-672'] = Buffer.from('b3b4', 'hex');\nexports['skein1024-680'] = Buffer.from('b3b5', 'hex');\nexports['skein1024-688'] = Buffer.from('b3b6', 'hex');\nexports['skein1024-696'] = Buffer.from('b3b7', 'hex');\nexports['skein1024-704'] = Buffer.from('b3b8', 'hex');\nexports['skein1024-712'] = Buffer.from('b3b9', 'hex');\nexports['skein1024-720'] = Buffer.from('b3ba', 'hex');\nexports['skein1024-728'] = Buffer.from('b3bb', 'hex');\nexports['skein1024-736'] = Buffer.from('b3bc', 'hex');\nexports['skein1024-744'] = Buffer.from('b3bd', 'hex');\nexports['skein1024-752'] = Buffer.from('b3be', 'hex');\nexports['skein1024-760'] = Buffer.from('b3bf', 'hex');\nexports['skein1024-768'] = Buffer.from('b3c0', 'hex');\nexports['skein1024-776'] = Buffer.from('b3c1', 'hex');\nexports['skein1024-784'] = Buffer.from('b3c2', 'hex');\nexports['skein1024-792'] = Buffer.from('b3c3', 'hex');\nexports['skein1024-800'] = Buffer.from('b3c4', 'hex');\nexports['skein1024-808'] = Buffer.from('b3c5', 'hex');\nexports['skein1024-816'] = Buffer.from('b3c6', 'hex');\nexports['skein1024-824'] = Buffer.from('b3c7', 'hex');\nexports['skein1024-832'] = Buffer.from('b3c8', 'hex');\nexports['skein1024-840'] = Buffer.from('b3c9', 'hex');\nexports['skein1024-848'] = Buffer.from('b3ca', 'hex');\nexports['skein1024-856'] = Buffer.from('b3cb', 'hex');\nexports['skein1024-864'] = Buffer.from('b3cc', 'hex');\nexports['skein1024-872'] = Buffer.from('b3cd', 'hex');\nexports['skein1024-880'] = Buffer.from('b3ce', 'hex');\nexports['skein1024-888'] = Buffer.from('b3cf', 'hex');\nexports['skein1024-896'] = Buffer.from('b3d0', 'hex');\nexports['skein1024-904'] = Buffer.from('b3d1', 'hex');\nexports['skein1024-912'] = Buffer.from('b3d2', 'hex');\nexports['skein1024-920'] = Buffer.from('b3d3', 'hex');\nexports['skein1024-928'] = Buffer.from('b3d4', 'hex');\nexports['skein1024-936'] = Buffer.from('b3d5', 'hex');\nexports['skein1024-944'] = Buffer.from('b3d6', 'hex');\nexports['skein1024-952'] = Buffer.from('b3d7', 'hex');\nexports['skein1024-960'] = Buffer.from('b3d8', 'hex');\nexports['skein1024-968'] = Buffer.from('b3d9', 'hex');\nexports['skein1024-976'] = Buffer.from('b3da', 'hex');\nexports['skein1024-984'] = Buffer.from('b3db', 'hex');\nexports['skein1024-992'] = Buffer.from('b3dc', 'hex');\nexports['skein1024-1000'] = Buffer.from('b3dd', 'hex');\nexports['skein1024-1008'] = Buffer.from('b3de', 'hex');\nexports['skein1024-1016'] = Buffer.from('b3df', 'hex');\nexports['skein1024-1024'] = Buffer.from('b3e0', 'hex'); // multiaddrs\n\nexports['ip4'] = Buffer.from('04', 'hex');\nexports['ip6'] = Buffer.from('29', 'hex');\nexports['ip6zone'] = Buffer.from('2a', 'hex');\nexports['tcp'] = Buffer.from('06', 'hex');\nexports['udp'] = Buffer.from('0111', 'hex');\nexports['dccp'] = Buffer.from('21', 'hex');\nexports['sctp'] = Buffer.from('84', 'hex');\nexports['udt'] = Buffer.from('012d', 'hex');\nexports['utp'] = Buffer.from('012e', 'hex');\nexports['p2p'] = Buffer.from('01a5', 'hex');\nexports['ipfs'] = Buffer.from('01a5', 'hex');\nexports['http'] = Buffer.from('01e0', 'hex');\nexports['https'] = Buffer.from('01bb', 'hex');\nexports['quic'] = Buffer.from('01cc', 'hex');\nexports['ws'] = Buffer.from('01dd', 'hex');\nexports['wss'] = Buffer.from('01de', 'hex');\nexports['onion'] = Buffer.from('01bc', 'hex');\nexports['onion3'] = Buffer.from('01bd', 'hex');\nexports['garlic64'] = Buffer.from('01be', 'hex');\nexports['p2p-circuit'] = Buffer.from('0122', 'hex');\nexports['dns'] = Buffer.from('35', 'hex');\nexports['dns4'] = Buffer.from('36', 'hex');\nexports['dns6'] = Buffer.from('37', 'hex');\nexports['dnsaddr'] = Buffer.from('38', 'hex');\nexports['p2p-websocket-star'] = Buffer.from('01df', 'hex');\nexports['p2p-webrtc-star'] = Buffer.from('0113', 'hex');\nexports['p2p-webrtc-direct'] = Buffer.from('0114', 'hex');\nexports['unix'] = Buffer.from('0190', 'hex'); // archiving formats\n// image formats\n// video formats\n// IPLD formats\n\nexports['dag-pb'] = Buffer.from('70', 'hex');\nexports['dag-cbor'] = Buffer.from('71', 'hex');\nexports['dag-json'] = Buffer.from('0129', 'hex');\nexports['git-raw'] = Buffer.from('78', 'hex');\nexports['eth-block'] = Buffer.from('90', 'hex');\nexports['eth-block-list'] = Buffer.from('91', 'hex');\nexports['eth-tx-trie'] = Buffer.from('92', 'hex');\nexports['eth-tx'] = Buffer.from('93', 'hex');\nexports['eth-tx-receipt-trie'] = Buffer.from('94', 'hex');\nexports['eth-tx-receipt'] = Buffer.from('95', 'hex');\nexports['eth-state-trie'] = Buffer.from('96', 'hex');\nexports['eth-account-snapshot'] = Buffer.from('97', 'hex');\nexports['eth-storage-trie'] = Buffer.from('98', 'hex');\nexports['bitcoin-block'] = Buffer.from('b0', 'hex');\nexports['bitcoin-tx'] = Buffer.from('b1', 'hex');\nexports['zcash-block'] = Buffer.from('c0', 'hex');\nexports['zcash-tx'] = Buffer.from('c1', 'hex');\nexports['stellar-block'] = Buffer.from('d0', 'hex');\nexports['stellar-tx'] = Buffer.from('d1', 'hex');\nexports['decred-block'] = Buffer.from('e0', 'hex');\nexports['decred-tx'] = Buffer.from('e1', 'hex');\nexports['dash-block'] = Buffer.from('f0', 'hex');\nexports['dash-tx'] = Buffer.from('f1', 'hex');\nexports['torrent-info'] = Buffer.from('7b', 'hex');\nexports['torrent-file'] = Buffer.from('7c', 'hex');\nexports['ed25519-pub'] = Buffer.from('ed', 'hex');","'use strict';\n\nvar setImmediate = require('async/setImmediate');\n\nvar SmartBuffer = require('smart-buffer').SmartBuffer;\n\nvar gitUtil = require('./util');\n\nexports = module.exports;\n\nexports.serialize = function (dagNode, callback) {\n  var lines = [];\n  lines.push('tree ' + gitUtil.cidToSha(dagNode.tree['/']).toString('hex'));\n  dagNode.parents.forEach(function (parent) {\n    lines.push('parent ' + gitUtil.cidToSha(parent['/']).toString('hex'));\n  });\n  lines.push('author ' + gitUtil.serializePersonLine(dagNode.author));\n  lines.push('committer ' + gitUtil.serializePersonLine(dagNode.committer));\n\n  if (dagNode.encoding) {\n    lines.push('encoding ' + dagNode.encoding);\n  }\n\n  if (dagNode.mergetag) {\n    dagNode.mergetag.forEach(function (tag) {\n      lines.push('mergetag object ' + gitUtil.cidToSha(tag.object['/']).toString('hex'));\n      lines.push(tag.text);\n    });\n  }\n\n  if (dagNode.signature) {\n    lines.push('gpgsig -----BEGIN PGP SIGNATURE-----');\n    lines.push(dagNode.signature.text);\n  }\n\n  lines.push('');\n  lines.push(dagNode.message);\n  var data = lines.join('\\n');\n  var outBuf = new SmartBuffer();\n  outBuf.writeString('commit ');\n  outBuf.writeString(data.length.toString());\n  outBuf.writeUInt8(0);\n  outBuf.writeString(data);\n  setImmediate(function () {\n    return callback(null, outBuf.toBuffer());\n  });\n};\n\nexports.deserialize = function (data, callback) {\n  var lines = data.toString().split('\\n');\n  var res = {\n    gitType: 'commit',\n    parents: []\n  };\n\n  var _loop = function _loop(_line) {\n    var m = lines[_line].match(/^([^ ]+) (.+)$/);\n\n    if (!m) {\n      if (lines[_line] !== '') {\n        setImmediate(function () {\n          return callback(new Error('Invalid commit line ' + _line));\n        });\n      }\n\n      res.message = lines.slice(_line + 1).join('\\n');\n      line = _line;\n      return \"break\";\n    }\n\n    var key = m[1];\n    var value = m[2];\n\n    switch (key) {\n      case 'tree':\n        res.tree = {\n          '/': gitUtil.shaToCid(Buffer.from(value, 'hex'))\n        };\n        break;\n\n      case 'committer':\n        res.committer = gitUtil.parsePersonLine(value);\n        break;\n\n      case 'author':\n        res.author = gitUtil.parsePersonLine(value);\n        break;\n\n      case 'parent':\n        res.parents.push({\n          '/': gitUtil.shaToCid(Buffer.from(value, 'hex'))\n        });\n        break;\n\n      case 'gpgsig':\n        {\n          if (value !== '-----BEGIN PGP SIGNATURE-----') {\n            setImmediate(function () {\n              return callback(new Error('Invalid commit line ' + _line));\n            });\n          }\n\n          res.signature = {};\n          var startLine = _line;\n\n          for (; _line < lines.length - 1; _line++) {\n            if (lines[_line + 1][0] !== ' ') {\n              res.signature.text = lines.slice(startLine + 1, _line + 1).join('\\n');\n              break;\n            }\n          }\n\n          break;\n        }\n\n      case 'mergetag':\n        {\n          var mt = value.match(/^object ([0-9a-f]{40})$/);\n\n          if (!mt) {\n            setImmediate(function () {\n              return callback(new Error('Invalid commit line ' + _line));\n            });\n          }\n\n          var tag = {\n            object: {\n              '/': gitUtil.shaToCid(Buffer.from(mt[1], 'hex'))\n            }\n          };\n          var _startLine = _line;\n\n          for (; _line < lines.length - 1; _line++) {\n            if (lines[_line + 1][0] !== ' ') {\n              tag.text = lines.slice(_startLine + 1, _line + 1).join('\\n');\n              break;\n            }\n          }\n\n          if (!res.mergetag) {\n            res.mergetag = [];\n          }\n\n          res.mergetag.push(tag);\n        }\n        break;\n\n      default:\n        res[key] = value;\n    }\n\n    line = _line;\n  };\n\n  for (var line = 0; line < lines.length; line++) {\n    var _ret = _loop(line);\n\n    if (_ret === \"break\") break;\n  }\n\n  setImmediate(function () {\n    return callback(null, res);\n  });\n};","'use strict';\n\nvar setImmediate = require('async/setImmediate');\n\nvar SmartBuffer = require('smart-buffer').SmartBuffer;\n\nvar gitUtil = require('./util');\n\nexports = module.exports;\n\nexports.serialize = function (dagNode, callback) {\n  var lines = [];\n  lines.push('object ' + gitUtil.cidToSha(dagNode.object['/']).toString('hex'));\n  lines.push('type ' + dagNode.type);\n  lines.push('tag ' + dagNode.tag);\n\n  if (dagNode.tagger !== null) {\n    lines.push('tagger ' + gitUtil.serializePersonLine(dagNode.tagger));\n  }\n\n  lines.push('');\n  lines.push(dagNode.message);\n  var data = lines.join('\\n');\n  var outBuf = new SmartBuffer();\n  outBuf.writeString('tag ');\n  outBuf.writeString(data.length.toString());\n  outBuf.writeUInt8(0);\n  outBuf.writeString(data);\n  setImmediate(function () {\n    return callback(null, outBuf.toBuffer());\n  });\n};\n\nexports.deserialize = function (data, callback) {\n  var lines = data.toString().split('\\n');\n  var res = {\n    gitType: 'tag'\n  };\n\n  var _loop = function _loop(line) {\n    var m = lines[line].match(/^([^ ]+) (.+)$/);\n\n    if (m === null) {\n      if (lines[line] !== '') {\n        setImmediate(function () {\n          return callback(new Error('Invalid tag line ' + line));\n        });\n      }\n\n      res.message = lines.slice(line + 1).join('\\n');\n      return \"break\";\n    }\n\n    var key = m[1];\n    var value = m[2];\n\n    switch (key) {\n      case 'object':\n        res.object = {\n          '/': gitUtil.shaToCid(Buffer.from(value, 'hex'))\n        };\n        break;\n\n      case 'tagger':\n        res.tagger = gitUtil.parsePersonLine(value);\n        break;\n\n      case 'tag':\n        res.tag = value;\n        break;\n\n      case 'type':\n        res.type = value;\n        break;\n\n      default:\n        res[key] = value;\n    }\n  };\n\n  for (var line = 0; line < lines.length; line++) {\n    var _ret = _loop(line);\n\n    if (_ret === \"break\") break;\n  }\n\n  setImmediate(function () {\n    return callback(null, res);\n  });\n};","'use strict';\n\nvar setImmediate = require('async/setImmediate');\n\nvar SmartBuffer = require('smart-buffer').SmartBuffer;\n\nvar gitUtil = require('./util');\n\nexports = module.exports;\n\nexports.serialize = function (dagNode, callback) {\n  var entries = [];\n  Object.keys(dagNode).forEach(function (name) {\n    entries.push([name, dagNode[name]]);\n  });\n  entries.sort(function (a, b) {\n    return a[0] > b[0] ? 1 : -1;\n  });\n  var buf = new SmartBuffer();\n  entries.forEach(function (entry) {\n    buf.writeStringNT(entry[1].mode + ' ' + entry[0]);\n    buf.writeBuffer(gitUtil.cidToSha(entry[1].hash['/']));\n  });\n  var outBuf = new SmartBuffer();\n  outBuf.writeString('tree ');\n  outBuf.writeString(buf.length.toString());\n  outBuf.writeUInt8(0);\n  outBuf.writeBuffer(buf.toBuffer());\n  setImmediate(function () {\n    return callback(null, outBuf.toBuffer());\n  });\n};\n\nexports.deserialize = function (data, callback) {\n  var res = {};\n  var buf = SmartBuffer.fromBuffer(data, 'utf8');\n\n  for (;;) {\n    var modeName = buf.readStringNT();\n\n    if (modeName === '') {\n      break;\n    }\n\n    var hash = buf.readBuffer(gitUtil.SHA1_LENGTH);\n    var modNameMatched = modeName.match(/^(\\d+) (.+)$/);\n\n    if (!modNameMatched) {\n      setImmediate(function () {\n        return callback(new Error('invalid file mode/name'));\n      });\n    }\n\n    if (res[modNameMatched[2]]) {\n      setImmediate(function () {\n        return callback(new Error('duplicate file in tree'));\n      });\n    }\n\n    res[modNameMatched[2]] = {\n      mode: modNameMatched[1],\n      hash: {\n        '/': gitUtil.shaToCid(hash)\n      }\n    };\n  }\n\n  setImmediate(function () {\n    return callback(null, res);\n  });\n};","'use strict';\n\nvar bitcore = module.exports; // module information\n\nbitcore.version = 'v' + require('./package.json').version;\n\nbitcore.versionGuard = function (version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of zcash-bitcore-lib found. ' + 'Please make sure to require zcash-bitcore-lib and check that submodules do' + ' not also include their own zcash-bitcore-lib dependency.'; // TODO: put this back if we start versioning again\n    //throw new Error(message);\n  }\n};\n\nbitcore.versionGuard(global._bitcore);\nglobal._bitcore = bitcore.version; // crypto\n\nbitcore.crypto = {};\nbitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('./lib/crypto/hash');\nbitcore.crypto.Random = require('./lib/crypto/random');\nbitcore.crypto.Point = require('./lib/crypto/point');\nbitcore.crypto.Signature = require('./lib/crypto/signature'); // encoding\n\nbitcore.encoding = {};\nbitcore.encoding.Base58 = require('./lib/encoding/base58');\nbitcore.encoding.Base58Check = require('./lib/encoding/base58check');\nbitcore.encoding.BufferReader = require('./lib/encoding/bufferreader');\nbitcore.encoding.BufferWriter = require('./lib/encoding/bufferwriter');\nbitcore.encoding.Varint = require('./lib/encoding/varint'); // utilities\n\nbitcore.util = {};\nbitcore.util.buffer = require('./lib/util/buffer');\nbitcore.util.js = require('./lib/util/js');\nbitcore.util.preconditions = require('./lib/util/preconditions'); // errors thrown by the library\n\nbitcore.errors = require('./lib/errors'); // main bitcoin library\n\nbitcore.Address = require('./lib/address');\nbitcore.Block = require('./lib/block');\nbitcore.MerkleBlock = require('./lib/block/merkleblock');\nbitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit'); // dependencies, subject to change\n\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash'); // Internal usage, exposed for testing/advanced tweaking\n\nbitcore._HDKeyCache = require('./lib/hdkeycache');\nbitcore.Transaction.sighash = require('./lib/transaction/sighash');","'use strict';\n\nvar docsURL = 'http://bitcore.io/';\nmodule.exports = [{\n  name: 'InvalidB58Char',\n  message: 'Invalid Base58 character: {0} in {1}'\n}, {\n  name: 'InvalidB58Checksum',\n  message: 'Invalid Base58 checksum for {0}'\n}, {\n  name: 'InvalidNetwork',\n  message: 'Invalid version for network: got {0}'\n}, {\n  name: 'InvalidState',\n  message: 'Invalid state: {0}'\n}, {\n  name: 'NotImplemented',\n  message: 'Function {0} was not implemented yet'\n}, {\n  name: 'InvalidNetworkArgument',\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\n}, {\n  name: 'InvalidArgument',\n  message: function message() {\n    return 'Invalid Argument' + (arguments[0] ? ': ' + arguments[0] : '') + (arguments[1] ? ' Documentation: ' + docsURL + arguments[1] : '');\n  }\n}, {\n  name: 'AbstractMethodInvoked',\n  message: 'Abstract Method Invocation: {0}'\n}, {\n  name: 'InvalidArgumentType',\n  message: function message() {\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0];\n  }\n}, {\n  name: 'Unit',\n  message: 'Internal Error on Unit {0}',\n  errors: [{\n    'name': 'UnknownCode',\n    'message': 'Unrecognized unit code: {0}'\n  }, {\n    'name': 'InvalidRate',\n    'message': 'Invalid exchange rate: {0}'\n  }]\n}, {\n  name: 'Transaction',\n  message: 'Internal Error on Transaction {0}',\n  errors: [{\n    name: 'Input',\n    message: 'Internal Error on Input {0}',\n    errors: [{\n      name: 'MissingScript',\n      message: 'Need a script to create an input'\n    }, {\n      name: 'UnsupportedScript',\n      message: 'Unsupported input script type: {0}'\n    }, {\n      name: 'MissingPreviousOutput',\n      message: 'No previous output information.'\n    }]\n  }, {\n    name: 'NeedMoreInfo',\n    message: '{0}'\n  }, {\n    name: 'InvalidSorting',\n    message: 'The sorting function provided did not return the change output as one of the array elements'\n  }, {\n    name: 'InvalidOutputAmountSum',\n    message: '{0}'\n  }, {\n    name: 'MissingSignatures',\n    message: 'Some inputs have not been fully signed'\n  }, {\n    name: 'InvalidIndex',\n    message: 'Invalid index: {0} is not between 0, {1}'\n  }, {\n    name: 'UnableToVerifySignature',\n    message: 'Unable to verify signature: {0}'\n  }, {\n    name: 'DustOutputs',\n    message: 'Dust amount detected in one output'\n  }, {\n    name: 'InvalidSatoshis',\n    message: 'Output satoshis are invalid'\n  }, {\n    name: 'FeeError',\n    message: 'Internal Error on Fee {0}',\n    errors: [{\n      name: 'TooSmall',\n      message: 'Fee is too small: {0}'\n    }, {\n      name: 'TooLarge',\n      message: 'Fee is too large: {0}'\n    }, {\n      name: 'Different',\n      message: 'Unspent value is different from specified fee: {0}'\n    }]\n  }, {\n    name: 'ChangeAddressMissing',\n    message: 'Change address is missing'\n  }, {\n    name: 'BlockHeightTooHigh',\n    message: 'Block Height can be at most 2^32 -1'\n  }, {\n    name: 'NLockTimeOutOfRange',\n    message: 'Block Height can only be between 0 and 499 999 999'\n  }, {\n    name: 'LockTimeTooEarly',\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\n  }]\n}, {\n  name: 'Script',\n  message: 'Internal Error on Script {0}',\n  errors: [{\n    name: 'UnrecognizedAddress',\n    message: 'Expected argument {0} to be an address'\n  }, {\n    name: 'CantDeriveAddress',\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\n  }, {\n    name: 'InvalidBuffer',\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\n  }]\n}, {\n  name: 'HDPrivateKey',\n  message: 'Internal Error on HDPrivateKey {0}',\n  errors: [{\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\n  }, {\n    name: 'InvalidEntropyArgument',\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\n    errors: [{\n      name: 'TooMuchEntropy',\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\n    }, {\n      name: 'NotEnoughEntropy',\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\n    }]\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xprivkey string in {0}'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path: {0}'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\n  }]\n}, {\n  name: 'HDPublicKey',\n  message: 'Internal Error on HDPublicKey {0}',\n  errors: [{\n    name: 'ArgumentIsPrivateExtended',\n    message: 'Argument is an extended private key: {0}'\n  }, {\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument: got {0}'\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xpubkey: got \"{0}\"'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\n  }, {\n    name: 'InvalidIndexCantDeriveHardened',\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\n  }, {\n    name: 'MustSupplyArgument',\n    message: 'Must supply an argument to create a HDPublicKey'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\n  }]\n}];","'use strict';\n\nvar utils = exports;\n\nutils.assert = function assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n};\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++) {\n      res[i] = msg[i] | 0;\n    }\n\n    return res;\n  }\n\n  if (!enc) {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi) res.push(hi, lo);else res.push(lo);\n    }\n  } else if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0) msg = '0' + msg;\n\n    for (var i = 0; i < msg.length; i += 2) {\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  }\n\n  return res;\n}\n\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    res += zero2(msg[i].toString(16));\n  }\n\n  return res;\n}\n\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex') return toHex(arr);else return arr;\n}; // Represent num in a w-NAF form\n\n\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << w + 1;\n  var k = num.clone();\n\n  while (k.cmpn(1) >= 0) {\n    var z;\n\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf.push(z); // Optimization, shift by word if possible\n\n    var shift = k.cmpn(0) !== 0 && k.andln(ws - 1) === 0 ? w + 1 : 1;\n\n    for (var i = 1; i < shift; i++) {\n      naf.push(0);\n    }\n\n    k.ishrn(shift);\n  }\n\n  return naf;\n}\n\nutils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\nfunction getJSF(k1, k2) {\n  var jsf = [[], []];\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = k1.andln(3) + d1 & 3;\n    var m24 = k2.andln(3) + d2 & 3;\n    if (m14 === 3) m14 = -1;\n    if (m24 === 3) m24 = -1;\n    var u1;\n\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = k1.andln(7) + d1 & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n    }\n\n    jsf[0].push(u1);\n    var u2;\n\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = k2.andln(7) + d2 & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n    }\n\n    jsf[1].push(u2); // Second phase\n\n    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n    k1.ishrn(1);\n    k2.ishrn(1);\n  }\n\n  return jsf;\n}\n\nutils.getJSF = getJSF;","var r;\n\nmodule.exports = function rand(len) {\n  if (!r) r = new Rand(null);\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\n\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\nif (typeof window === 'object') {\n  if (window.crypto && window.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n  } else {\n    // Old junk\n    Rand.prototype._rand = function () {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker\n  try {\n    var crypto = require('cry' + 'pto');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n    // Emulate crypto API using randy\n    Rand.prototype._rand = function _rand(n) {\n      var res = new Uint8Array(n);\n\n      for (var i = 0; i < res.length; i++) {\n        res[i] = this.rand.getByte();\n      }\n\n      return res;\n    };\n  }\n}","module.exports = require('./browser/algorithms.json');","var checkParameters = require('./precondition');\n\nvar defaultEncoding = require('./default-encoding');\n\nvar sync = require('./sync');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ZERO_BUF;\nvar subtle = global.crypto && global.crypto.subtle;\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n};\nvar checks = [];\n\nfunction checkNative(algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false);\n  }\n\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false);\n  }\n\n  if (checks[algo] !== undefined) {\n    return checks[algo];\n  }\n\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8);\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function () {\n    return true;\n  }).catch(function () {\n    return false;\n  });\n  checks[algo] = prom;\n  return prom;\n}\n\nfunction browserPbkdf2(password, salt, iterations, length, algo) {\n  return subtle.importKey('raw', password, {\n    name: 'PBKDF2'\n  }, false, ['deriveBits']).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3);\n  }).then(function (res) {\n    return Buffer.from(res);\n  });\n}\n\nfunction resolvePromise(promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out);\n    });\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e);\n    });\n  });\n}\n\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  digest = digest || 'sha1';\n  var algo = toBrowser[digest.toLowerCase()];\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out;\n\n      try {\n        out = sync(password, salt, iterations, keylen, digest);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, out);\n    });\n  }\n\n  checkParameters(password, salt, iterations, keylen);\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2');\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding);\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding);\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo);\n    return sync(password, salt, iterations, keylen, digest);\n  }), callback);\n};","var DES = require('browserify-des');\n\nvar aes = require('browserify-aes/browser');\n\nvar aesModes = require('browserify-aes/modes');\n\nvar desModes = require('browserify-des/modes');\n\nvar ebtk = require('evp_bytestokey');\n\nfunction createCipher(suite, password) {\n  suite = suite.toLowerCase();\n  var keyLen, ivLen;\n\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key;\n    ivLen = aesModes[suite].iv;\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8;\n    ivLen = desModes[suite].iv;\n  } else {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen);\n  return createCipheriv(suite, keys.key, keys.iv);\n}\n\nfunction createDecipher(suite, password) {\n  suite = suite.toLowerCase();\n  var keyLen, ivLen;\n\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key;\n    ivLen = aesModes[suite].iv;\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8;\n    ivLen = desModes[suite].iv;\n  } else {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen);\n  return createDecipheriv(suite, keys.key, keys.iv);\n}\n\nfunction createCipheriv(suite, key, iv) {\n  suite = suite.toLowerCase();\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv);\n  if (desModes[suite]) return new DES({\n    key: key,\n    iv: iv,\n    mode: suite\n  });\n  throw new TypeError('invalid suite type');\n}\n\nfunction createDecipheriv(suite, key, iv) {\n  suite = suite.toLowerCase();\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv);\n  if (desModes[suite]) return new DES({\n    key: key,\n    iv: iv,\n    mode: suite,\n    decrypt: true\n  });\n  throw new TypeError('invalid suite type');\n}\n\nfunction getCiphers() {\n  return Object.keys(desModes).concat(aes.getCiphers());\n}\n\nexports.createCipher = exports.Cipher = createCipher;\nexports.createCipheriv = exports.Cipheriv = createCipheriv;\nexports.createDecipher = exports.Decipher = createDecipher;\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv;\nexports.listCiphers = exports.getCiphers = getCiphers;","var CipherBase = require('cipher-base');\n\nvar des = require('des.js');\n\nvar inherits = require('inherits');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n};\nmodes.des = modes['des-cbc'];\nmodes.des3 = modes['des-ede3-cbc'];\nmodule.exports = DES;\ninherits(DES, CipherBase);\n\nfunction DES(opts) {\n  CipherBase.call(this);\n  var modeName = opts.mode.toLowerCase();\n  var mode = modes[modeName];\n  var type;\n\n  if (opts.decrypt) {\n    type = 'decrypt';\n  } else {\n    type = 'encrypt';\n  }\n\n  var key = opts.key;\n\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key);\n  }\n\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)]);\n  }\n\n  var iv = opts.iv;\n\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv);\n  }\n\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  });\n}\n\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data));\n};\n\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final());\n};","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res = bytes[0 + off] << 24 | bytes[1 + off] << 16 | bytes[2 + off] << 8 | bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = value >>> 16 & 0xff;\n  bytes[2 + off] = value >>> 8 & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inR >>> j + i & 1;\n    }\n\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inL >>> j + i & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= inR >>> j + i & 1;\n    }\n\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= inL >>> j + i & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= inR >>> j + i & 1;\n      outL <<= 1;\n      outL |= inL >>> j + i & 1;\n    }\n  }\n\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= inR >>> j + i & 1;\n      outR <<= 1;\n      outR |= inL >>> j + i & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0; // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inR >> j + i & 1;\n    }\n\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inL >> j + i & 1;\n    }\n  }\n\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= inR >> j + i & 1;\n  } // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n\n\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= inR >> j + i & 1;\n    }\n\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= inL >> j + i & 1;\n    }\n  }\n\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= inL >> j + i & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return num << shift & 0xfffffff | num >>> 28 - shift;\n};\n\nvar pc2table = [// inL => outL\n14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, // inR => outR\n15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n  var len = pc2table.length >>> 1;\n\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= inL >>> pc2table[i] & 0x1;\n  }\n\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= inR >>> pc2table[i] & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n  outL = (r & 1) << 5 | r >>> 27;\n\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= r >>> i & 0x3f;\n  }\n\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= r >>> i & 0x3f;\n    outR <<= 6;\n  }\n\n  outR |= (r & 0x1f) << 1 | r >>> 31;\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n\n  for (var i = 0; i < 4; i++) {\n    var b = inL >>> 18 - i * 6 & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n    out <<= 4;\n    out |= sb;\n  }\n\n  for (var i = 0; i < 4; i++) {\n    var b = inR >>> 18 - i * 6 & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n    out <<= 4;\n    out |= sb;\n  }\n\n  return out >>> 0;\n};\n\nvar permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];\n\nexports.permute = function permute(num) {\n  var out = 0;\n\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= num >>> permuteTable[i] & 0x1;\n  }\n\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n\n  while (str.length < size) {\n    str = '0' + str;\n  }\n\n  var out = [];\n\n  for (var i = 0; i < size; i += group) {\n    out.push(str.slice(i, i + group));\n  }\n\n  return out.join(' ');\n};","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n  this.type = this.options.type;\n  this.blockSize = 8;\n\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\n\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {// Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0) return [];\n  if (this.type === 'decrypt') return this._updateDecrypt(data);else return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n\n  for (var i = 0; i < min; i++) {\n    this.buffer[this.bufferOff + i] = data[off + i];\n  }\n\n  this.bufferOff += min; // Shift next\n\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n  var count = (this.bufferOff + data.length) / this.blockSize | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n    if (this.bufferOff === this.buffer.length) outputOff += this._flushBuffer(out, outputOff);\n  } // Write blocks\n\n\n  var max = data.length - (data.length - inputOff) % this.blockSize;\n\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n\n    outputOff += this.blockSize;\n  } // Queue rest\n\n\n  for (; inputOff < data.length; inputOff++, this.bufferOff++) {\n    this.buffer[this.bufferOff] = data[inputOff];\n  }\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize); // TODO(indutny): optimize it, this is far from optimal\n\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  } // Buffer rest of the input\n\n\n  inputOff += this._buffer(data, inputOff);\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer) first = this.update(buffer);\n  var last;\n  if (this.type === 'encrypt') last = this._finalEncrypt();else last = this._finalDecrypt();\n  if (first) return first.concat(last);else return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0) return false;\n\n  while (off < buffer.length) {\n    buffer[off++] = 0;\n  }\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff)) return [];\n  var out = new Array(this.blockSize);\n\n  this._update(this.buffer, 0, out, 0);\n\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nvar inherits = require('inherits');\n\nvar des = require('../des');\n\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n  var state = new DESState();\n  this._desState = state;\n  this.deriveKeys(state, options.key);\n}\n\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4); // Initial Permutation\n\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n  if (this.type === 'encrypt') this._encrypt(state, l, r, state.tmp, 0);else this._decrypt(state, l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n\n  for (var i = off; i < buffer.length; i++) {\n    buffer[i] = value;\n  }\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n\n  for (var i = buffer.length - pad; i < buffer.length; i++) {\n    assert.equal(buffer[i], pad);\n  }\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart; // Apply f() x16 times\n\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1]; // f(r, k)\n\n    utils.expand(r, state.tmp, 0);\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  } // Reverse Initial Permutation\n\n\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart; // Apply f() x16 times\n\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1]; // f(r, k)\n\n    utils.expand(l, state.tmp, 0);\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  } // Reverse Initial Permutation\n\n\n  utils.rip(l, r, out, off);\n};","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n  this.iv = new Array(8);\n\n  for (var i = 0; i < this.iv.length; i++) {\n    this.iv[i] = iv[i];\n  }\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n\n    this._cbcInit();\n  }\n\n  inherits(CBC, Base);\n  var keys = Object.keys(proto);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n  var iv = state.iv;\n\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++) {\n      iv[i] ^= inp[inOff + i];\n    }\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++) {\n      iv[i] = out[outOff + i];\n    }\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++) {\n      out[outOff + i] ^= iv[i];\n    }\n\n    for (var i = 0; i < this.blockSize; i++) {\n      iv[i] = inp[inOff + i];\n    }\n  }\n};","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nvar inherits = require('inherits');\n\nvar des = require('../des');\n\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [DES.create({\n      type: 'encrypt',\n      key: k1\n    }), DES.create({\n      type: 'decrypt',\n      key: k2\n    }), DES.create({\n      type: 'encrypt',\n      key: k3\n    })];\n  } else {\n    this.ciphers = [DES.create({\n      type: 'decrypt',\n      key: k3\n    }), DES.create({\n      type: 'encrypt',\n      key: k2\n    }), DES.create({\n      type: 'decrypt',\n      key: k1\n    })];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\n\ninherits(EDE, Cipher);\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n\n  state.ciphers[1]._update(out, outOff, out, outOff);\n\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n};\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n};\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n};\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n};\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n};\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n};","var generatePrime = require('./lib/generatePrime');\n\nvar primes = require('./lib/primes.json');\n\nvar DH = require('./lib/dh');\n\nfunction getDiffieHellman(mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex');\n  var gen = new Buffer(primes[mod].gen, 'hex');\n  return new DH(prime, gen);\n}\n\nvar ENCODINGS = {\n  'binary': true,\n  'hex': true,\n  'base64': true\n};\n\nfunction createDiffieHellman(prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator);\n  }\n\n  enc = enc || 'binary';\n  genc = genc || 'binary';\n  generator = generator || new Buffer([2]);\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc);\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true);\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc);\n  }\n\n  return new DH(prime, generator, true);\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;","var BN = require('bn.js');\n\nvar MillerRabin = require('miller-rabin');\n\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\n\nvar primes = require('./generatePrime');\n\nvar randomBytes = require('randombytes');\n\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\n\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n\n  var error = 0;\n\n  if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n\n    primeCache[hex] = error;\n    return error;\n  }\n\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n\n  var rem;\n\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n\n      break;\n\n    case '05':\n      rem = prime.mod(TEN);\n\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n\n      break;\n\n    default:\n      error += 4;\n  }\n\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\n\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function get() {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n\n    return this._primeCode;\n  }\n});\n\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}","var createHash = require('create-hash');\n\nvar stream = require('stream');\n\nvar inherits = require('inherits');\n\nvar sign = require('./sign');\n\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\n\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = new Buffer(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n  var data = algorithms[algorithm];\n  if (!data) throw new Error('Unknown message digest');\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\n\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc);\n\n  this._hash.update(data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n\n  var hash = this._hash.digest();\n\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n  var data = algorithms[algorithm];\n  if (!data) throw new Error('Unknown message digest');\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\n\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc);\n\n  this._hash.update(data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  if (typeof sig === 'string') sig = new Buffer(sig, enc);\n  this.end();\n\n  var hash = this._hash.digest();\n\n  return verify(sig, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac');\n\nvar crt = require('browserify-rsa');\n\nvar EC = require('elliptic').ec;\n\nvar BN = require('bn.js');\n\nvar parseKeys = require('parse-asn1');\n\nvar curves = require('./curves.json');\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type');\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type');\n    return dsaSign(hash, priv, hashType);\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type');\n  }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n\n  while (hash.length + pad.length + 1 < len) {\n    pad.push(0xff);\n  }\n\n  pad.push(0x00);\n  var i = -1;\n\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'));\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n  return new Buffer(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r);\n  if (s[0] & 0x80) s = [0].concat(s);\n  var total = r.length + s.length + 4;\n  var res = [0x30, total, 0x02, r.length];\n  res = res.concat(r, [0x02, s.length], s);\n  return new Buffer(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = new Buffer(x.toArray());\n\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length);\n    zeros.fill(0);\n    x = Buffer.concat([zeros, x]);\n  }\n\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = new Buffer(hlen);\n  v.fill(1);\n  var k = new Buffer(hlen);\n  k.fill(0);\n  k = createHmac(algo, k).update(v).update(new Buffer([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(new Buffer([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return {\n    k: k,\n    v: v\n  };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) bits.ishrn(shift);\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = new Buffer(bits.toArray());\n\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length);\n    zeros.fill(0);\n    out = Buffer.concat([zeros, out]);\n  }\n\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = new Buffer(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict';\n\nvar asn1 = require('asn1.js');\n\nexports.certificate = require('./certificate');\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(this.key('version').int(), this.key('modulus').int(), this.key('publicExponent').int(), this.key('privateExponent').int(), this.key('prime1').int(), this.key('prime2').int(), this.key('exponent1').int(), this.key('exponent2').int(), this.key('coefficient').int());\n});\nexports.RSAPrivateKey = RSAPrivateKey;\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(this.key('modulus').int(), this.key('publicExponent').int());\n});\nexports.RSAPublicKey = RSAPublicKey;\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());\n});\nexports.PublicKey = PublicKey;\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(this.key('algorithm').objid(), this.key('none').null_().optional(), this.key('curve').objid().optional(), this.key('params').seq().obj(this.key('p').int(), this.key('q').int(), this.key('g').int()).optional());\n});\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(this.key('version').int(), this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPrivateKey').octstr());\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(), this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(), this.key('kdeparams').seq().obj(this.key('salt').octstr(), this.key('iters').int())), this.key('cipher').seq().obj(this.key('algo').objid(), this.key('iv').octstr()))), this.key('subjectPrivateKey').octstr());\n});\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(this.key('version').int(), this.key('p').int(), this.key('q').int(), this.key('g').int(), this.key('pub_key').int(), this.key('priv_key').int());\n});\nexports.DSAPrivateKey = DSAPrivateKey;\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int();\n});\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(this.key('version').int(), this.key('privateKey').octstr(), this.key('parameters').optional().explicit(0).use(ECParameters), this.key('publicKey').optional().explicit(1).bitstr());\n});\nexports.ECPrivateKey = ECPrivateKey;\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  });\n});\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(this.key('r').int(), this.key('s').int());\n});","var asn1 = require('../asn1');\n\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n  this.decoders = {};\n  this.encoders = {};\n}\n\n;\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n\n  try {\n    named = require('vm').runInThisContext('(function ' + this.name + '(entity) {\\n' + '  this._initNamed(entity);\\n' + '})');\n  } catch (e) {\n    named = function named(entity) {\n      this._initNamed(entity);\n    };\n  }\n\n  inherits(named, base);\n\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der'; // Lazily create decoder\n\n  if (!this.decoders.hasOwnProperty(enc)) this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der'; // Lazily create encoder\n\n  if (!this.encoders.hasOwnProperty(enc)) this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc,\n/* internal */\nreporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\n\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n  return {\n    obj: state.obj,\n    pathLen: state.path.length\n  };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n  this.exitKey(index);\n  if (state.obj !== null) state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n  var inherited = msg instanceof ReporterError;\n\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function (elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial) throw err;\n  if (!inherited) state.errors.push(err);\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial) return result;\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\n\n;\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace) Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n\n  return this;\n};","var Reporter = require('../base').Reporter;\n\nvar EncoderBuffer = require('../base').EncoderBuffer;\n\nvar DecoderBuffer = require('../base').DecoderBuffer;\n\nvar assert = require('minimalistic-assert'); // Supported tags\n\n\nvar tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr']; // Public methods list\n\nvar methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags); // Overrided methods list\n\nvar overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n  state.enc = enc;\n  state.parent = parent || null;\n  state.children = null; // State\n\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null; // Should create new instance on each method\n\n  if (!state.parent) {\n    state.children = [];\n\n    this._wrap();\n  }\n}\n\nmodule.exports = Node;\nvar stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n  assert(state.parent === null);\n  body.call(this); // Filter children\n\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState; // Filter children and args\n\n  var children = args.filter(function (arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children; // Replace parent to maintain backward link\n\n    children.forEach(function (child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) return arg;\n      var res = {};\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n}; //\n// Overrided methods\n//\n\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n}); //\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n  assert(state.use === null);\n  state.use = item;\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n  state.optional = true;\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n  state.obj = true;\n  if (args.length !== 0) this._useArgs(args);\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n  assert(state.key === null);\n  state.key = newKey;\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n  state.any = true;\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n  assert(state.choice === null);\n  state.choice = obj;\n\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n  assert(state.use === null);\n  state.contains = item;\n  return this;\n}; //\n// Decoding\n//\n\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState; // Decode root node\n\n  if (state.parent === null) return input.wrapResult(state.children[0]._decode(input, options));\n  var result = state['default'];\n  var present = true;\n  var prevKey = null;\n  if (state.key !== null) prevKey = input.enterKey(state.key); // Check if tag is there\n\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null) tag = state.explicit;else if (state.implicit !== null) tag = state.implicit;else if (state.tag !== null) tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n\n      try {\n        if (state.choice === null) this._decodeGeneric(state.tag, input, options);else this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n      if (input.isError(present)) return present;\n    }\n  } // Push object on stack\n\n\n  var prevObj;\n  if (state.obj && present) prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n\n      if (input.isError(explicit)) return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset; // Unwrap implicit and normal values\n\n    if (state.use === null && state.choice === null) {\n      if (state.any) var save = input.save();\n\n      var body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n\n      if (input.isError(body)) return body;\n      if (state.any) result = input.raw(save);else input = body;\n    }\n\n    if (options && options.track && state.tag !== null) options.track(input.path(), start, input.length, 'tagged');\n    if (options && options.track && state.tag !== null) options.track(input.path(), input.offset, input.length, 'content'); // Select proper method for tag\n\n    if (state.any) result = result;else if (state.choice === null) result = this._decodeGeneric(state.tag, input, options);else result = this._decodeChoice(input, options);\n    if (input.isError(result)) return result; // Decode children\n\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    } // Decode contained/encoded by schema, only in bit or octet strings\n\n\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);\n    }\n  } // Pop object\n\n\n  if (state.obj && present) result = input.leaveObject(prevObj); // Set key\n\n  if (state.key !== null && (result !== null || present === true)) input.leaveKey(prevKey, state.key, result);else if (prevKey !== null) input.exitKey(prevKey);\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n  if (tag === 'seq' || tag === 'set') return null;\n  if (tag === 'seqof' || tag === 'setof') return this._decodeList(input, tag, state.args[0], options);else if (/str$/.test(tag)) return this._decodeStr(input, tag, options);else if (tag === 'objid' && state.args) return this._decodeObjid(input, state.args[0], state.args[1], options);else if (tag === 'objid') return this._decodeObjid(input, null, null, options);else if (tag === 'gentime' || tag === 'utctime') return this._decodeTime(input, tag, options);else if (tag === 'null_') return this._decodeNull(input, options);else if (tag === 'bool') return this._decodeBool(input, options);else if (tag === 'objDesc') return this._decodeStr(input, tag, options);else if (tag === 'int' || tag === 'enum') return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n  var state = this._baseState; // Create altered use decoder if implicit is set\n\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n  Object.keys(state.choice).some(function (key) {\n    var save = input.save();\n    var node = state.choice[key];\n\n    try {\n      var value = node._decode(input, options);\n\n      if (input.isError(value)) return false;\n      result = {\n        type: key,\n        value: value\n      };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n\n    return true;\n  }, this);\n  if (!match) return input.error('Choice not matched');\n  return result;\n}; //\n// Encoding\n//\n\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data) return;\n\n  var result = this._encodeValue(data, reporter, parent);\n\n  if (result === undefined) return;\n  if (this._skipDefault(result, reporter, parent)) return;\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState; // Decode root node\n\n  if (state.parent === null) return state.children[0]._encode(data, reporter || new Reporter());\n  var result = null; // Set reporter to share it with a child class\n\n  this.reporter = reporter; // Check if data is there\n\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null) data = state['default'];else return;\n  } // Encode children first\n\n\n  var content = null;\n  var primitive = false;\n\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') return child._encode(null, reporter, data);\n      if (child._baseState.key === null) return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n      if (typeof data !== 'object') return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n\n      reporter.leaveKey(prevKey);\n      return res;\n    }, this).filter(function (child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1)) return reporter.error('Too many args for : ' + state.tag);\n      if (!Array.isArray(data)) return reporter.error('seqof/setof, but data is not Array');\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function (item) {\n        var state = this._baseState;\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  } // Encode data itself\n\n\n  var result;\n\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null) reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null) result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  } // Wrap in explicit\n\n\n  if (state.explicit !== null) result = this._encodeComposite(state.explicit, false, 'context', result);\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n  var node = state.choice[data.type];\n\n  if (!node) {\n    assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));\n  }\n\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n  if (/str$/.test(tag)) return this._encodeStr(data, tag);else if (tag === 'objid' && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);else if (tag === 'objid') return this._encodeObjid(data, null, null);else if (tag === 'gentime' || tag === 'utctime') return this._encodeTime(data, tag);else if (tag === 'null_') return this._encodeNull();else if (tag === 'int' || tag === 'enum') return this._encodeInt(data, state.args && state.reverseArgs[0]);else if (tag === 'bool') return this._encodeBool(data);else if (tag === 'objDesc') return this._encodeStr(data, tag);else throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);","var decoders = exports;\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');","var inherits = require('inherits');\n\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\n\n;\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n  var label = options.label.toUpperCase();\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null) continue;\n    if (match[2] !== label) continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN') break;\n      start = i;\n    } else {\n      if (match[1] !== 'END') break;\n      end = i;\n      break;\n    }\n  }\n\n  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n  var base64 = lines.slice(start + 1, end).join(''); // Remove excessive symbols\n\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};","var encoders = exports;\nencoders.der = require('./der');\nencoders.pem = require('./pem');","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\n\n;\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n  var p = buf.toString('base64');\n  var out = ['-----BEGIN ' + options.label + '-----'];\n\n  for (var i = 0; i < p.length; i += 64) {\n    out.push(p.slice(i, i + 64));\n  }\n\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  });\n});\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(this.key('type').objid(), this.key('value').any());\n});\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(this.key('algorithm').objid(), this.key('parameters').optional(), this.key('curve').objid().optional());\n});\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());\n});\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue);\n});\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName);\n});\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  });\n});\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(this.key('notBefore').use(Time), this.key('notAfter').use(Time));\n});\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(this.key('extnID').objid(), this.key('critical').bool().def(false), this.key('extnValue').octstr());\n});\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(this.key('version').explicit(0).int().optional(), this.key('serialNumber').int(), this.key('signature').use(AlgorithmIdentifier), this.key('issuer').use(Name), this.key('validity').use(Validity), this.key('subject').use(Name), this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo), this.key('issuerUniqueID').implicit(1).bitstr().optional(), this.key('subjectUniqueID').implicit(2).bitstr().optional(), this.key('extensions').explicit(3).seqof(Extension).optional());\n});\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(this.key('tbsCertificate').use(TBSCertificate), this.key('signatureAlgorithm').use(AlgorithmIdentifier), this.key('signatureValue').bitstr());\n});\nmodule.exports = X509Certificate;","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m;\n\nvar evp = require('evp_bytestokey');\n\nvar ciphers = require('browserify-aes');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function (okey, password) {\n  var key = okey.toString();\n  var match = key.match(findProc);\n  var decrypted;\n\n  if (!match) {\n    var match2 = key.match(fullRegex);\n    decrypted = new Buffer(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n  } else {\n    var suite = 'aes' + match[1];\n    var iv = Buffer.from(match[2], 'hex');\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n    var out = [];\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n    out.push(cipher.update(cipherText));\n    out.push(cipher.final());\n    decrypted = Buffer.concat(out);\n  }\n\n  var tag = key.match(startRegex)[1];\n  return {\n    tag: tag,\n    data: decrypted\n  };\n};","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar BN = require('bn.js');\n\nvar EC = require('elliptic').ec;\n\nvar parseKeys = require('parse-asn1');\n\nvar curves = require('./curves.json');\n\nfunction verify(sig, hash, key, signType, tag) {\n  var pub = parseKeys(key);\n\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type');\n    return ecVerify(sig, hash, pub);\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type');\n    return dsaVerify(sig, hash, pub);\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type');\n  }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = pub.modulus.byteLength();\n  var pad = [1];\n  var padNum = 0;\n\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff);\n    padNum++;\n  }\n\n  pad.push(0x00);\n  var i = -1;\n\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n\n  pad = new Buffer(pad);\n  var red = BN.mont(pub.modulus);\n  sig = new BN(sig).toRed(red);\n  sig = sig.redPow(new BN(pub.publicExponent));\n  sig = new Buffer(sig.fromRed().toArray());\n  var out = padNum < 8 ? 1 : 0;\n  len = Math.min(sig.length, pad.length);\n  if (sig.length !== pad.length) out = 1;\n  i = -1;\n\n  while (++i < len) {\n    out |= sig[i] ^ pad[i];\n  }\n\n  return out === 0;\n}\n\nfunction ecVerify(sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')];\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'));\n  var curve = new EC(curveId);\n  var pubkey = pub.data.subjectPrivateKey.data;\n  return curve.verify(hash, sig, pubkey);\n}\n\nfunction dsaVerify(sig, hash, pub) {\n  var p = pub.data.p;\n  var q = pub.data.q;\n  var g = pub.data.g;\n  var y = pub.data.pub_key;\n  var unpacked = parseKeys.signature.decode(sig, 'der');\n  var s = unpacked.s;\n  var r = unpacked.r;\n  checkValue(s, q);\n  checkValue(r, q);\n  var montp = BN.mont(p);\n  var w = s.invm(q);\n  var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);\n  return v.cmp(r) === 0;\n}\n\nfunction checkValue(b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig');\n  if (b.cmp(q) >= q) throw new Error('invalid sig');\n}\n\nmodule.exports = verify;","var elliptic = require('elliptic');\n\nvar BN = require('bn.js');\n\nmodule.exports = function createECDH(curve) {\n  return new ECDH(curve);\n};\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n};\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\n\nfunction ECDH(curve) {\n  this.curveType = aliases[curve];\n\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    };\n  }\n\n  this.curve = new elliptic.ec(this.curveType.name); // eslint-disable-line new-cap\n\n  this.keys = void 0;\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair();\n  return this.getPublicKey(enc, format);\n};\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8';\n\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc);\n  }\n\n  var otherPub = this.curve.keyFromPublic(other).getPublic();\n  var out = otherPub.mul(this.keys.getPrivate()).getX();\n  return formatReturnValue(out, enc, this.curveType.byteLength);\n};\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true);\n\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7;\n    } else {\n      key[0] = 6;\n    }\n  }\n\n  return formatReturnValue(key, enc);\n};\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc);\n};\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n\n  this.keys._importPublic(pub);\n\n  return this;\n};\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n\n  var _priv = new BN(priv);\n\n  _priv = _priv.toString(16);\n  this.keys = this.curve.genKeyPair();\n\n  this.keys._importPrivate(_priv);\n\n  return this;\n};\n\nfunction formatReturnValue(bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray();\n  }\n\n  var buf = new Buffer(bn);\n\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length);\n    zeros.fill(0);\n    buf = Buffer.concat([zeros, buf]);\n  }\n\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}","exports.publicEncrypt = require('./publicEncrypt');\nexports.privateDecrypt = require('./privateDecrypt');\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};","var parseKeys = require('parse-asn1');\n\nvar randomBytes = require('randombytes');\n\nvar createHash = require('create-hash');\n\nvar mgf = require('./mgf');\n\nvar xor = require('./xor');\n\nvar BN = require('bn.js');\n\nvar withPublic = require('./withPublic');\n\nvar crt = require('browserify-rsa');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function publicEncrypt(publicKey, msg, reverse) {\n  var padding;\n\n  if (publicKey.padding) {\n    padding = publicKey.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n\n  var key = parseKeys(publicKey);\n  var paddedMsg;\n\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg);\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg);\n\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus');\n    }\n  } else {\n    throw new Error('unknown padding');\n  }\n\n  if (reverse) {\n    return crt(paddedMsg, key);\n  } else {\n    return withPublic(paddedMsg, key);\n  }\n};\n\nfunction oaep(key, msg) {\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long');\n  }\n\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2);\n  var dblen = k - hLen - 1;\n  var seed = randomBytes(hLen);\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen));\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen));\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k));\n}\n\nfunction pkcs1(key, msg, reverse) {\n  var mLen = msg.length;\n  var k = key.modulus.byteLength();\n\n  if (mLen > k - 11) {\n    throw new Error('message too long');\n  }\n\n  var ps;\n\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff);\n  } else {\n    ps = nonZero(k - mLen - 3);\n  }\n\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k));\n}\n\nfunction nonZero(len) {\n  var out = Buffer.allocUnsafe(len);\n  var i = 0;\n  var cache = randomBytes(len * 2);\n  var cur = 0;\n  var num;\n\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2);\n      cur = 0;\n    }\n\n    num = cache[cur++];\n\n    if (num) {\n      out[i++] = num;\n    }\n  }\n\n  return out;\n}","var parseKeys = require('parse-asn1');\n\nvar mgf = require('./mgf');\n\nvar xor = require('./xor');\n\nvar BN = require('bn.js');\n\nvar crt = require('browserify-rsa');\n\nvar createHash = require('create-hash');\n\nvar withPublic = require('./withPublic');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function privateDecrypt(privateKey, enc, reverse) {\n  var padding;\n\n  if (privateKey.padding) {\n    padding = privateKey.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n\n  var key = parseKeys(privateKey);\n  var k = key.modulus.byteLength();\n\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error');\n  }\n\n  var msg;\n\n  if (reverse) {\n    msg = withPublic(new BN(enc), key);\n  } else {\n    msg = crt(enc, key);\n  }\n\n  var zBuffer = Buffer.alloc(k - msg.length);\n  msg = Buffer.concat([zBuffer, msg], k);\n\n  if (padding === 4) {\n    return oaep(key, msg);\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    return msg;\n  } else {\n    throw new Error('unknown padding');\n  }\n};\n\nfunction oaep(key, msg) {\n  var k = key.modulus.byteLength();\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();\n  var hLen = iHash.length;\n\n  if (msg[0] !== 0) {\n    throw new Error('decryption error');\n  }\n\n  var maskedSeed = msg.slice(1, hLen + 1);\n  var maskedDb = msg.slice(hLen + 1);\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error');\n  }\n\n  var i = hLen;\n\n  while (db[i] === 0) {\n    i++;\n  }\n\n  if (db[i++] !== 1) {\n    throw new Error('decryption error');\n  }\n\n  return db.slice(i);\n}\n\nfunction pkcs1(key, msg, reverse) {\n  var p1 = msg.slice(0, 2);\n  var i = 2;\n  var status = 0;\n\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++;\n      break;\n    }\n  }\n\n  var ps = msg.slice(2, i - 1);\n\n  if (p1.toString('hex') !== '0002' && !reverse || p1.toString('hex') !== '0001' && reverse) {\n    status++;\n  }\n\n  if (ps.length < 8) {\n    status++;\n  }\n\n  if (status) {\n    throw new Error('decryption error');\n  }\n\n  return msg.slice(i);\n}\n\nfunction compare(a, b) {\n  a = Buffer.from(a);\n  b = Buffer.from(b);\n  var dif = 0;\n  var len = a.length;\n\n  if (a.length !== b.length) {\n    dif++;\n    len = Math.min(a.length, b.length);\n  }\n\n  var i = -1;\n\n  while (++i < len) {\n    dif += a[i] ^ b[i];\n  }\n\n  return dif;\n}","'use strict';\n\nfunction oldBrowser() {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11');\n}\n\nvar safeBuffer = require('safe-buffer');\n\nvar randombytes = require('randombytes');\n\nvar Buffer = safeBuffer.Buffer;\nvar kBufferMaxLength = safeBuffer.kMaxLength;\nvar crypto = global.crypto || global.msCrypto;\nvar kMaxUint32 = Math.pow(2, 32) - 1;\n\nfunction assertOffset(offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) {\n    // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number');\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32');\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range');\n  }\n}\n\nfunction assertSize(size, offset, length) {\n  if (typeof size !== 'number' || size !== size) {\n    // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number');\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32');\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small');\n  }\n}\n\nif (crypto && crypto.getRandomValues || !process.browser) {\n  exports.randomFill = randomFill;\n  exports.randomFillSync = randomFillSync;\n} else {\n  exports.randomFill = oldBrowser;\n  exports.randomFillSync = oldBrowser;\n}\n\nfunction randomFill(buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset;\n    offset = 0;\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    cb = size;\n    size = buf.length - offset;\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function');\n  }\n\n  assertOffset(offset, buf.length);\n  assertSize(size, offset, buf.length);\n  return actualFill(buf, offset, size, cb);\n}\n\nfunction actualFill(buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer;\n    var uint = new Uint8Array(ourBuf, offset, size);\n    crypto.getRandomValues(uint);\n\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf);\n      });\n      return;\n    }\n\n    return buf;\n  }\n\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err);\n      }\n\n      bytes.copy(buf, offset);\n      cb(null, buf);\n    });\n    return;\n  }\n\n  var bytes = randombytes(size);\n  bytes.copy(buf, offset);\n  return buf;\n}\n\nfunction randomFillSync(buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0;\n  }\n\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');\n  }\n\n  assertOffset(offset, buf.length);\n  if (size === undefined) size = buf.length - offset;\n  assertSize(size, offset, buf.length);\n  return actualFill(buf, offset, size);\n}","'use strict';\n\nvar hash = require('hash.js');\n\nvar elliptic = require('../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n  var pers = utils.toArray(options.pers, options.persEnc);\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toBuffer(entropy, entropyEnc);\n  add = utils.toBuffer(add, addEnc);\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils.toArray(add, addEnc);\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this.reseed++;\n  return utils.encode(res, enc);\n};","var utils = exports;\n\nvar inherits = require('inherits');\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (var i = 0; i < msg.length; i += 2) {\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n      }\n    }\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      res[i] = msg[i] | 0;\n    }\n  }\n\n  return res;\n}\n\nutils.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    res += zero2(msg[i].toString(16));\n  }\n\n  return res;\n}\n\nutils.toHex = toHex;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nutils.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nutils.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nutils.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nutils.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nutils.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nutils.split32 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nutils.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nutils.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nutils.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nutils.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nutils.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nutils.sum32_5 = sum32_5;\n\nfunction assert(cond, msg) {\n  if (!cond) throw new Error(msg || 'Assertion failed');\n}\n\nutils.assert = assert;\nutils.inherits = inherits;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\n;\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\n;\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\n;\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\n;\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\n;\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\n;\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\n;\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\n;\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\n;\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\n;\nexports.shr64_lo = shr64_lo;","var hash = require('../hash');\n\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) {\n      this._update(msg, i, i + this._delta32);\n    }\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) {\n    res[i] = 0;\n  } // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) {\n      res[i++] = 0;\n    }\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (var t = 8; t < this.padLength; t++) {\n      res[i++] = 0;\n    }\n  }\n\n  return res;\n};","var hash = require('../hash');\n\nvar utils = hash.utils;\nvar assert = utils.assert;\nvar rotr32 = utils.rotr32;\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = hash.common.BlockHash;\nvar sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\nvar sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\nutils.inherits(SHA256, BlockHash);\nexports.sha256 = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i++) {\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n  }\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  assert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n  SHA256.call(this);\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\nutils.inherits(SHA224, SHA256);\nexports.sha224 = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\nutils.inherits(SHA512, BlockHash);\nexports.sha512 = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W; // 32 x 32bit words\n\n  for (var i = 0; i < 32; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14]; // i - 7\n\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32]; // i - 16\n\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  assert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var c0_hi = s0_512_hi(ah, al);\n    var c0_lo = s0_512_lo(ah, al);\n    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n  SHA512.call(this);\n  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n}\n\nutils.inherits(SHA384, SHA512);\nexports.sha384 = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nexports.sha1 = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i++) {\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n  }\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (var i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;\n}\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;\n}\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2); // 34\n\n  var c2_hi = rotr64_hi(xl, xh, 7); // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2); // 34\n\n  var c2_lo = rotr64_lo(xl, xh, 7); // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9); // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9); // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29); // 61\n\n  var c2_hi = shr64_hi(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29); // 61\n\n  var c2_lo = shr64_lo(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}","var hash = require('../hash');\n\nvar utils = hash.utils;\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = hash.common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.endian = 'little';\n}\n\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n}\n\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];","var hmac = exports;\n\nvar hash = require('../hash');\n\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize); // Add padding to key\n\n  for (var i = key.length; i < this.blockSize; i++) {\n    key.push(0);\n  }\n\n  for (var i = 0; i < key.length; i++) {\n    key[i] ^= 0x36;\n  }\n\n  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n  for (var i = 0; i < key.length; i++) {\n    key[i] ^= 0x6a;\n  }\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};","'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar getNAF = elliptic.utils.getNAF;\nvar getJSF = elliptic.utils.getJSF;\nvar assert = elliptic.utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p); // Useful for many curves\n\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n}\n\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n\n    for (var k = j + doubles.step - 1; k >= j; k--) {\n      nafW = (nafW << 1) + naf[k];\n    }\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--) {\n      k++;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n    var z = naf[i];\n    assert(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (var i = 0; i < len; i++) {\n    wnd[i] = null;\n  }\n\n  return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) {\n      acc = acc.dbl();\n    }\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) {\n    res[i] = res[i - 1].add(dbl);\n  }\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) {\n    r = r.dbl();\n  }\n\n  return r;\n};","'use strict';\n\nvar curve = require('../curve');\n\nvar elliptic = require('../../elliptic');\n\nvar bn = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.shrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.sign) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.sign) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(odd, x) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt(); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.sign) {\n      split.k1.sign = !split.k1.sign;\n      p = p.neg(true);\n    }\n\n    if (split.k2.sign) {\n      split.k2.sign = !split.k2.sign;\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function endoMul(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.precomputed && this.precomputed.doubles) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function negate(p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (var i = 0; i < pow; i++) {\n      r = r.dbl();\n    }\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};","'use strict';\n\nvar curve = require('../curve');\n\nvar bn = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\n\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {// No-op\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z); // AA = A^2\n\n  var aa = a.redSqr(); // B = X1 - Z1\n\n  var b = this.x.redSub(this.z); // BB = B^2\n\n  var bb = b.redSqr(); // C = AA - BB\n\n  var c = aa.redSub(bb); // X3 = AA * BB\n\n  var nx = aa.redMul(bb); // Z3 = C * (BB + A24 * C)\n\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z); // B = X2 - Z2\n\n  var b = this.x.redSub(this.z); // C = X3 + Z3\n\n  var c = p.x.redAdd(p.z); // D = X3 - Z3\n\n  var d = p.x.redSub(p.z); // DA = D * A\n\n  var da = d.redMul(a); // CB = C * B\n\n  var cb = c.redMul(b); // X5 = Z1 * (DA + CB)^2\n\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr()); // Z5 = X1 * (DA - CB)^2\n\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n\n  var b = this.curve.point(null, null); // (N / 2) * Q\n\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.ishrn(1)) {\n    bits.push(t.andln(1));\n  }\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c); // N * Q = 2 * ((N / 2) * Q + Q))\n\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c); // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\n      a = a.dbl();\n    }\n  }\n\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n  return this.x.fromRed();\n};","'use strict';\n\nvar curve = require('../curve');\n\nvar elliptic = require('../../elliptic');\n\nvar bn = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n  Base.call(this, 'edwards', conf);\n  this.a = new bn(conf.a, 16).mod(this.red.m).toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\n\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC) return num;else return this.c.redMul(num);\n}; // Just for compatibility with Short curve\n\n\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(odd, x) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y, curve.one);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity()) return true; // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\n  point.normalize();\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one; // Use extended coordinates\n\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 && this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n  // A = X1^2\n  var a = this.x.redSqr(); // B = Y1^2\n\n  var b = this.y.redSqr(); // C = 2 * Z1^2\n\n  var c = this.z.redSqr();\n  c = c.redIAdd(c); // D = a * A\n\n  var d = this.curve._mulA(a); // E = (X1 + Y1)^2 - A - B\n\n\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b); // G = D + B\n\n  var g = d.redAdd(b); // F = G - C\n\n  var f = g.redSub(c); // H = D - B\n\n  var h = d.redSub(b); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr(); // C = X1^2\n\n  var c = this.x.redSqr(); // D = Y1^2\n\n  var d = this.y.redSqr();\n  var nx;\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c); // F = E + D\n\n\n    var f = e.redAdd(d);\n\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two)); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F^2 - 2 * F\n\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr(); // J = F - 2 * H\n\n      var j = f.redSub(h).redISub(h); // X3 = (B-C-D)*J\n\n      nx = b.redSub(c).redISub(d).redMul(j); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F * J\n\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d); // H = (c * Z1)^2\n\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr(); // J = E - 2 * H\n\n\n    var j = e.redSub(h).redSub(h); // X3 = c * (B - E) * J\n\n    nx = this.curve._mulC(b.redISub(e)).redMul(j); // Y3 = c * E * (C - D)\n\n    ny = this.curve._mulC(e).redMul(c.redISub(d)); // Z3 = E * J\n\n    nz = e.redMul(j);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this; // Double in extended coordinates\n\n  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x)); // B = (Y1 + X1) * (Y2 + X2)\n\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x)); // C = T1 * k * T2\n\n  var c = this.t.redMul(this.curve.dd).redMul(p.t); // D = Z1 * 2 * Z2\n\n  var d = this.z.redMul(p.z.redAdd(p.z)); // E = B - A\n\n  var e = b.redSub(a); // F = D - C\n\n  var f = d.redSub(c); // G = D + C\n\n  var g = d.redAdd(c); // H = B + A\n\n  var h = b.redAdd(a); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z); // B = A^2\n\n  var b = a.redSqr(); // C = X1 * X2\n\n  var c = this.x.redMul(p.x); // D = Y1 * Y2\n\n  var d = this.y.redMul(p.y); // E = d * C * D\n\n  var e = this.curve.d.redMul(c).redMul(d); // F = B - E\n\n  var f = b.redSub(e); // G = B + E\n\n  var g = b.redAdd(e); // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c))); // Z3 = F * G\n\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c)); // Z3 = c * F * G\n\n    nz = this.curve._mulC(f).redMul(g);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity()) return p;\n  if (p.isInfinity()) return this;\n  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this.precomputed && this.precomputed.doubles) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne) return this; // Normalize coordinates\n\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t) this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n}; // Compatibility with BaseCurve\n\n\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\n\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short') this.curve = new elliptic.curve.short(options);else if (options.type === 'edwards') this.curve = new elliptic.curve.edwards(options);else this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\n\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n});\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n});\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n});\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '0',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['9']\n});\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n  '6666666666666666666666666666666666666666666666666666666666666658']\n});\nvar pre;\n\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [{\n    a: '3086d221a7d46bcde86c90e49284eb15',\n    b: '-e4437ed6010e88286f547fa90abfe4c3'\n  }, {\n    a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n    b: '3086d221a7d46bcde86c90e49284eb15'\n  }],\n  gRed: false,\n  g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n});","module.exports = {\n  doubles: {\n    step: 4,\n    points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]\n  },\n  naf: {\n    wnd: 7,\n    points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]\n  }\n};","'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\n\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n    options = elliptic.curves[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof elliptic.curves.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.shrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.shrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n\n  for (var i = bkey.length; i < 21; i++) {\n    bkey.unshift(0);\n  } // Zero-extend nonce to have the same byte size as N\n\n\n  var nonce = msg.toArray();\n\n  for (var i = nonce.length; i < bytes; i++) {\n    nonce.unshift(0);\n  } // Instantiate Hmac_DRBG\n\n\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new bn(1));\n\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var r = kp.getX().mod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg)).mod(this.n);\n    if (s.cmpn(0) === 0) continue; // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) s = this.n.sub(s);\n    return new Signature({\n      r: r,\n      s: s\n    });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex'); // Perform primitive values validation\n\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).mod(this.n);\n  var u2 = sinv.mul(r).mod(this.n);\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false;\n  return p.getX().mod(this.n).cmp(r) === 0;\n};","'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv); // compact is optional argument\n\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!enc) return this.pub;\n  var len = this.ec.curve.p.byteLength();\n  var x = this.pub.getX().toArray();\n\n  for (var i = x.length; i < len; i++) {\n    x.unshift(0);\n  }\n\n  var res;\n\n  if (this.ec.curve.type !== 'mont') {\n    if (compact) {\n      res = [this.pub.getY().isEven() ? 0x02 : 0x03].concat(x);\n    } else {\n      var y = this.pub.getY().toArray();\n\n      for (var i = y.length; i < len; i++) {\n        y.unshift(0);\n      }\n\n      var res = [0x04].concat(x, y);\n    }\n  } else {\n    res = x;\n  }\n\n  return utils.encode(res, enc);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.mod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  key = utils.toArray(key, enc);\n  if (this.ec.curve.type !== 'mont') return this._importPublicShort(key);else return this._importPublicMont(key);\n};\n\nKeyPair.prototype._importPublicShort = function _importPublicShort(key) {\n  var len = this.ec.curve.p.byteLength();\n\n  if (key[0] === 0x04 && key.length - 1 === 2 * len) {\n    this.pub = this.ec.curve.point(key.slice(1, 1 + len), key.slice(1 + len, 1 + 2 * len));\n  } else if ((key[0] === 0x02 || key[0] === 0x03) && key.length - 1 === len) {\n    this.pub = this.ec.curve.pointFromX(key[0] === 0x03, key.slice(1, 1 + len));\n  }\n};\n\nKeyPair.prototype._importPublicMont = function _importPublicMont(key) {\n  this.pub = this.ec.curve.point(key, 1);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg) {\n  return this.ec.sign(msg, this);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};","'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n}\n\nmodule.exports = Signature;\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  if (data.length < 6 || data[0] !== 0x30 || data[2] !== 0x02) return false;\n  var total = data[1];\n  if (1 + total > data.length) return false;\n  var rlen = data[3]; // Short length notation\n\n  if (rlen >= 0x80) return false;\n  if (4 + rlen + 2 >= data.length) return false;\n  if (data[4 + rlen] !== 0x02) return false;\n  var slen = data[5 + rlen]; // Short length notation\n\n  if (slen >= 0x80) return false;\n  if (4 + rlen + 2 + slen > data.length) return false;\n  this.r = new bn(data.slice(4, 4 + rlen));\n  this.s = new bn(data.slice(4 + rlen + 2, 4 + rlen + 2 + slen));\n  return true;\n};\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  var total = r.length + s.length + 4;\n  var res = [0x30, total, 0x02, r.length];\n  res = res.concat(r, [0x02, s.length], s);\n  return utils.encode(res, enc);\n};","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\n\nvar Opcode = require('../opcode');\n\nvar BN = require('../crypto/bn');\n\nvar Hash = require('../crypto/hash');\n\nvar Signature = require('../crypto/signature');\n\nvar PublicKey = require('../publickey');\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\n\n\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\n\n\nInterpreter.prototype.verify = function (scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  } // evaluate scriptSig\n\n\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  }); // evaluate scriptPubkey\n\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  } // Additional validation for spend-to-script-hash transactions:\n\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    } // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n\n\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    }); // evaluate redeemScript\n\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function (obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function (obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD); // flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n\nInterpreter.SCRIPT_VERIFY_NONE = 0; // Evaluate P2SH subscripts (softfork safe, BIP16).\n\nInterpreter.SCRIPT_VERIFY_P2SH = 1 << 0; // Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\n\nInterpreter.SCRIPT_VERIFY_STRICTENC = 1 << 1; // Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\n\nInterpreter.SCRIPT_VERIFY_DERSIG = 1 << 2; // Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\n\nInterpreter.SCRIPT_VERIFY_LOW_S = 1 << 3; // verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\n\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = 1 << 4; // Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\n\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = 1 << 5; // Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\n\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = 1 << 6; // Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\n\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = 1 << 7; // CLTV See BIP65 for details.\n\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = 1 << 9;\n\nInterpreter.castToBool = function (buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\n\n\nInterpreter.prototype.checkSignatureEncoding = function (buf) {\n  var sig;\n\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\n\n\nInterpreter.prototype.checkPubkeyEncoding = function (buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n\n  return true;\n};\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\n\n\nInterpreter.prototype.evaluate = function () {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n\n      if (!fSuccess) {\n        return false;\n      }\n    } // Size limits\n\n\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\n\n\nInterpreter.prototype.checkLockTime = function (nLockTime) {\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(this.tx.nLockTime < Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN) || this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))) {\n    return false;\n  } // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n\n\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  } // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n\n\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n};\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\n\n\nInterpreter.prototype.step = function () {\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0; //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n\n  var fExec = this.vfExec.indexOf(false) === -1;\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess; // Read instruction\n\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  } // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n\n\n  if (opcodenum > Opcode.OP_16 && ++this.nOpCount > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n  if (opcodenum === Opcode.OP_CAT || opcodenum === Opcode.OP_SUBSTR || opcodenum === Opcode.OP_LEFT || opcodenum === Opcode.OP_RIGHT || opcodenum === Opcode.OP_INVERT || opcodenum === Opcode.OP_AND || opcodenum === Opcode.OP_OR || opcodenum === Opcode.OP_XOR || opcodenum === Opcode.OP_2MUL || opcodenum === Opcode.OP_2DIV || opcodenum === Opcode.OP_MUL || opcodenum === Opcode.OP_DIV || opcodenum === Opcode.OP_MOD || opcodenum === Opcode.OP_LSHIFT || opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf); // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n      //\n      // Control\n      //\n\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        } // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n\n\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5); // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        } // Actually compare the specified lock time with the transaction.\n\n\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n      //\n      // Stack ops\n      //\n\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf = this.stack[this.stack.length - n - 1];\n\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n      //\n      // Bitwise logic\n      //\n\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n      //\n      // Numeric\n      //\n\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n\n              break;\n\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n            //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n            // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n\n            case Opcode.OP_BOOLAND:\n              bn = new BN((bn1.cmp(BN.Zero) !== 0 && bn2.cmp(BN.Zero) !== 0) + 0);\n              break;\n            // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n\n            case Opcode.OP_BOOLOR:\n              bn = new BN((bn1.cmp(BN.Zero) !== 0 || bn2.cmp(BN.Zero) !== 0) + 0);\n              break;\n            // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n            // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n            // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n            // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n            // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n            // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n            // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n\n            case Opcode.OP_MIN:\n              bn = bn1.cmp(bn2) < 0 ? bn1 : bn2;\n              break;\n\n            case Opcode.OP_MAX:\n              bn = bn1.cmp(bn2) > 0 ? bn1 : bn2;\n              break;\n            // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal); //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n\n          fValue = bn2.cmp(bn1) <= 0 && bn1.cmp(bn3) < 0;\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n      //\n      // Crypto\n      //\n\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          buf = this.stack[this.stack.length - 1]; //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n\n          var bufHash;\n\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1]; // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          }); // Drop the signature, since there's no way for a signature to sign itself\n\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop(); // stack.push_back(fSuccess ? vchTrue : vchFalse);\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n          var i = 1;\n\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n\n          this.nOpCount += nKeysCount;\n\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          } // int ikey = ++i;\n\n\n          var ikey = ++i;\n          i += nKeysCount;\n\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          } // int isig = ++i;\n\n\n          var isig = ++i;\n          i += nSigsCount;\n\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          } // Subset of script starting at the most recent codeseparator\n\n\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          }); // Drop the signatures, since there's no way for a signature to sign itself\n\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig]; // valtype& vchPubKey = stacktop(-ikey);\n\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n\n            ikey++;\n            nKeysCount--; // If there are more signatures left than keys left,\n            // then too many signatures have failed\n\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          } // Clean up stack of actual arguments\n\n\n          while (i-- > 1) {\n            this.stack.pop();\n          } // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n\n\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          if (this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n\n          this.stack.pop();\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};","module.exports = function (cmp, to) {\n  var c = 0;\n\n  for (var i = 0; i < cmp.length; ++i) {\n    if (i == to.length) break;\n    c = cmp[i] < to[i] ? -1 : cmp[i] > to[i] ? 1 : 0;\n    if (c != 0) break;\n  }\n\n  if (c == 0) {\n    if (to.length > cmp.length) c = -1;else if (cmp.length > to.length) c = 1;\n  }\n\n  return c;\n};","'use strict';\n\nvar inherits = require('inherits');\n\nvar $ = require('../../util/preconditions');\n\nvar BufferUtil = require('../../util/buffer');\n\nvar Input = require('./input');\n\nvar Output = require('../output');\n\nvar Sighash = require('../sighash');\n\nvar Script = require('../../script');\n\nvar Signature = require('../../crypto/signature');\n\nvar TransactionSignature = require('../signature');\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\n\n\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\n\ninherits(PublicKeyInput, Input);\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\n\nPublicKeyInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n\n  return [];\n};\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\n\n\nPublicKeyInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(signature.signature.toDER(), signature.sigtype));\n  return this;\n};\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\n\n\nPublicKeyInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty());\n  return this;\n};\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\n\n\nPublicKeyInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function () {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;","'use strict';\n\nvar inherits = require('inherits');\n\nvar $ = require('../../util/preconditions');\n\nvar BufferUtil = require('../../util/buffer');\n\nvar Hash = require('../../crypto/hash');\n\nvar Input = require('./input');\n\nvar Output = require('../output');\n\nvar Sighash = require('../sighash');\n\nvar Script = require('../../script');\n\nvar Signature = require('../../crypto/signature');\n\nvar TransactionSignature = require('../signature');\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\n\n\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\n\ninherits(PublicKeyHashInput, Input);\n/* jshint maxparams: 5 */\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\n\nPublicKeyHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\n\n\nPublicKeyHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(signature.publicKey, signature.signature.toDER(), signature.sigtype));\n  return this;\n};\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\n\n\nPublicKeyHashInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty());\n  return this;\n};\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\n\n\nPublicKeyHashInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function () {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;","'use strict';\n\nvar _ = require('lodash');\n\nvar inherits = require('inherits');\n\nvar Transaction = require('../transaction');\n\nvar Input = require('./input');\n\nvar Output = require('../output');\n\nvar $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n\nvar Signature = require('../../crypto/signature');\n\nvar Sighash = require('../sighash');\n\nvar PublicKey = require('../../publickey');\n\nvar BufferUtil = require('../../util/buffer');\n\nvar TransactionSignature = require('../signature');\n/**\n * @constructor\n */\n\n\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function (publicKey) {\n    return publicKey.toString('hex');\n  });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script), 'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n\n  this.threshold = threshold; // Empty array of signatures\n\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\n\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) {\n    return publicKey.toString();\n  });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined;\n    }\n\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined;\n    }\n\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var self = this;\n  var results = [];\n\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]), 'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n\n  this._updateScript();\n\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function () {\n  this.setScript(Script.buildMultisigIn(this.publicKeys, this.threshold, this._createSignatures()));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function () {\n  return _.map(_.filter(this.signatures, function (signature) {\n    return !_.isUndefined(signature);\n  }), function (signature) {\n    return BufferUtil.concat([signature.signature.toDER(), BufferUtil.integerAsSingleByteBuffer(signature.sigtype)]);\n  });\n};\n\nMultiSigInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length);\n\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + !!signature;\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this;\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !self.signatures[self.publicKeyIndex[publicKey.toString()]];\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(transaction, signature.signature, signature.publicKey, signature.inputIndex, this.output.script);\n};\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\n\n\nMultiSigInput.normalizeSignatures = function (transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(transaction, signature.signature, signature.publicKey, signature.inputIndex, input.output.script);\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\n\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function () {\n  return MultiSigInput.OPCODES_SIZE + this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;","'use strict';\n\nvar _ = require('lodash');\n\nvar inherits = require('inherits');\n\nvar Input = require('./input');\n\nvar Output = require('../output');\n\nvar $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n\nvar Signature = require('../../crypto/signature');\n\nvar Sighash = require('../sighash');\n\nvar PublicKey = require('../../publickey');\n\nvar BufferUtil = require('../../util/buffer');\n\nvar TransactionSignature = require('../signature');\n/**\n * @constructor\n */\n\n\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function (publicKey) {\n    return publicKey.toString('hex');\n  });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script), 'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n\n  this.threshold = threshold; // Empty array of signatures\n\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\n\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) {\n    return publicKey.toString();\n  });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined;\n    }\n\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined;\n    }\n\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var self = this;\n  var results = [];\n\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]), 'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n\n  this._updateScript();\n\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function () {\n  this.setScript(Script.buildP2SHMultisigIn(this.publicKeys, this.threshold, this._createSignatures(), {\n    cachedMultisig: this.redeemScript\n  }));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function () {\n  return _.map(_.filter(this.signatures, function (signature) {\n    return !_.isUndefined(signature);\n  }), function (signature) {\n    return BufferUtil.concat([signature.signature.toDER(), BufferUtil.integerAsSingleByteBuffer(signature.sigtype)]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length);\n\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + !!signature;\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this;\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !self.signatures[self.publicKeyIndex[publicKey.toString()]];\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(transaction, signature.signature, signature.publicKey, signature.inputIndex, this.redeemScript);\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\n\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\n\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function () {\n  return MultiSigScriptHashInput.OPCODES_SIZE + this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE + this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;","'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar BN = require('../crypto/bn');\n\nvar buffer = require('buffer');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar ZCProof = require('../zcash/proof');\n\nvar ZC_NUM_JS_INPUTS = 2;\nvar ZC_NUM_JS_OUTPUTS = 2; // leading + v + rho + r + memo + auth\n\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\n\nfunction JSDescription(params) {\n  if (!(this instanceof JSDescription)) {\n    return new JSDescription(params);\n  }\n\n  this.nullifiers = [];\n  this.commitments = [];\n  this.ciphertexts = [];\n  this.macs = [];\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._vpub_old;\n  },\n  set: function set(num) {\n    if (num instanceof BN) {\n      this._vpub_oldBN = num;\n      this._vpub_old = num.toNumber();\n    } else if (_.isString(num)) {\n      this._vpub_old = parseInt(num);\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\n    } else {\n      $.checkArgument(JSUtil.isNaturalNumber(num), 'vpub_old is not a natural number');\n      this._vpub_oldBN = BN.fromNumber(num);\n      this._vpub_old = num;\n    }\n\n    $.checkState(JSUtil.isNaturalNumber(this._vpub_old), 'vpub_old is not a natural number');\n  }\n});\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._vpub_new;\n  },\n  set: function set(num) {\n    if (num instanceof BN) {\n      this._vpub_newBN = num;\n      this._vpub_new = num.toNumber();\n    } else if (_.isString(num)) {\n      this._vpub_new = parseInt(num);\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\n    } else {\n      $.checkArgument(JSUtil.isNaturalNumber(num), 'vpub_new is not a natural number');\n      this._vpub_newBN = BN.fromNumber(num);\n      this._vpub_new = num;\n    }\n\n    $.checkState(JSUtil.isNaturalNumber(this._vpub_new), 'vpub_new is not a natural number');\n  }\n});\n\nJSDescription.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var jsdesc = new JSDescription();\n  return jsdesc._fromObject(obj);\n};\n\nJSDescription.prototype._fromObject = function (params) {\n  var nullifiers = [];\n\n  _.each(params.nullifiers, function (nullifier) {\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\n  });\n\n  var commitments = [];\n\n  _.each(params.commitments, function (commitment) {\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\n  });\n\n  var ciphertexts = [];\n\n  _.each(params.ciphertexts, function (ciphertext) {\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\n  });\n\n  var macs = [];\n\n  _.each(params.macs, function (mac) {\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\n  });\n\n  this.vpub_old = params.vpub_old;\n  this.vpub_new = params.vpub_new;\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\n  this.nullifiers = nullifiers;\n  this.commitments = commitments;\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\n  this.ciphertexts = ciphertexts;\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\n  this.macs = macs;\n  this.proof = ZCProof.fromObject(params.proof);\n  return this;\n};\n\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\n  var nullifiers = [];\n\n  _.each(this.nullifiers, function (nullifier) {\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\n  });\n\n  var commitments = [];\n\n  _.each(this.commitments, function (commitment) {\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\n  });\n\n  var ciphertexts = [];\n\n  _.each(this.ciphertexts, function (ciphertext) {\n    ciphertexts.push(ciphertext.toString('hex'));\n  });\n\n  var macs = [];\n\n  _.each(this.macs, function (mac) {\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\n  });\n\n  var obj = {\n    vpub_old: this.vpub_old,\n    vpub_new: this.vpub_new,\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\n    nullifiers: nullifiers,\n    commitments: commitments,\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\n    ciphertexts: ciphertexts,\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\n    macs: macs,\n    proof: this.proof.toObject()\n  };\n  return obj;\n};\n\nJSDescription.fromBufferReader = function (br) {\n  var i;\n  var jsdesc = new JSDescription();\n  jsdesc.vpub_old = br.readUInt64LEBN();\n  jsdesc.vpub_new = br.readUInt64LEBN();\n  jsdesc.anchor = br.read(32);\n\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\n    jsdesc.nullifiers.push(br.read(32));\n  }\n\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\n    jsdesc.commitments.push(br.read(32));\n  }\n\n  jsdesc.ephemeralKey = br.read(32);\n  jsdesc.randomSeed = br.read(32);\n\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\n    jsdesc.macs.push(br.read(32));\n  }\n\n  jsdesc.proof = ZCProof.fromBufferReader(br);\n\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\n  }\n\n  return jsdesc;\n};\n\nJSDescription.prototype.toBufferWriter = function (writer) {\n  var i;\n\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.writeUInt64LEBN(this._vpub_oldBN);\n  writer.writeUInt64LEBN(this._vpub_newBN);\n  writer.write(this.anchor);\n\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\n    writer.write(this.nullifiers[i]);\n  }\n\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\n    writer.write(this.commitments[i]);\n  }\n\n  writer.write(this.ephemeralKey);\n  writer.write(this.randomSeed);\n\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\n    writer.write(this.macs[i]);\n  }\n\n  this.proof.toBufferWriter(writer);\n\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\n    writer.write(this.ciphertexts[i]);\n  }\n\n  return writer;\n};\n\nmodule.exports = JSDescription;","'use strict';\n\nvar $ = require('../util/preconditions');\n\nvar buffer = require('buffer');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar G1_PREFIX_MASK = 0x02;\nvar G2_PREFIX_MASK = 0x0a;\n\nfunction CompressedG1(params) {\n  if (!(this instanceof CompressedG1)) {\n    return new CompressedG1(params);\n  }\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nCompressedG1.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var pt = new CompressedG1();\n  return pt._fromObject(obj);\n};\n\nCompressedG1.prototype._fromObject = function (params) {\n  this.y_lsb = params.y_lsb;\n  this.x = new buffer.Buffer(params.x, 'hex');\n  return this;\n};\n\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\n  var obj = {\n    y_lsb: this.y_lsb,\n    x: this.x.toString('hex')\n  };\n  return obj;\n};\n\nCompressedG1.fromBufferReader = function (br) {\n  var pt = new CompressedG1();\n  var y_lsb = br.readUInt8();\n  pt.y_lsb = y_lsb & 1;\n  pt.x = br.read(32);\n  return pt;\n};\n\nCompressedG1.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\n  writer.write(this.x);\n  return writer;\n};\n\nfunction CompressedG2(params) {\n  if (!(this instanceof CompressedG2)) {\n    return new CompressedG2(params);\n  }\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nCompressedG2.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var pt = new CompressedG2();\n  return pt._fromObject(obj);\n};\n\nCompressedG2.prototype._fromObject = function (params) {\n  this.y_gt = params.y_gt;\n  this.x = new buffer.Buffer(params.x, 'hex');\n  return this;\n};\n\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\n  var obj = {\n    y_gt: this.y_gt,\n    x: this.x.toString('hex')\n  };\n  return obj;\n};\n\nCompressedG2.fromBufferReader = function (br) {\n  var pt = new CompressedG2();\n  var y_gt = br.readUInt8();\n  pt.y_gt = y_gt & 1;\n  pt.x = br.read(64);\n  return pt;\n};\n\nCompressedG2.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\n  writer.write(this.x);\n  return writer;\n};\n\nfunction ZCProof(params) {\n  if (!(this instanceof ZCProof)) {\n    return new ZCProof(params);\n  }\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nZCProof.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var proof = new ZCProof();\n  return proof._fromObject(obj);\n};\n\nZCProof.prototype._fromObject = function (params) {\n  this.g_A = CompressedG1.fromObject(params.g_A);\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\n  this.g_B = CompressedG2.fromObject(params.g_B);\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\n  this.g_C = CompressedG1.fromObject(params.g_C);\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\n  this.g_K = CompressedG1.fromObject(params.g_K);\n  this.g_H = CompressedG1.fromObject(params.g_H);\n  return this;\n};\n\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\n  var obj = {\n    g_A: this.g_A.toObject(),\n    g_A_prime: this.g_A_prime.toObject(),\n    g_B: this.g_B.toObject(),\n    g_B_prime: this.g_B_prime.toObject(),\n    g_C: this.g_C.toObject(),\n    g_C_prime: this.g_C_prime.toObject(),\n    g_K: this.g_K.toObject(),\n    g_H: this.g_H.toObject()\n  };\n  return obj;\n};\n\nZCProof.fromBufferReader = function (br) {\n  var proof = new ZCProof();\n  proof.g_A = CompressedG1.fromBufferReader(br);\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\n  proof.g_B = CompressedG2.fromBufferReader(br);\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\n  proof.g_C = CompressedG1.fromBufferReader(br);\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\n  proof.g_K = CompressedG1.fromBufferReader(br);\n  proof.g_H = CompressedG1.fromBufferReader(br);\n  return proof;\n};\n\nZCProof.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  this.g_A.toBufferWriter(writer);\n  this.g_A_prime.toBufferWriter(writer);\n  this.g_B.toBufferWriter(writer);\n  this.g_B_prime.toBufferWriter(writer);\n  this.g_C.toBufferWriter(writer);\n  this.g_C_prime.toBufferWriter(writer);\n  this.g_K.toBufferWriter(writer);\n  this.g_H.toBufferWriter(writer);\n  return writer;\n};\n\nmodule.exports = ZCProof;","'use strict';\n\nvar BufferWriter = require('./bufferwriter');\n\nvar BufferReader = require('./bufferreader');\n\nvar BN = require('../crypto/bn');\n\nvar Varint = function Varint(buf) {\n  if (!(this instanceof Varint)) return new Varint(buf);\n\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf;\n  } else if (typeof buf === 'number') {\n    var num = buf;\n    this.fromNumber(num);\n  } else if (buf instanceof BN) {\n    var bn = buf;\n    this.fromBN(bn);\n  } else if (buf) {\n    var obj = buf;\n    this.set(obj);\n  }\n};\n\nVarint.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf;\n  return this;\n};\n\nVarint.prototype.fromString = function (str) {\n  this.set({\n    buf: new Buffer(str, 'hex')\n  });\n  return this;\n};\n\nVarint.prototype.toString = function () {\n  return this.buf.toString('hex');\n};\n\nVarint.prototype.fromBuffer = function (buf) {\n  this.buf = buf;\n  return this;\n};\n\nVarint.prototype.fromBufferReader = function (br) {\n  this.buf = br.readVarintBuf();\n  return this;\n};\n\nVarint.prototype.fromBN = function (bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat();\n  return this;\n};\n\nVarint.prototype.fromNumber = function (num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat();\n  return this;\n};\n\nVarint.prototype.toBuffer = function () {\n  return this.buf;\n};\n\nVarint.prototype.toBN = function () {\n  return BufferReader(this.buf).readVarintBN();\n};\n\nVarint.prototype.toNumber = function () {\n  return BufferReader(this.buf).readVarintNum();\n};\n\nmodule.exports = Varint;","module.exports = require('./block');\nmodule.exports.BlockHeader = require('./blockheader');\nmodule.exports.MerkleBlock = require('./merkleblock');","'use strict';\n\nvar _ = require('lodash');\n\nvar BlockHeader = require('./blockheader');\n\nvar BN = require('../crypto/bn');\n\nvar BufferUtil = require('../util/buffer');\n\nvar BufferReader = require('../encoding/bufferreader');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Hash = require('../crypto/hash');\n\nvar Transaction = require('../transaction');\n\nvar $ = require('../util/preconditions');\n/**\n * Instantiate a Block from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {Block}\n * @constructor\n */\n\n\nfunction Block(arg) {\n  if (!(this instanceof Block)) {\n    return new Block(arg);\n  }\n\n  _.extend(this, Block._from(arg));\n\n  return this;\n} // https://github.com/bitcoin/bitcoin/blob/b5fa132329f0377d787a4a21c1686609c2bfaece/src/primitives/block.h#L14\n\n\nBlock.MAX_BLOCK_SIZE = 1000000;\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\n\nBlock._from = function _from(arg) {\n  var info = {};\n\n  if (BufferUtil.isBuffer(arg)) {\n    info = Block._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    info = Block._fromObject(arg);\n  } else {\n    throw new TypeError('Unrecognized argument for Block');\n  }\n\n  return info;\n};\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Object} - An object representing block data\n * @private\n */\n\n\nBlock._fromObject = function _fromObject(data) {\n  var transactions = [];\n  data.transactions.forEach(function (tx) {\n    if (tx instanceof Transaction) {\n      transactions.push(tx);\n    } else {\n      transactions.push(Transaction().fromObject(tx));\n    }\n  });\n  var info = {\n    header: BlockHeader.fromObject(data.header),\n    transactions: transactions\n  };\n  return info;\n};\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\n\n\nBlock.fromObject = function fromObject(obj) {\n  var info = Block._fromObject(obj);\n\n  return new Block(info);\n};\n/**\n * @param {BufferReader} - Block data\n * @returns {Object} - An object representing the block data\n * @private\n */\n\n\nBlock._fromBufferReader = function _fromBufferReader(br) {\n  var info = {};\n  $.checkState(!br.finished(), 'No block data received');\n  info.header = BlockHeader.fromBufferReader(br);\n  var transactions = br.readVarintNum();\n  info.transactions = [];\n\n  for (var i = 0; i < transactions; i++) {\n    info.transactions.push(Transaction().fromBufferReader(br));\n  }\n\n  return info;\n};\n/**\n * @param {BufferReader} - A buffer reader of the block\n * @returns {Block} - An instance of block\n */\n\n\nBlock.fromBufferReader = function fromBufferReader(br) {\n  $.checkArgument(br, 'br is required');\n\n  var info = Block._fromBufferReader(br);\n\n  return new Block(info);\n};\n/**\n * @param {Buffer} - A buffer of the block\n * @returns {Block} - An instance of block\n */\n\n\nBlock.fromBuffer = function fromBuffer(buf) {\n  return Block.fromBufferReader(new BufferReader(buf));\n};\n/**\n * @param {string} - str - A hex encoded string of the block\n * @returns {Block} - A hex encoded string of the block\n */\n\n\nBlock.fromString = function fromString(str) {\n  var buf = new Buffer(str, 'hex');\n  return Block.fromBuffer(buf);\n};\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {Block} - An instance of block\n */\n\n\nBlock.fromRawBlock = function fromRawBlock(data) {\n  if (!BufferUtil.isBuffer(data)) {\n    data = new Buffer(data, 'binary');\n  }\n\n  var br = BufferReader(data);\n  br.pos = Block.Values.START_OF_BLOCK;\n\n  var info = Block._fromBufferReader(br);\n\n  return new Block(info);\n};\n/**\n * @returns {Object} - A plain object with the block properties\n */\n\n\nBlock.prototype.toObject = Block.prototype.toJSON = function toObject() {\n  var transactions = [];\n  this.transactions.forEach(function (tx) {\n    transactions.push(tx.toObject());\n  });\n  return {\n    header: this.header.toObject(),\n    transactions: transactions\n  };\n};\n/**\n * @returns {Buffer} - A buffer of the block\n */\n\n\nBlock.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n/**\n * @returns {string} - A hex encoded string of the block\n */\n\n\nBlock.prototype.toString = function toString() {\n  return this.toBuffer().toString('hex');\n};\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the Block\n */\n\n\nBlock.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n\n  bw.write(this.header.toBuffer());\n  bw.writeVarintNum(this.transactions.length);\n\n  for (var i = 0; i < this.transactions.length; i++) {\n    this.transactions[i].toBufferWriter(bw);\n  }\n\n  return bw;\n};\n/**\n * Will iterate through each transaction and return an array of hashes\n * @returns {Array} - An array with transaction hashes\n */\n\n\nBlock.prototype.getTransactionHashes = function getTransactionHashes() {\n  var hashes = [];\n\n  if (this.transactions.length === 0) {\n    return [Block.Values.NULL_HASH];\n  }\n\n  for (var t = 0; t < this.transactions.length; t++) {\n    hashes.push(this.transactions[t]._getHash());\n  }\n\n  return hashes;\n};\n/**\n * Will build a merkle tree of all the transactions, ultimately arriving at\n * a single point, the merkle root.\n * @link https://en.bitcoin.it/wiki/Protocol_specification#Merkle_Trees\n * @returns {Array} - An array with each level of the tree after the other.\n */\n\n\nBlock.prototype.getMerkleTree = function getMerkleTree() {\n  var tree = this.getTransactionHashes();\n  var j = 0;\n\n  for (var size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)) {\n    for (var i = 0; i < size; i += 2) {\n      var i2 = Math.min(i + 1, size - 1);\n      var buf = Buffer.concat([tree[j + i], tree[j + i2]]);\n      tree.push(Hash.sha256sha256(buf));\n    }\n\n    j += size;\n  }\n\n  return tree;\n};\n/**\n * Calculates the merkleRoot from the transactions.\n * @returns {Buffer} - A buffer of the merkle root hash\n */\n\n\nBlock.prototype.getMerkleRoot = function getMerkleRoot() {\n  var tree = this.getMerkleTree();\n  return tree[tree.length - 1];\n};\n/**\n * Verifies that the transactions in the block match the header merkle root\n * @returns {Boolean} - If the merkle roots match\n */\n\n\nBlock.prototype.validMerkleRoot = function validMerkleRoot() {\n  var h = new BN(this.header.merkleRoot.toString('hex'), 'hex');\n  var c = new BN(this.getMerkleRoot().toString('hex'), 'hex');\n\n  if (h.cmp(c) !== 0) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\n\n\nBlock.prototype._getHash = function () {\n  return this.header._getHash();\n};\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function get() {\n    if (!this._id) {\n      this._id = this.header.id;\n    }\n\n    return this._id;\n  },\n  set: _.noop\n};\nObject.defineProperty(Block.prototype, 'id', idProperty);\nObject.defineProperty(Block.prototype, 'hash', idProperty);\n/**\n * @returns {string} - A string formatted for the console\n */\n\nBlock.prototype.inspect = function inspect() {\n  return '<Block ' + this.id + '>';\n};\n\nBlock.Values = {\n  START_OF_BLOCK: 8,\n  // Start of block in raw block data\n  NULL_HASH: new Buffer('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\n};\nmodule.exports = Block;","'use strict';\n\nvar _ = require('lodash');\n\nvar URL = require('url');\n\nvar Address = require('./address');\n\nvar Unit = require('./unit');\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\n\n\nvar URI = function URI(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof data === 'string') {\n    var params = URI.parse(data);\n\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n\n    this._fromObject(params);\n  } else if (typeof data === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\n\n\nURI.fromString = function fromString(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return new URI(str);\n};\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\n\n\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\n\n\nURI.isValid = function (arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\n\n\nURI.parse = function (uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'zcash:') {\n    throw new TypeError('Invalid zcash URI');\n  } // workaround to host insensitiveness\n\n\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\n\nURI.prototype._fromObject = function (obj) {\n  /* jshint maxcomplexity: 10 */\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid zcash address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n/**\n * Internal function to transform a BTC string amount into satoshis\n *\n * @param {string} amount - Amount BTC string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\n\n\nURI.prototype._parseAmount = function (amount) {\n  amount = Number(amount);\n\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n\n  return Unit.fromBTC(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n\n    if (this.hasOwnProperty(m) && typeof this[m] !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n\n  _.extend(json, this.extras);\n\n  return json;\n};\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\n\n\nURI.prototype.toString = function () {\n  var query = {};\n\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTC();\n  }\n\n  if (this.message) {\n    query.message = this.message;\n  }\n\n  if (this.label) {\n    query.label = this.label;\n  }\n\n  if (this.r) {\n    query.r = this.r;\n  }\n\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'zcash:',\n    host: this.address,\n    query: query\n  });\n};\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\n\n\nURI.prototype.inspect = function () {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;","var ethUtil = require('ethereumjs-util');\n\nvar rlp = require('rlp');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar Account = module.exports = function (data) {\n  // Define Properties\n  var fields = [{\n    name: 'nonce',\n    default: Buffer.alloc(0)\n  }, {\n    name: 'balance',\n    default: Buffer.alloc(0)\n  }, {\n    name: 'stateRoot',\n    length: 32,\n    default: ethUtil.SHA3_RLP\n  }, {\n    name: 'codeHash',\n    length: 32,\n    default: ethUtil.SHA3_NULL\n  }];\n  ethUtil.defineProperties(this, fields, data);\n};\n\nAccount.prototype.serialize = function () {\n  return rlp.encode(this.raw);\n};\n\nAccount.prototype.isContract = function () {\n  return this.codeHash.toString('hex') !== ethUtil.SHA3_NULL_S;\n};\n\nAccount.prototype.getCode = function (state, cb) {\n  if (!this.isContract()) {\n    cb(null, Buffer.alloc(0));\n    return;\n  }\n\n  state.getRaw(this.codeHash, cb);\n};\n\nAccount.prototype.setCode = function (trie, code, cb) {\n  var self = this;\n  this.codeHash = ethUtil.sha3(code);\n\n  if (this.codeHash.toString('hex') === ethUtil.SHA3_NULL_S) {\n    cb(null, Buffer.alloc(0));\n    return;\n  }\n\n  trie.putRaw(this.codeHash, code, function (err) {\n    cb(err, self.codeHash);\n  });\n};\n\nAccount.prototype.getStorage = function (trie, key, cb) {\n  var t = trie.copy();\n  t.root = this.stateRoot;\n  t.get(key, cb);\n};\n\nAccount.prototype.setStorage = function (trie, key, val, cb) {\n  var self = this;\n  var t = trie.copy();\n  t.root = self.stateRoot;\n  t.put(key, val, function (err) {\n    if (err) return cb();\n    self.stateRoot = t.root;\n    cb();\n  });\n};\n\nAccount.prototype.isEmpty = function () {\n  return this.balance.toString('hex') === '' && this.nonce.toString('hex') === '' && this.stateRoot.toString('hex') === ethUtil.SHA3_RLP_S && this.codeHash.toString('hex') === ethUtil.SHA3_NULL_S;\n};","'use strict';\n\nmodule.exports = require('./lib/api')(require('./lib/keccak'));","'use strict';\n\nvar createKeccak = require('./keccak');\n\nvar createShake = require('./shake');\n\nmodule.exports = function (KeccakState) {\n  var Keccak = createKeccak(KeccakState);\n  var Shake = createShake(KeccakState);\n  return function (algorithm, options) {\n    var hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm;\n\n    switch (hash) {\n      case 'keccak224':\n        return new Keccak(1152, 448, null, 224, options);\n\n      case 'keccak256':\n        return new Keccak(1088, 512, null, 256, options);\n\n      case 'keccak384':\n        return new Keccak(832, 768, null, 384, options);\n\n      case 'keccak512':\n        return new Keccak(576, 1024, null, 512, options);\n\n      case 'sha3-224':\n        return new Keccak(1152, 448, 0x06, 224, options);\n\n      case 'sha3-256':\n        return new Keccak(1088, 512, 0x06, 256, options);\n\n      case 'sha3-384':\n        return new Keccak(832, 768, 0x06, 384, options);\n\n      case 'sha3-512':\n        return new Keccak(576, 1024, 0x06, 512, options);\n\n      case 'shake128':\n        return new Shake(1344, 256, 0x1f, options);\n\n      case 'shake256':\n        return new Shake(1088, 512, 0x1f, options);\n\n      default:\n        throw new Error('Invald algorithm: ' + algorithm);\n    }\n  };\n};","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar Transform = require('stream').Transform;\n\nvar inherits = require('inherits');\n\nmodule.exports = function (KeccakState) {\n  function Keccak(rate, capacity, delimitedSuffix, hashBitLength, options) {\n    Transform.call(this, options);\n    this._rate = rate;\n    this._capacity = capacity;\n    this._delimitedSuffix = delimitedSuffix;\n    this._hashBitLength = hashBitLength;\n    this._options = options;\n    this._state = new KeccakState();\n\n    this._state.initialize(rate, capacity);\n\n    this._finalized = false;\n  }\n\n  inherits(Keccak, Transform);\n\n  Keccak.prototype._transform = function (chunk, encoding, callback) {\n    var error = null;\n\n    try {\n      this.update(chunk, encoding);\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  };\n\n  Keccak.prototype._flush = function (callback) {\n    var error = null;\n\n    try {\n      this.push(this.digest());\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  };\n\n  Keccak.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n    if (this._finalized) throw new Error('Digest already called');\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n    this._state.absorb(data);\n\n    return this;\n  };\n\n  Keccak.prototype.digest = function (encoding) {\n    if (this._finalized) throw new Error('Digest already called');\n    this._finalized = true;\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix);\n\n    var digest = this._state.squeeze(this._hashBitLength / 8);\n\n    if (encoding !== undefined) digest = digest.toString(encoding);\n\n    this._resetState();\n\n    return digest;\n  }; // remove result from memory\n\n\n  Keccak.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity);\n\n    return this;\n  }; // because sometimes we need hash right now and little later\n\n\n  Keccak.prototype._clone = function () {\n    var clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);\n\n    this._state.copy(clone._state);\n\n    clone._finalized = this._finalized;\n    return clone;\n  };\n\n  return Keccak;\n};","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar Transform = require('stream').Transform;\n\nvar inherits = require('inherits');\n\nmodule.exports = function (KeccakState) {\n  function Shake(rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options);\n    this._rate = rate;\n    this._capacity = capacity;\n    this._delimitedSuffix = delimitedSuffix;\n    this._options = options;\n    this._state = new KeccakState();\n\n    this._state.initialize(rate, capacity);\n\n    this._finalized = false;\n  }\n\n  inherits(Shake, Transform);\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    var error = null;\n\n    try {\n      this.update(chunk, encoding);\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  };\n\n  Shake.prototype._flush = function () {};\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size));\n  };\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n    if (this._finalized) throw new Error('Squeeze already called');\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n    this._state.absorb(data);\n\n    return this;\n  };\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true;\n\n      this._state.absorbLastFewBits(this._delimitedSuffix);\n    }\n\n    var data = this._state.squeeze(dataByteLength);\n\n    if (encoding !== undefined) data = data.toString(encoding);\n    return data;\n  };\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity);\n\n    return this;\n  };\n\n  Shake.prototype._clone = function () {\n    var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);\n\n    this._state.copy(clone._state);\n\n    clone._finalized = this._finalized;\n    return clone;\n  };\n\n  return Shake;\n};","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar keccakState = require('./keccak-state-unroll');\n\nfunction Keccak() {\n  // much faster than `new Array(50)`\n  this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  this.blockSize = null;\n  this.count = 0;\n  this.squeezing = false;\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (var i = 0; i < 50; ++i) {\n    this.state[i] = 0;\n  }\n\n  this.blockSize = rate / 8;\n  this.count = 0;\n  this.squeezing = false;\n};\n\nKeccak.prototype.absorb = function (data) {\n  for (var i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << 8 * (this.count % 4);\n    this.count += 1;\n\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state);\n      this.count = 0;\n    }\n  }\n};\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << 8 * (this.count % 4);\n  if ((bits & 0x80) !== 0 && this.count === this.blockSize - 1) keccakState.p1600(this.state);\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << 8 * ((this.blockSize - 1) % 4);\n  keccakState.p1600(this.state);\n  this.count = 0;\n  this.squeezing = true;\n};\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01);\n  var output = Buffer.alloc(length);\n\n  for (var i = 0; i < length; ++i) {\n    output[i] = this.state[~~(this.count / 4)] >>> 8 * (this.count % 4) & 0xff;\n    this.count += 1;\n\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state);\n      this.count = 0;\n    }\n  }\n\n  return output;\n};\n\nKeccak.prototype.copy = function (dest) {\n  for (var i = 0; i < 50; ++i) {\n    dest.state[i] = this.state[i];\n  }\n\n  dest.blockSize = this.blockSize;\n  dest.count = this.count;\n  dest.squeezing = this.squeezing;\n};\n\nmodule.exports = Keccak;","'use strict';\n\nvar P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nexports.p1600 = function (s) {\n  for (var round = 0; round < 24; ++round) {\n    // theta\n    var lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    var hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    var lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    var hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    var lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    var hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    var lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    var hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    var lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    var hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n    var lo = lo4 ^ (lo1 << 1 | hi1 >>> 31);\n    var hi = hi4 ^ (hi1 << 1 | lo1 >>> 31);\n    var t1slo0 = s[0] ^ lo;\n    var t1shi0 = s[1] ^ hi;\n    var t1slo5 = s[10] ^ lo;\n    var t1shi5 = s[11] ^ hi;\n    var t1slo10 = s[20] ^ lo;\n    var t1shi10 = s[21] ^ hi;\n    var t1slo15 = s[30] ^ lo;\n    var t1shi15 = s[31] ^ hi;\n    var t1slo20 = s[40] ^ lo;\n    var t1shi20 = s[41] ^ hi;\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31);\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31);\n    var t1slo1 = s[2] ^ lo;\n    var t1shi1 = s[3] ^ hi;\n    var t1slo6 = s[12] ^ lo;\n    var t1shi6 = s[13] ^ hi;\n    var t1slo11 = s[22] ^ lo;\n    var t1shi11 = s[23] ^ hi;\n    var t1slo16 = s[32] ^ lo;\n    var t1shi16 = s[33] ^ hi;\n    var t1slo21 = s[42] ^ lo;\n    var t1shi21 = s[43] ^ hi;\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31);\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31);\n    var t1slo2 = s[4] ^ lo;\n    var t1shi2 = s[5] ^ hi;\n    var t1slo7 = s[14] ^ lo;\n    var t1shi7 = s[15] ^ hi;\n    var t1slo12 = s[24] ^ lo;\n    var t1shi12 = s[25] ^ hi;\n    var t1slo17 = s[34] ^ lo;\n    var t1shi17 = s[35] ^ hi;\n    var t1slo22 = s[44] ^ lo;\n    var t1shi22 = s[45] ^ hi;\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31);\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31);\n    var t1slo3 = s[6] ^ lo;\n    var t1shi3 = s[7] ^ hi;\n    var t1slo8 = s[16] ^ lo;\n    var t1shi8 = s[17] ^ hi;\n    var t1slo13 = s[26] ^ lo;\n    var t1shi13 = s[27] ^ hi;\n    var t1slo18 = s[36] ^ lo;\n    var t1shi18 = s[37] ^ hi;\n    var t1slo23 = s[46] ^ lo;\n    var t1shi23 = s[47] ^ hi;\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31);\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31);\n    var t1slo4 = s[8] ^ lo;\n    var t1shi4 = s[9] ^ hi;\n    var t1slo9 = s[18] ^ lo;\n    var t1shi9 = s[19] ^ hi;\n    var t1slo14 = s[28] ^ lo;\n    var t1shi14 = s[29] ^ hi;\n    var t1slo19 = s[38] ^ lo;\n    var t1shi19 = s[39] ^ hi;\n    var t1slo24 = s[48] ^ lo;\n    var t1shi24 = s[49] ^ hi; // rho & pi\n\n    var t2slo0 = t1slo0;\n    var t2shi0 = t1shi0;\n    var t2slo16 = t1shi5 << 4 | t1slo5 >>> 28;\n    var t2shi16 = t1slo5 << 4 | t1shi5 >>> 28;\n    var t2slo7 = t1slo10 << 3 | t1shi10 >>> 29;\n    var t2shi7 = t1shi10 << 3 | t1slo10 >>> 29;\n    var t2slo23 = t1shi15 << 9 | t1slo15 >>> 23;\n    var t2shi23 = t1slo15 << 9 | t1shi15 >>> 23;\n    var t2slo14 = t1slo20 << 18 | t1shi20 >>> 14;\n    var t2shi14 = t1shi20 << 18 | t1slo20 >>> 14;\n    var t2slo10 = t1slo1 << 1 | t1shi1 >>> 31;\n    var t2shi10 = t1shi1 << 1 | t1slo1 >>> 31;\n    var t2slo1 = t1shi6 << 12 | t1slo6 >>> 20;\n    var t2shi1 = t1slo6 << 12 | t1shi6 >>> 20;\n    var t2slo17 = t1slo11 << 10 | t1shi11 >>> 22;\n    var t2shi17 = t1shi11 << 10 | t1slo11 >>> 22;\n    var t2slo8 = t1shi16 << 13 | t1slo16 >>> 19;\n    var t2shi8 = t1slo16 << 13 | t1shi16 >>> 19;\n    var t2slo24 = t1slo21 << 2 | t1shi21 >>> 30;\n    var t2shi24 = t1shi21 << 2 | t1slo21 >>> 30;\n    var t2slo20 = t1shi2 << 30 | t1slo2 >>> 2;\n    var t2shi20 = t1slo2 << 30 | t1shi2 >>> 2;\n    var t2slo11 = t1slo7 << 6 | t1shi7 >>> 26;\n    var t2shi11 = t1shi7 << 6 | t1slo7 >>> 26;\n    var t2slo2 = t1shi12 << 11 | t1slo12 >>> 21;\n    var t2shi2 = t1slo12 << 11 | t1shi12 >>> 21;\n    var t2slo18 = t1slo17 << 15 | t1shi17 >>> 17;\n    var t2shi18 = t1shi17 << 15 | t1slo17 >>> 17;\n    var t2slo9 = t1shi22 << 29 | t1slo22 >>> 3;\n    var t2shi9 = t1slo22 << 29 | t1shi22 >>> 3;\n    var t2slo5 = t1slo3 << 28 | t1shi3 >>> 4;\n    var t2shi5 = t1shi3 << 28 | t1slo3 >>> 4;\n    var t2slo21 = t1shi8 << 23 | t1slo8 >>> 9;\n    var t2shi21 = t1slo8 << 23 | t1shi8 >>> 9;\n    var t2slo12 = t1slo13 << 25 | t1shi13 >>> 7;\n    var t2shi12 = t1shi13 << 25 | t1slo13 >>> 7;\n    var t2slo3 = t1slo18 << 21 | t1shi18 >>> 11;\n    var t2shi3 = t1shi18 << 21 | t1slo18 >>> 11;\n    var t2slo19 = t1shi23 << 24 | t1slo23 >>> 8;\n    var t2shi19 = t1slo23 << 24 | t1shi23 >>> 8;\n    var t2slo15 = t1slo4 << 27 | t1shi4 >>> 5;\n    var t2shi15 = t1shi4 << 27 | t1slo4 >>> 5;\n    var t2slo6 = t1slo9 << 20 | t1shi9 >>> 12;\n    var t2shi6 = t1shi9 << 20 | t1slo9 >>> 12;\n    var t2slo22 = t1shi14 << 7 | t1slo14 >>> 25;\n    var t2shi22 = t1slo14 << 7 | t1shi14 >>> 25;\n    var t2slo13 = t1slo19 << 8 | t1shi19 >>> 24;\n    var t2shi13 = t1shi19 << 8 | t1slo19 >>> 24;\n    var t2slo4 = t1slo24 << 14 | t1shi24 >>> 18;\n    var t2shi4 = t1shi24 << 14 | t1slo24 >>> 18; // chi\n\n    s[0] = t2slo0 ^ ~t2slo1 & t2slo2;\n    s[1] = t2shi0 ^ ~t2shi1 & t2shi2;\n    s[10] = t2slo5 ^ ~t2slo6 & t2slo7;\n    s[11] = t2shi5 ^ ~t2shi6 & t2shi7;\n    s[20] = t2slo10 ^ ~t2slo11 & t2slo12;\n    s[21] = t2shi10 ^ ~t2shi11 & t2shi12;\n    s[30] = t2slo15 ^ ~t2slo16 & t2slo17;\n    s[31] = t2shi15 ^ ~t2shi16 & t2shi17;\n    s[40] = t2slo20 ^ ~t2slo21 & t2slo22;\n    s[41] = t2shi20 ^ ~t2shi21 & t2shi22;\n    s[2] = t2slo1 ^ ~t2slo2 & t2slo3;\n    s[3] = t2shi1 ^ ~t2shi2 & t2shi3;\n    s[12] = t2slo6 ^ ~t2slo7 & t2slo8;\n    s[13] = t2shi6 ^ ~t2shi7 & t2shi8;\n    s[22] = t2slo11 ^ ~t2slo12 & t2slo13;\n    s[23] = t2shi11 ^ ~t2shi12 & t2shi13;\n    s[32] = t2slo16 ^ ~t2slo17 & t2slo18;\n    s[33] = t2shi16 ^ ~t2shi17 & t2shi18;\n    s[42] = t2slo21 ^ ~t2slo22 & t2slo23;\n    s[43] = t2shi21 ^ ~t2shi22 & t2shi23;\n    s[4] = t2slo2 ^ ~t2slo3 & t2slo4;\n    s[5] = t2shi2 ^ ~t2shi3 & t2shi4;\n    s[14] = t2slo7 ^ ~t2slo8 & t2slo9;\n    s[15] = t2shi7 ^ ~t2shi8 & t2shi9;\n    s[24] = t2slo12 ^ ~t2slo13 & t2slo14;\n    s[25] = t2shi12 ^ ~t2shi13 & t2shi14;\n    s[34] = t2slo17 ^ ~t2slo18 & t2slo19;\n    s[35] = t2shi17 ^ ~t2shi18 & t2shi19;\n    s[44] = t2slo22 ^ ~t2slo23 & t2slo24;\n    s[45] = t2shi22 ^ ~t2shi23 & t2shi24;\n    s[6] = t2slo3 ^ ~t2slo4 & t2slo0;\n    s[7] = t2shi3 ^ ~t2shi4 & t2shi0;\n    s[16] = t2slo8 ^ ~t2slo9 & t2slo5;\n    s[17] = t2shi8 ^ ~t2shi9 & t2shi5;\n    s[26] = t2slo13 ^ ~t2slo14 & t2slo10;\n    s[27] = t2shi13 ^ ~t2shi14 & t2shi10;\n    s[36] = t2slo18 ^ ~t2slo19 & t2slo15;\n    s[37] = t2shi18 ^ ~t2shi19 & t2shi15;\n    s[46] = t2slo23 ^ ~t2slo24 & t2slo20;\n    s[47] = t2shi23 ^ ~t2shi24 & t2shi20;\n    s[8] = t2slo4 ^ ~t2slo0 & t2slo1;\n    s[9] = t2shi4 ^ ~t2shi0 & t2shi1;\n    s[18] = t2slo9 ^ ~t2slo5 & t2slo6;\n    s[19] = t2shi9 ^ ~t2shi5 & t2shi6;\n    s[28] = t2slo14 ^ ~t2slo10 & t2slo11;\n    s[29] = t2shi14 ^ ~t2shi10 & t2shi11;\n    s[38] = t2slo19 ^ ~t2slo15 & t2slo16;\n    s[39] = t2shi19 ^ ~t2shi15 & t2shi16;\n    s[48] = t2slo24 ^ ~t2slo20 & t2slo21;\n    s[49] = t2shi24 ^ ~t2shi20 & t2shi21; // iota\n\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2];\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1];\n  }\n};","'use strict';\n\nmodule.exports = require('./lib')(require('./lib/elliptic'));","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar createHash = require('create-hash');\n\nvar BN = require('bn.js');\n\nvar EC = require('elliptic').ec;\n\nvar messages = require('../messages.json');\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nfunction loadCompressedPublicKey(first, xBuffer) {\n  var x = new BN(xBuffer); // overflow\n\n  if (x.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red); // compute corresponding Y\n\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();\n  if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadUncompressedPublicKey(first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer);\n  var y = new BN(yBuffer); // overflow\n\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red);\n  y = y.toRed(ecparams.red); // is odd flag\n\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null; // x*x*x + b = y*y\n\n  var x3 = x.redSqr().redIMul(x);\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadPublicKey(publicKey) {\n  var first = publicKey[0];\n\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null;\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33));\n\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null;\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65));\n\n    default:\n      return null;\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey);\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero();\n};\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL);\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true));\n};\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey);\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID);\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak);\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n  bn.iadd(new BN(privateKey));\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n  return bn.toArrayLike(Buffer, 'be', 32);\n};\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak);\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);\n  bn.imul(new BN(privateKey));\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n);\n  return bn.toArrayLike(Buffer, 'be', 32);\n};\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL);\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true));\n};\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  return Buffer.from(pair.getPublic(compressed, true));\n};\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null;\n};\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  tweak = new BN(tweak);\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n  var point = ecparams.g.mul(tweak).add(pair.pub);\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n  return Buffer.from(point.encode(true, compressed));\n};\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  tweak = new BN(tweak);\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed));\n};\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length);\n\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i]);\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  }\n\n  var point = pairs[0].pub;\n\n  for (var j = 1; j < pairs.length; ++j) {\n    point = point.add(pairs[j].pub);\n  }\n\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL);\n  return Buffer.from(point.encode(true, compressed));\n};\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32));\n  var s = new BN(signature.slice(32, 64));\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  var result = Buffer.from(signature);\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32);\n  return result;\n};\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32);\n  var s = signature.slice(32, 64);\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  return {\n    r: r,\n    s: s\n  };\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0);\n  var s = new BN(sigObj.s);\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0);\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn;\n\n    noncefn = function noncefn(counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter);\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL);\n      return new BN(nonce);\n    };\n  }\n\n  var d = new BN(privateKey);\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL);\n  var result = ec.sign(message, privateKey, {\n    canonical: true,\n    k: noncefn,\n    pers: data\n  });\n  return {\n    signature: Buffer.concat([result.r.toArrayLike(Buffer, 'be', 32), result.s.toArrayLike(Buffer, 'be', 32)]),\n    recovery: result.recoveryParam\n  };\n};\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = {\n    r: signature.slice(0, 32),\n    s: signature.slice(32, 64)\n  };\n  var sigr = new BN(sigObj.r);\n  var sigs = new BN(sigObj.s);\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false;\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  return ec.verify(message, sigObj, {\n    x: pair.pub.x,\n    y: pair.pub.y\n  });\n};\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = {\n    r: signature.slice(0, 32),\n    s: signature.slice(32, 64)\n  };\n  var sigr = new BN(sigObj.r);\n  var sigs = new BN(sigObj.s);\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error();\n    var point = ec.recoverPubKey(message, sigObj, recovery);\n    return Buffer.from(point.encode(true, compressed));\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL);\n  }\n};\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true);\n  return createHash('sha256').update(shared).digest();\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  var scalar = new BN(privateKey);\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL);\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed));\n};","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\n\nvar stripHexPrefix = require('strip-hex-prefix');\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\n\n\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\n\n\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\n\n\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\n\n\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\n\n\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n  return bufferValue.toString('utf8');\n}\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\n\n\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\n\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","var isHexPrefixed = require('is-hex-prefixed');\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\n\n\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n};","// this is the hash of the empty code (SHA3_NULL)\nmodule.exports = new Buffer('c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470', 'hex');","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\n\n\nvar Common =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param chain String ('mainnet') or Number (1) chain\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  function Common(chain, hardfork, supportedHardforks) {\n    this._chainParams = this.setChain(chain);\n    this._hardfork = null;\n    this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n\n    if (hardfork) {\n      this.setHardfork(hardfork);\n    }\n  }\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    if (typeof chain === 'number') {\n      if (chains_1.chains['names'][chain]) {\n        this._chainParams = chains_1.chains[chains_1.chains['names'][chain]];\n      } else {\n        throw new Error(\"Chain with ID \" + chain + \" not supported\");\n      }\n    } else if (typeof chain === 'string') {\n      if (chains_1.chains[chain]) {\n        this._chainParams = chains_1.chains[chain];\n      } else {\n        throw new Error(\"Chain with name \" + chain + \" not supported\");\n      }\n    } else if (typeof chain === 'object') {\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n        var param = required_1[_i];\n\n        if (chain[param] === undefined) {\n          throw new Error(\"Missing required chain parameter: \" + param);\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier ('byzantium')\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    var changed = false;\n\n    for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n      var hfChanges = hardforkChanges_1[_i];\n\n      if (hfChanges[0] === hardfork) {\n        this._hardfork = hardfork;\n        changed = true;\n      }\n    }\n\n    if (!changed) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    onlySupported = onlySupported === undefined ? true : onlySupported;\n\n    if (!hardfork) {\n      if (!this._hardfork) {\n        throw new Error('Method called with neither a hardfork set nor provided by param');\n      } else {\n        hardfork = this._hardfork;\n      }\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n      var hf = hfs_1[_i];\n      if (hf['name'] === hardfork) return hf;\n    }\n\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    if (this._supportedHardforks.length > 0) {\n      for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n        var supportedHf = _a[_i];\n        if (hardfork === supportedHf) return true;\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name, optional if hardfork set\n   */\n\n\n  Common.prototype.param = function (topic, name, hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    var value;\n\n    for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n      var hfChanges = hardforkChanges_2[_i];\n\n      if (!hfChanges[1][topic]) {\n        throw new Error(\"Topic \" + topic + \" not defined\");\n      }\n\n      if (hfChanges[1][topic][name] !== undefined) {\n        value = hfChanges[1][topic][name].v;\n      }\n\n      if (hfChanges[0] === hardfork) break;\n    }\n\n    if (value === undefined) {\n      throw new Error(topic + \" value for \" + name + \" not found\");\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.param(topic, name, hardfork);\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlock(hardfork);\n    if (hfBlock !== null && blockNumber >= hfBlock) return true;\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n      var hf = hardforks_2[_i];\n      if (hf['name'] === hardfork1) posHf1 = index;\n      if (hf['name'] === hardfork2) posHf2 = index;\n      index += 1;\n    }\n\n    return posHf1 >= posHf2;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n      var hf = _a[_i];\n      if (hf['name'] === hardfork && hf['block'] !== null) return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n      var hf = hfs_2[_i];\n      if (hf['block'] === null) continue;\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n      activeHardforks.push(hf);\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this._getHardfork(hardfork)['block'];\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block of the current chain\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    if (this.hardforkBlock(hardfork) === blockNumber) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Provide the consensus type for the hardfork set or provided as param\n   * @param hardfork Hardfork name, optional if hardfork set\n   * @returns Consensus type (e.g. 'pow', 'poa')\n   */\n\n\n  Common.prototype.consensus = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['consensus'];\n  };\n  /**\n   * Provide the finality type for the hardfork set or provided as param\n   * @param {String} hardfork Hardfork name, optional if hardfork set\n   * @returns {String} Finality type (e.g. 'pos', null of no finality)\n   */\n\n\n  Common.prototype.finality = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['finality'];\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainId = function () {\n    return this._chainParams['chainId'];\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkId = function () {\n    return this._chainParams['networkId'];\n  };\n\n  return Common;\n}();\n\nexports.default = Common;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chains = {\n  names: {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '6284': 'goerli'\n  },\n  mainnet: require('./mainnet.json'),\n  ropsten: require('./ropsten.json'),\n  rinkeby: require('./rinkeby.json'),\n  kovan: require('./kovan.json'),\n  goerli: require('./goerli.json')\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hardforks = [['chainstart', require('./chainstart.json')], ['homestead', require('./homestead.json')], ['dao', require('./dao.json')], ['tangerineWhistle', require('./tangerineWhistle.json')], ['spuriousDragon', require('./spuriousDragon.json')], ['byzantium', require('./byzantium.json')], ['constantinople', require('./constantinople.json')], ['petersburg', require('./petersburg.json')]];","'use strict';\n\nvar waterfall = require('async/waterfall');\n\nvar each = require('async/each');\n\nvar asyncify = require('async/asyncify');\n\nvar RLP = require('rlp');\n\nvar EthBlockHead = require('ethereumjs-block/header');\n\nvar multihash = require('multihashing-async');\n\nvar cidFromHash = require('../util/cidFromHash');\n\nvar ethBlockResolver = require('../eth-block').resolver;\n\nvar createResolver = require('../util/createResolver');\n\nvar ethBlockListResolver = createResolver('eth-block-list', undefined, mapFromEthObj);\nvar util = ethBlockListResolver.util;\nutil.serialize = asyncify(function (ethBlockList) {\n  var rawOmmers = ethBlockList.map(function (ethBlock) {\n    return ethBlock.raw;\n  });\n  return RLP.encode(rawOmmers);\n});\nutil.deserialize = asyncify(function (serialized) {\n  var rawOmmers = RLP.decode(serialized);\n  return rawOmmers.map(function (rawBlock) {\n    return new EthBlockHead(rawBlock);\n  });\n});\n\nutil.cid = function (blockList, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  var hashAlg = options.hashAlg || 'keccak-256';\n  var version = typeof options.version === 'undefined' ? 1 : options.version;\n  waterfall([function (cb) {\n    return util.serialize(blockList, cb);\n  }, function (data, cb) {\n    return multihash.digest(data, hashAlg, cb);\n  }, asyncify(function (mhash) {\n    return cidFromHash('eth-block-list', mhash, options);\n  })], callback);\n};\n\nmodule.exports = ethBlockListResolver;\n\nfunction mapFromEthObj(ethBlockList, options, callback) {\n  var paths = []; // external links (none)\n  // external links as data (none)\n  // helpers\n\n  paths.push({\n    path: 'count',\n    value: ethBlockList.length\n  }); // internal data\n  // add paths for each block\n\n  each(ethBlockList, function (ethBlock, next) {\n    var index = ethBlockList.indexOf(ethBlock);\n    var blockPath = index.toString(); // block root\n\n    paths.push({\n      path: blockPath,\n      value: ethBlock\n    }); // block children\n\n    ethBlockResolver._mapFromEthObject(ethBlock, {}, function (err, subpaths) {\n      if (err) return next(err); // append blockPath to each subpath\n\n      subpaths.forEach(function (path) {\n        return path.path = blockPath + '/' + path.path;\n      });\n      paths = paths.concat(subpaths);\n      next();\n    });\n  }, function (err) {\n    if (err) return callback(err);\n    callback(null, paths);\n  });\n}","'use strict';\n/* eslint max-nested-callbacks: [\"error\", 5] */\n\nvar ethAccountSnapshotResolver = require('../eth-account-snapshot');\n\nvar createTrieResolver = require('../util/createTrieResolver');\n\nvar ethStateTrieResolver = createTrieResolver('eth-state-trie', ethAccountSnapshotResolver);\nmodule.exports = ethStateTrieResolver;","\"use strict\";\n\nvar rlp = require('rlp');\n\nvar ethUtil = require('ethereumjs-util');\n\nmodule.exports = TrieNode;\n\nfunction TrieNode(type, key, value) {\n  if (Array.isArray(type)) {\n    // parse raw node\n    this.parseNode(type);\n  } else {\n    this.type = type;\n\n    if (type === 'branch') {\n      var values = key;\n      this.raw = Array.apply(null, Array(17));\n\n      if (values) {\n        values.forEach(function (keyVal) {\n          this.set.apply(this, keyVal);\n        });\n      }\n    } else {\n      this.raw = Array(2);\n      this.setValue(value);\n      this.setKey(key);\n    }\n  }\n}\n\nTrieNode.isRawNode = isRawNode;\nTrieNode.addHexPrefix = addHexPrefix;\nTrieNode.removeHexPrefix = removeHexPrefix;\nTrieNode.isTerminator = isTerminator;\nTrieNode.stringToNibbles = stringToNibbles;\nTrieNode.nibblesToBuffer = nibblesToBuffer;\nTrieNode.getNodeType = getNodeType;\nObject.defineProperty(TrieNode.prototype, 'value', {\n  get: function get() {\n    return this.getValue();\n  },\n  set: function set(v) {\n    this.setValue(v);\n  }\n});\nObject.defineProperty(TrieNode.prototype, 'key', {\n  get: function get() {\n    return this.getKey();\n  },\n  set: function set(k) {\n    this.setKey(k);\n  }\n}); // parses a raw node\n\nTrieNode.prototype.parseNode = function (rawNode) {\n  this.raw = rawNode;\n  this.type = getNodeType(rawNode);\n}; // sets the value of the node\n\n\nTrieNode.prototype.setValue = function (key, value) {\n  if (this.type !== 'branch') {\n    this.raw[1] = key;\n  } else {\n    if (arguments.length === 1) {\n      value = key;\n      key = 16;\n    }\n\n    this.raw[key] = value;\n  }\n};\n\nTrieNode.prototype.getValue = function (key) {\n  if (this.type === 'branch') {\n    if (arguments.length === 0) {\n      key = 16;\n    }\n\n    var val = this.raw[key];\n\n    if (val !== null && val !== undefined && val.length !== 0) {\n      return val;\n    }\n  } else {\n    return this.raw[1];\n  }\n};\n\nTrieNode.prototype.setKey = function (key) {\n  if (this.type !== 'branch') {\n    if (Buffer.isBuffer(key)) {\n      key = stringToNibbles(key);\n    } else {\n      key = key.slice(0); // copy the key\n    }\n\n    key = addHexPrefix(key, this.type === 'leaf');\n    this.raw[0] = nibblesToBuffer(key);\n  }\n}; // returns the key as a nibble\n\n\nTrieNode.prototype.getKey = function () {\n  if (this.type !== 'branch') {\n    var key = this.raw[0];\n    key = removeHexPrefix(stringToNibbles(key));\n    return key;\n  }\n};\n\nTrieNode.prototype.serialize = function () {\n  return rlp.encode(this.raw);\n};\n\nTrieNode.prototype.hash = function () {\n  return ethUtil.sha3(this.serialize());\n};\n\nTrieNode.prototype.toString = function () {\n  var out = this.type;\n  out += ': [';\n  this.raw.forEach(function (el) {\n    if (Buffer.isBuffer(el)) {\n      out += el.toString('hex') + ', ';\n    } else if (el) {\n      out += 'object, ';\n    } else {\n      out += 'empty, ';\n    }\n  });\n  out = out.slice(0, -2);\n  out += ']';\n  return out;\n};\n\nTrieNode.prototype.getChildren = function () {\n  var children = [];\n\n  switch (this.type) {\n    case 'leaf':\n      // no children\n      break;\n\n    case 'extention':\n      // one child\n      children.push([this.key, this.getValue()]);\n      break;\n\n    case 'branch':\n      for (var index = 0, end = 16; index < end; index++) {\n        var value = this.getValue(index);\n\n        if (value) {\n          children.push([[index], value]);\n        }\n      }\n\n      break;\n  }\n\n  return children;\n};\n/**\n * @param {Array} dataArr\n * @returns {Buffer} - returns buffer of encoded data\n * hexPrefix\n **/\n\n\nfunction addHexPrefix(key, terminator) {\n  // odd\n  if (key.length % 2) {\n    key.unshift(1);\n  } else {\n    // even\n    key.unshift(0);\n    key.unshift(0);\n  }\n\n  if (terminator) {\n    key[0] += 2;\n  }\n\n  return key;\n}\n\nfunction removeHexPrefix(val) {\n  if (val[0] % 2) {\n    val = val.slice(1);\n  } else {\n    val = val.slice(2);\n  }\n\n  return val;\n}\n/**\n * Determines if a key has Arnold Schwarzenegger in it.\n * @method isTerminator\n * @private\n * @param {Array} key - an hexprefixed array of nibbles\n */\n\n\nfunction isTerminator(key) {\n  return key[0] > 1;\n}\n/**\n * Converts a string OR a buffer to a nibble array.\n * @method stringToNibbles\n * @private\n * @param {Buffer| String} key\n */\n\n\nfunction stringToNibbles(key) {\n  var bkey = new Buffer(key);\n  var nibbles = [];\n\n  for (var i = 0; i < bkey.length; i++) {\n    var q = i * 2;\n    nibbles[q] = bkey[i] >> 4;\n    ++q;\n    nibbles[q] = bkey[i] % 16;\n  }\n\n  return nibbles;\n}\n/**\n * Converts a nibble array into a buffer.\n * @method nibblesToBuffer\n * @private\n * @param arr\n */\n\n\nfunction nibblesToBuffer(arr) {\n  var buf = new Buffer(arr.length / 2);\n\n  for (var i = 0; i < buf.length; i++) {\n    var q = i * 2;\n    buf[i] = (arr[q] << 4) + arr[++q];\n  }\n\n  return buf;\n}\n/**\n * Determines the node type.\n * @private\n * @returns {String} - the node type\n *   - leaf - if the node is a leaf\n *   - branch - if the node is a branch\n *   - extention - if the node is an extention\n *   - unknown - if something else got borked\n */\n\n\nfunction getNodeType(node) {\n  if (node.length === 17) {\n    return 'branch';\n  } else if (node.length === 2) {\n    var key = stringToNibbles(node[0]);\n\n    if (isTerminator(key)) {\n      return 'leaf';\n    }\n\n    return 'extention';\n  }\n}\n\nfunction isRawNode(node) {\n  return Array.isArray(node) && !Buffer.isBuffer(node);\n}","module.exports = isExternalLink;\n\nfunction isExternalLink(obj) {\n  return Boolean(obj['/']);\n}","'use strict';\n/* eslint max-nested-callbacks: [\"error\", 5] */\n\nvar createTrieResolver = require('../util/createTrieResolver');\n\nvar ethStorageTrieResolver = createTrieResolver('eth-storage-trie');\nmodule.exports = ethStorageTrieResolver;","'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ethUtil = require('ethereumjs-util');\n\nvar fees = require('ethereum-common/params.json');\n\nvar BN = ethUtil.BN; // secp256k1n/2\n\nvar N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n/**\n * Creates a new transaction object.\n *\n * @example\n * var rawTx = {\n *   nonce: '00',\n *   gasPrice: '09184e72a000',\n *   gasLimit: '2710',\n *   to: '0000000000000000000000000000000000000000',\n *   value: '00',\n *   data: '7f7465737432000000000000000000000000000000000000000000000000000000600057',\n *   v: '1c',\n *   r: '5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n *   s: '5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n * };\n * var tx = new Transaction(rawTx);\n *\n * @class\n * @param {Buffer | Array | Object} data a transaction can be initiailized with either a buffer containing the RLP serialized transaction or an array of buffers relating to each of the tx Properties, listed in order below in the exmple.\n *\n * Or lastly an Object containing the Properties of the transaction like in the Usage example.\n *\n * For Object and Arrays each of the elements can either be a Buffer, a hex-prefixed (0x) String , Number, or an object with a toBuffer method such as Bignum\n *\n * @property {Buffer} raw The raw rlp encoded transaction\n * @param {Buffer} data.nonce nonce number\n * @param {Buffer} data.gasLimit transaction gas limit\n * @param {Buffer} data.gasPrice transaction gas price\n * @param {Buffer} data.to to the to address\n * @param {Buffer} data.value the amount of ether sent\n * @param {Buffer} data.data this will contain the data of the message or the init of a contract\n * @param {Buffer} data.v EC signature parameter\n * @param {Buffer} data.r EC signature parameter\n * @param {Buffer} data.s EC recovery ID\n * @param {Number} data.chainId EIP 155 chainId - mainnet: 1, ropsten: 3\n * */\n\nvar Transaction = function () {\n  function Transaction(data) {\n    _classCallCheck(this, Transaction);\n\n    data = data || {}; // Define Properties\n\n    var fields = [{\n      name: 'nonce',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'gasPrice',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'gasLimit',\n      alias: 'gas',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'to',\n      allowZero: true,\n      length: 20,\n      default: new Buffer([])\n    }, {\n      name: 'value',\n      length: 32,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 'data',\n      alias: 'input',\n      allowZero: true,\n      default: new Buffer([])\n    }, {\n      name: 'v',\n      allowZero: true,\n      default: new Buffer([0x1c])\n    }, {\n      name: 'r',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new Buffer([])\n    }, {\n      name: 's',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new Buffer([])\n    }];\n    /**\n     * Returns the rlp encoding of the transaction\n     * @method serialize\n     * @return {Buffer}\n     * @memberof Transaction\n     * @name serialize\n     */\n    // attached serialize\n\n    ethUtil.defineProperties(this, fields, data);\n    /**\n     * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n     * @name from\n     * @memberof Transaction\n     */\n\n    Object.defineProperty(this, 'from', {\n      enumerable: true,\n      configurable: true,\n      get: this.getSenderAddress.bind(this)\n    }); // calculate chainId from signature\n\n    var sigV = ethUtil.bufferToInt(this.v);\n    var chainId = Math.floor((sigV - 35) / 2);\n    if (chainId < 0) chainId = 0; // set chainId\n\n    this._chainId = chainId || data.chainId || 0;\n    this._homestead = true;\n  }\n  /**\n   * If the tx's `to` is to the creation address\n   * @return {Boolean}\n   */\n\n\n  Transaction.prototype.toCreationAddress = function toCreationAddress() {\n    return this.to.toString('hex') === '';\n  };\n  /**\n   * Computes a sha3-256 hash of the serialized tx\n   * @param {Boolean} [includeSignature=true] whether or not to inculde the signature\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.hash = function hash(includeSignature) {\n    if (includeSignature === undefined) includeSignature = true; // EIP155 spec:\n    // when computing the hash of a transaction for purposes of signing or recovering,\n    // instead of hashing only the first six elements (ie. nonce, gasprice, startgas, to, value, data),\n    // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0\n\n    var items = void 0;\n\n    if (includeSignature) {\n      items = this.raw;\n    } else {\n      if (this._chainId > 0) {\n        var raw = this.raw.slice();\n        this.v = this._chainId;\n        this.r = 0;\n        this.s = 0;\n        items = this.raw;\n        this.raw = raw;\n      } else {\n        items = this.raw.slice(0, 6);\n      }\n    } // create hash\n\n\n    return ethUtil.rlphash(items);\n  };\n  /**\n   * returns the public key of the sender\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getChainId = function getChainId() {\n    return this._chainId;\n  };\n  /**\n   * returns the sender's address\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getSenderAddress = function getSenderAddress() {\n    if (this._from) {\n      return this._from;\n    }\n\n    var pubkey = this.getSenderPublicKey();\n    this._from = ethUtil.publicToAddress(pubkey);\n    return this._from;\n  };\n  /**\n   * returns the public key of the sender\n   * @return {Buffer}\n   */\n\n\n  Transaction.prototype.getSenderPublicKey = function getSenderPublicKey() {\n    if (!this._senderPubKey || !this._senderPubKey.length) {\n      if (!this.verifySignature()) throw new Error('Invalid Signature');\n    }\n\n    return this._senderPubKey;\n  };\n  /**\n   * Determines if the signature is valid\n   * @return {Boolean}\n   */\n\n\n  Transaction.prototype.verifySignature = function verifySignature() {\n    var msgHash = this.hash(false); // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n\n    if (this._homestead && new BN(this.s).cmp(N_DIV_2) === 1) {\n      return false;\n    }\n\n    try {\n      var v = ethUtil.bufferToInt(this.v);\n\n      if (this._chainId > 0) {\n        v -= this._chainId * 2 + 8;\n      }\n\n      this._senderPubKey = ethUtil.ecrecover(msgHash, v, this.r, this.s);\n    } catch (e) {\n      return false;\n    }\n\n    return !!this._senderPubKey;\n  };\n  /**\n   * sign a transaction with a given a private key\n   * @param {Buffer} privateKey\n   */\n\n\n  Transaction.prototype.sign = function sign(privateKey) {\n    var msgHash = this.hash(false);\n    var sig = ethUtil.ecsign(msgHash, privateKey);\n\n    if (this._chainId > 0) {\n      sig.v += this._chainId * 2 + 8;\n    }\n\n    Object.assign(this, sig);\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getDataFee = function getDataFee() {\n    var data = this.raw[5];\n    var cost = new BN(0);\n\n    for (var i = 0; i < data.length; i++) {\n      data[i] === 0 ? cost.iaddn(fees.txDataZeroGas.v) : cost.iaddn(fees.txDataNonZeroGas.v);\n    }\n\n    return cost;\n  };\n  /**\n   * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getBaseFee = function getBaseFee() {\n    var fee = this.getDataFee().iaddn(fees.txGas.v);\n\n    if (this._homestead && this.toCreationAddress()) {\n      fee.iaddn(fees.txCreation.v);\n    }\n\n    return fee;\n  };\n  /**\n   * the up front amount that an account must have for this transaction to be valid\n   * @return {BN}\n   */\n\n\n  Transaction.prototype.getUpfrontCost = function getUpfrontCost() {\n    return new BN(this.gasLimit).imul(new BN(this.gasPrice)).iadd(new BN(this.value));\n  };\n  /**\n   * validates the signature and checks to see if it has enough gas\n   * @param {Boolean} [stringError=false] whether to return a string with a dscription of why the validation failed or return a Bloolean\n   * @return {Boolean|String}\n   */\n\n\n  Transaction.prototype.validate = function validate(stringError) {\n    var errors = [];\n\n    if (!this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    if (this.getBaseFee().cmp(new BN(this.gasLimit)) > 0) {\n      errors.push(['gas limit is too low. Need at least ' + this.getBaseFee()]);\n    }\n\n    if (stringError === undefined || stringError === false) {\n      return errors.length === 0;\n    } else {\n      return errors.join(' ');\n    }\n  };\n\n  return Transaction;\n}();\n\nmodule.exports = Transaction;","'use strict';\n/* eslint max-nested-callbacks: [\"error\", 5] */\n\nvar ethTxResolver = require('../eth-tx');\n\nvar createTrieResolver = require('../util/createTrieResolver');\n\nvar ethTxTrieResolver = createTrieResolver('eth-tx-trie', ethTxResolver);\nmodule.exports = ethTxTrieResolver;","'use strict';\n\nvar _classCallCheck = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/circleci/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Block = require('ipfs-block');\n\nvar pull = require('pull-stream');\n\nvar CID = require('cids');\n\nvar doUntil = require('async/doUntil');\n\nvar joinPath = require('path').join;\n\nvar osPathSep = require('path').sep;\n\nvar pullDeferSource = require('pull-defer').source;\n\nvar pullTraverse = require('pull-traverse');\n\nvar map = require('async/map');\n\nvar waterfall = require('async/waterfall');\n\nvar mergeOptions = require('merge-options');\n\nvar ipldDagCbor = require('ipld-dag-cbor');\n\nvar ipldDagPb = require('ipld-dag-pb');\n\nvar ipldRaw = require('ipld-raw');\n\nfunction noop() {}\n\nvar IPLDResolver =\n/*#__PURE__*/\nfunction () {\n  function IPLDResolver(userOptions) {\n    var _this = this;\n\n    _classCallCheck(this, IPLDResolver);\n\n    var options = mergeOptions(IPLDResolver.defaultOptions, userOptions);\n\n    if (!options.blockService) {\n      throw new Error('Missing blockservice');\n    }\n\n    this.bs = options.blockService; // Object with current list of active resolvers\n\n    this.resolvers = {}; // API entry point\n\n    this.support = {}; // Adds support for an IPLD format\n\n    this.support.add = function (multicodec, resolver, util) {\n      if (_this.resolvers[multicodec]) {\n        throw new Error('Resolver already exists for codec \"' + multicodec + '\"');\n      }\n\n      _this.resolvers[multicodec] = {\n        resolver: resolver,\n        util: util\n      };\n    };\n\n    this.support.load = options.loadFormat || function (codec, callback) {\n      callback(new Error(\"No resolver found for codec \\\"\".concat(codec, \"\\\"\")));\n    };\n\n    this.support.rm = function (multicodec) {\n      if (_this.resolvers[multicodec]) {\n        delete _this.resolvers[multicodec];\n      }\n    }; // Enable all supplied formats\n\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = options.formats[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var format = _step.value;\n        var resolver = format.resolver,\n            util = format.util;\n        var multicodec = resolver.multicodec;\n        this.support.add(multicodec, resolver, util);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  _createClass(IPLDResolver, [{\n    key: \"get\",\n    value: function get(cid, path, options, callback) {\n      var _this2 = this;\n\n      if (typeof path === 'function') {\n        callback = path;\n        path = undefined;\n      }\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      } // this removes occurrences of ./, //, ../\n      // makes sure that path never starts with ./ or /\n      // path.join is OS specific. Need to convert back to POSIX format.\n\n\n      if (typeof path === 'string') {\n        path = joinPath('/', path).substr(1).split(osPathSep).join('/');\n      }\n\n      if (path === '' || !path) {\n        return this._get(cid, function (err, node) {\n          if (err) {\n            return callback(err);\n          }\n\n          callback(null, {\n            value: node,\n            remainderPath: '',\n            cid: cid\n          });\n        });\n      }\n\n      var value;\n      doUntil(function (cb) {\n        _this2._getFormat(cid.codec, function (err, format) {\n          if (err) return cb(err); // get block\n          // use local resolver\n          // update path value\n\n          _this2.bs.get(cid, function (err, block) {\n            if (err) {\n              return cb(err);\n            }\n\n            format.resolver.resolve(block.data, path, function (err, result) {\n              if (err) {\n                return cb(err);\n              }\n\n              value = result.value;\n              path = result.remainderPath;\n              cb();\n            });\n          });\n        });\n      }, function () {\n        var endReached = !path || path === '' || path === '/';\n        var isTerminal = value && !IPLDResolver._maybeCID(value);\n\n        if (endReached && isTerminal || options.localResolve) {\n          cid = IPLDResolver._maybeCID(value) || cid;\n          return true;\n        } else {\n          value = IPLDResolver._maybeCID(value); // continue traversing\n\n          if (value) {\n            cid = value;\n          }\n\n          return false;\n        }\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n\n        return callback(null, {\n          value: value,\n          remainderPath: path,\n          cid: cid\n        });\n      });\n    }\n  }, {\n    key: \"getStream\",\n    value: function getStream(cid, path, options) {\n      var deferred = pullDeferSource();\n      this.get(cid, path, options, function (err, result) {\n        if (err) {\n          return deferred.resolve(pull.error(err));\n        }\n\n        deferred.resolve(pull.values([result]));\n      });\n      return deferred;\n    }\n    /**\n     * Get multiple nodes back from an array of CIDs.\n     *\n     * @param {Array<CID>} cids\n     * @param {function(Error, Array)} callback\n     * @returns {void}\n     */\n\n  }, {\n    key: \"getMany\",\n    value: function getMany(cids, callback) {\n      var _this3 = this;\n\n      if (!Array.isArray(cids)) {\n        return callback(new Error('Argument must be an array of CIDs'));\n      }\n\n      this.bs.getMany(cids, function (err, blocks) {\n        if (err) {\n          return callback(err);\n        }\n\n        map(blocks, function (block, mapCallback) {\n          _this3._getFormat(block.cid.codec, function (err, format) {\n            if (err) return mapCallback(err);\n            format.util.deserialize(block.data, mapCallback);\n          });\n        }, callback);\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(node, options, callback) {\n      var _this4 = this;\n\n      if (typeof options === 'function') {\n        callback = options;\n        return setImmediate(function () {\n          return callback(new Error('IPLDResolver.put requires options'));\n        });\n      }\n\n      callback = callback || noop;\n\n      if (options.cid && CID.isCID(options.cid)) {\n        if (options.onlyHash) {\n          return setImmediate(function () {\n            return callback(null, options.cid);\n          });\n        }\n\n        return this._put(options.cid, node, callback);\n      }\n\n      this._getFormat(options.format, function (err, format) {\n        if (err) return callback(err);\n        format.util.cid(node, options, function (err, cid) {\n          if (err) {\n            return callback(err);\n          }\n\n          if (options.onlyHash) {\n            return callback(null, cid);\n          }\n\n          _this4._put(cid, node, callback);\n        });\n      });\n    }\n  }, {\n    key: \"treeStream\",\n    value: function treeStream(cid, path, options) {\n      var _this5 = this;\n\n      if (typeof path === 'object') {\n        options = path;\n        path = undefined;\n      }\n\n      options = options || {};\n      var p;\n\n      if (!options.recursive) {\n        p = pullDeferSource();\n        waterfall([function (cb) {\n          return _this5._getFormat(cid.codec, cb);\n        }, function (format, cb) {\n          return _this5.bs.get(cid, function (err, block) {\n            if (err) return cb(err);\n            cb(null, format, block);\n          });\n        }, function (format, block, cb) {\n          return format.resolver.tree(block.data, cb);\n        }], function (err, paths) {\n          if (err) {\n            p.abort(err);\n            return p;\n          }\n\n          p.resolve(pull.values(paths));\n        });\n      } // recursive\n\n\n      if (options.recursive) {\n        p = pull(pullTraverse.widthFirst({\n          basePath: null,\n          cid: cid\n        }, function (el) {\n          // pass the paths through the pushable pull stream\n          // continue traversing the graph by returning\n          // the next cids with deferred\n          if (typeof el === 'string') {\n            return pull.empty();\n          }\n\n          var deferred = pullDeferSource();\n          var cid = el.cid;\n          waterfall([function (cb) {\n            return _this5._getFormat(cid.codec, cb);\n          }, function (format, cb) {\n            return _this5.bs.get(cid, function (err, block) {\n              if (err) return cb(err);\n              cb(null, format, block);\n            });\n          }, function (format, block, cb) {\n            return format.resolver.tree(block.data, function (err, paths) {\n              if (err) {\n                return cb(err);\n              }\n\n              map(paths, function (p, cb) {\n                format.resolver.isLink(block.data, p, function (err, link) {\n                  if (err) {\n                    return cb(err);\n                  }\n\n                  cb(null, {\n                    path: p,\n                    link: link\n                  });\n                });\n              }, cb);\n            });\n          }], function (err, paths) {\n            if (err) {\n              deferred.abort(err);\n              return deferred;\n            }\n\n            deferred.resolve(pull.values(paths.map(function (p) {\n              var base = el.basePath ? el.basePath + '/' + p.path : p.path;\n\n              if (p.link) {\n                return {\n                  basePath: base,\n                  cid: IPLDResolver._maybeCID(p.link)\n                };\n              }\n\n              return base;\n            })));\n          });\n          return deferred;\n        }), pull.map(function (e) {\n          if (typeof e === 'string') {\n            return e;\n          }\n\n          return e.basePath;\n        }), pull.filter(Boolean));\n      } // filter out by path\n\n\n      if (path) {\n        return pull(p, pull.map(function (el) {\n          if (el.indexOf(path) === 0) {\n            el = el.slice(path.length + 1);\n            return el;\n          }\n        }), pull.filter(Boolean));\n      }\n\n      return p;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(cids, callback) {\n      this.bs.delete(cids, callback);\n    }\n    /*           */\n\n    /* internals */\n\n    /*           */\n\n  }, {\n    key: \"_get\",\n    value: function _get(cid, callback) {\n      var _this6 = this;\n\n      waterfall([function (cb) {\n        return _this6._getFormat(cid.codec, cb);\n      }, function (format, cb) {\n        return _this6.bs.get(cid, function (err, block) {\n          if (err) return cb(err);\n          cb(null, format, block);\n        });\n      }, function (format, block, cb) {\n        format.util.deserialize(block.data, function (err, deserialized) {\n          if (err) {\n            return cb(err);\n          }\n\n          cb(null, deserialized);\n        });\n      }], callback);\n    }\n  }, {\n    key: \"_getFormat\",\n    value: function _getFormat(codec, callback) {\n      var _this7 = this;\n\n      if (this.resolvers[codec]) {\n        return callback(null, this.resolvers[codec]);\n      } // If not supported, attempt to dynamically load this format\n\n\n      this.support.load(codec, function (err, format) {\n        if (err) return callback(err);\n        _this7.resolvers[codec] = format;\n        callback(null, format);\n      });\n    }\n  }, {\n    key: \"_put\",\n    value: function _put(cid, node, callback) {\n      var _this8 = this;\n\n      callback = callback || noop;\n      waterfall([function (cb) {\n        return _this8._getFormat(cid.codec, cb);\n      }, function (format, cb) {\n        return format.util.serialize(node, cb);\n      }, function (buf, cb) {\n        return _this8.bs.put(new Block(buf, cid), cb);\n      }], function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, cid);\n      });\n    }\n    /**\n     * Return a CID instance if it is a link.\n     *\n     * If something is a link `{\"/\": \"baseencodedcid\"}` or a CID, then return\n     * a CID object, else return `null`.\n     *\n     * @param {*} link - The object to check\n     * @returns {?CID} - A CID instance\n     */\n\n  }], [{\n    key: \"_maybeCID\",\n    value: function _maybeCID(link) {\n      if (CID.isCID(link)) {\n        return link;\n      }\n\n      if (link && link['/'] !== undefined) {\n        return new CID(link['/']);\n      }\n\n      return null;\n    }\n  }]);\n\n  return IPLDResolver;\n}();\n/**\n * Default options for IPLD.\n */\n\n\nIPLDResolver.defaultOptions = {\n  formats: [ipldDagCbor, ipldDagPb, ipldRaw]\n};\nmodule.exports = IPLDResolver;","'use strict';\n\nexports.resolver = require('./resolver.js');\nexports.util = require('./util.js');","'use strict';\n\nexports.util = require('./util.js');\nexports.resolver = require('./resolver.js');","'use strict';\n\nexports.resolver = require('./resolver.js');\nexports.util = require('./util.js');","'use strict';\n\nexports.ethAccountSnapshot = require('../eth-account-snapshot');\nexports.ethBlock = require('../eth-block');\nexports.ethBlockList = require('../eth-block-list');\nexports.ethStateTrie = require('../eth-state-trie');\nexports.ethStorageTrie = require('../eth-storage-trie');\nexports.ethTx = require('../eth-tx');\nexports.ethTxTrie = require('../eth-tx-trie');"],"sourceRoot":""}