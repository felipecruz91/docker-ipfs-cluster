{"version":3,"sources":["components/button/Button.js","components/shell/Shell.js","components/about-ipfs/AboutIpfs.js","welcome/WelcomePage.js"],"names":["Button","_ref","_ref$bg","bg","_ref$color","color","_ref$className","className","disabled","danger","_ref$minWidth","minWidth","children","style","props","Object","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","colorClass","cls","concat","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","assign","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Shell","title","react_i18next__WEBPACK_IMPORTED_MODULE_1__","_box_Box__WEBPACK_IMPORTED_MODULE_2__","translate","t","i18nKey","target","rel","href","ConnectionStatus","_ref2","connected","sameOrigin","react__WEBPACK_IMPORTED_MODULE_7___default","react_i18next__WEBPACK_IMPORTED_MODULE_10__","defaultDomains","origin","window","location","addOrigin","indexOf","_components_shell_Shell_js__WEBPACK_IMPORTED_MODULE_14__","join","ApiAddressForm","_this","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onChange","event","val","value","setState","onKeyPress","key","onSubmit","_ref3","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","preventDefault","updateAddress","state","stop","_x","apply","arguments","defaultValue","htmlFor","id","type","_components_button_Button__WEBPACK_IMPORTED_MODULE_12__","React","Component","connect","doUpdateIpfsApiAddress","apiUrl","ipfsInitFailed","ipfsConnected","ipfsReady","ipfsApiAddress","_loader_ComponentLoader_js__WEBPACK_IMPORTED_MODULE_15__","pastDelay","isSameOrigin","react_helmet__WEBPACK_IMPORTED_MODULE_8__","_components_box_Box__WEBPACK_IMPORTED_MODULE_11__","maxWidth","_components_about_ipfs_AboutIpfs__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"static/js/13.7520c23d.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nconst Button = ({ bg = 'bg-aqua', color = 'white', className = '', disabled, danger, minWidth = 140, children, style, ...props }) => {\n  const bgClass = danger ? 'bg-red' : disabled ? 'bg-gray-muted' : bg\n  const colorClass = danger ? 'white' : disabled ? 'light-gray' : color\n  const cls = `Button transition-all sans-serif dib v-mid fw5 nowrap lh-copy bn br1 pa2 pointer focus-outline ${bgClass} ${colorClass} ${className}`\n  return (\n    <button className={cls} disabled={disabled} style={{ minWidth, ...style }} {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nconst Shell = ({\n  title = 'Shell',\n  children\n}) => {\n  return (\n    <div className='mw6 br1 overflow-hidden'>\n      <div className='f7 mb0 sans-serif ttu tracked charcoal pv1 pl2 bg-black-20'>Shell</div>\n      <div className='bg-black-70 snow pa2 f7 lh-copy monospace nowrap overflow-x-auto'>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Shell\n","import React from 'react'\nimport { translate, Trans } from 'react-i18next'\nimport Box from '../box/Box'\n\nexport const AboutIpfs = ({ t }) => {\n  return (\n    <Box>\n      <h1 className='mt0 mb3 montserrat fw4 f4 charcoal'>{t('aboutIpfs.header')}</h1>\n      <Trans i18nKey='aboutIpfs.paragraph1'>\n        <p className='mt0'><strong>IPFS is a protocol</strong> that defines a content-addressed file system, coordinates content delivery and combines ideas from Kademlia, BitTorrent, Git and more.</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph2'>\n        <p><strong>IPFS is a filesystem.</strong> It has directories and files and mountable filesystem via FUSE.</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph3'>\n        <p><strong>IPFS is a web.</strong> iles are accessible via HTTP gateways like <code className='f7'>https://ipfs.io</code>. Browsers <a className='link blue' target='_blank' rel='noopener noreferrer' href='https://github.com/ipfs-shipyard/ipfs-companion#release-channel'>can be extended</a> to use the <code className='f7'>ipfs://</code> scheme directly, and hash-addressed content guarantees authenticity</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph4'>\n        <p><strong>IPFS is p2p.</strong> It supports worldwide peer-to-peer file transfers with a completely decentralized architecture and no central point of failure.</p>\n      </Trans>\n      <Trans i18nKey='aboutIpfs.paragraph5'>\n        <p><strong>IPFS is a CDN.</strong> Add a file to your local repository, and it's now available to the world with cache-friendly content-hash addressing and bittorrent-like bandwidth distribution.</p>\n      </Trans>\n    </Box>\n  )\n}\n\nexport default translate('welcome')(AboutIpfs)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { connect } from 'redux-bundler-react'\nimport { translate, Trans } from 'react-i18next'\nimport Box from '../components/box/Box'\nimport Button from '../components/button/Button'\nimport AboutIpfs from '../components/about-ipfs/AboutIpfs'\nimport Shell from '../components/shell/Shell.js'\nimport ComponentLoader from '../loader/ComponentLoader.js'\n\nconst WelcomePage = ({ t, doUpdateIpfsApiAddress, apiUrl, ipfsInitFailed, ipfsConnected, ipfsReady, ipfsApiAddress }) => {\n  if (!ipfsInitFailed && !ipfsReady) {\n    return <ComponentLoader pastDelay />\n  }\n\n  const isSameOrigin = window.location.origin === apiUrl\n\n  return (\n    <div>\n      <Helmet>\n        <title>{t('title')}</title>\n      </Helmet>\n      <div className='flex'>\n        <div className='flex-auto pr3 lh-copy charcoal'>\n          <Box>\n            <ConnectionStatus connected={ipfsConnected} sameOrigin={isSameOrigin} t={t} />\n            <h1 className='montserrat fw2 navy mb0 mt5 f3 yellow'>{t('configureApiPort.header')}</h1>\n            <Trans i18nKey='configureApiPort.paragraph1'>\n              <p>If your IPFS node is configured with a <a className='link blue' href='https://github.com/ipfs/go-ipfs/blob/master/docs/config.md#addresses' target='_blank' rel='noopener noreferrer'>custom API address</a>, please set it here</p>\n            </Trans>\n            <ApiAddressForm\n              t={t}\n              defaultValue={ipfsApiAddress}\n              updateAddress={doUpdateIpfsApiAddress} />\n          </Box>\n        </div>\n        <div className='measure lh-copy dn db-l flex-none mid-gray f6' style={{ maxWidth: '40%' }}>\n          <AboutIpfs />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectionStatus = ({ t, connected, sameOrigin }) => {\n  if (connected) {\n    return (\n      <div>\n        <h1 className='montserrat fw2 navy ma0 f3 green'>{t('connected.header')}</h1>\n        <Trans i18nKey='connected.paragraph1'>\n          <p>Now, it's time for you to explore your node. Head to <a className='link blue' href='#/files/'>Files page</a> to manage and share your files, or explore the <a className='link blue' href='https://www.youtube.com/watch?v=Bqs_LzBjQyk'>Merkle Forest</a> of peer-hosted hash-linked data via <a className='link blue' href='#/explore'>IPLD explorer</a>.</p>\n        </Trans>\n        <Trans i18nKey='connected.paragraph2'>\n          <p>You can always come back to this address to change the IPFS node you're connected to.</p>\n        </Trans>\n      </div>\n    )\n  }\n\n  const defaultDomains = ['http://127.0.0.1:5001', 'https://webui.ipfs.io']\n  const origin = window.location.origin\n  const addOrigin = defaultDomains.indexOf(origin) === -1\n\n  return (\n    <div>\n      <h1 className='montserrat fw2 navy ma0 f3 yellow'>{t('notConnected.header')}</h1>\n      <Trans i18nKey='notConnected.paragraph1'>\n        <p>Failed to connect to the API.</p>\n      </Trans>\n      { !sameOrigin && (\n        <div>\n          <Trans i18nKey='notConnected.paragraph2'>\n            <p>Make sure you <a className='link blue' href='https://github.com/ipfs-shipyard/ipfs-webui#configure-ipfs-api-cors-headers'>configure your IPFS API</a> to allow cross-origin (CORS) requests, running the commands below:</p>\n          </Trans>\n          <Shell>\n            <code className='db'>$ ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[{addOrigin && `\"${origin}\", `}\"{defaultDomains.join('\", \"')}\"]'</code>\n            <code className='db'>$ ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"GET\", \"POST\"]'</code>\n          </Shell>\n        </div>\n      )}\n      <Trans i18nKey='notConnected.paragraph3'>\n        <p>Start an IPFS daemon in a terminal:</p>\n      </Trans>\n      <Shell>\n        <code className='db'>$ ipfs daemon</code>\n        <code className='db'>Initializing daemon...</code>\n        <code className='db'>API server listening on /ip4/127.0.0.1/tcp/5001</code>\n      </Shell>\n      <Trans i18nKey='notConnected.paragraph4'>\n        <p>For more info on how to get started with IPFS you can <a className='link blue' href='https://docs.ipfs.io/introduction/usage/'>read the guide</a>.</p>\n      </Trans>\n    </div>\n  )\n}\n\nclass ApiAddressForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { value: props.defaultValue }\n  }\n\n  onChange = (event) => {\n    let val = event.target.value\n    this.setState({ value: val })\n  }\n\n  onKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      this.onSubmit(event)\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault()\n    this.props.updateAddress(this.state.value)\n  }\n\n  render () {\n    const { t } = this.props\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label htmlFor='api-address' className='db f7 mb2 ttu tracked charcoal pl1'>{t('apiAddressForm.apiLabel')}</label>\n        <input id='api-address'\n          type='text'\n          className='w-100 lh-copy monospace f5 pl1 pv1 mb2 charcoal input-reset ba b--black-20 br1 focus-outline'\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          value={this.state.value} />\n        <div className='tr'>\n          <Button>{t('apiAddressForm.submitButton')}</Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default connect(\n  'doUpdateIpfsApiAddress',\n  'selectIpfsInitFailed',\n  'selectIpfsConnected',\n  'selectIpfsReady',\n  'selectIpfsApiAddress',\n  'selectApiUrl',\n  translate('welcome')(WelcomePage)\n)\n"],"sourceRoot":""}