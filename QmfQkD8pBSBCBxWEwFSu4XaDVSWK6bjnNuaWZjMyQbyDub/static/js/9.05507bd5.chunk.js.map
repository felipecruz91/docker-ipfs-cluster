{"version":3,"sources":["../node_modules/lodash/_baseEach.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toNumber.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["baseForOwn","__webpack_require__","baseEach","createBaseEach","module","exports","toNumber","INFINITY","MAX_INTEGER","value","isArrayLike","eachFunc","fromRight","collection","iteratee","length","index","iterable","Object","find","createFind","baseIteratee","keys","findIndexFunc","predicate","fromIndex","key","undefined","baseFindIndex","toInteger","nativeMax","Math","max","array","toFinite","result","remainder","isObject","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","replace","isBinary","test","slice","process","d","__webpack_exports__","Doughnut","Line","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_GIT_REV","REACT_APP_VERSION","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","_this2","a","helpers","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","Pie","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","Bar","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","Radar","_this14","_ref6","_React$Component8","Polar","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","isArray","substr","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseIsEqual","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","initializer","accumulator"],"mappings":"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","file":"static/js/9.05507bd5.chunk.js","sourcesContent":["var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}